{
  "item": [
    {
      "id": "73649368-2bd5-4337-828f-bbfe6d4cff88",
      "name": "Account",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "51348d56-8450-4fe6-856c-464b73b61128",
          "name": "List my Accounts",
          "request": {
            "name": "List my Accounts",
            "description": {
              "content": "Retrieves the accounts the authenticated user is part of. \nNote: for service users only the account where the user is defined is returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "accounts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "9ca32258-cc29-43ea-a43a-951a539d9e08",
      "name": "Custom Field",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e97b8265-7d3e-4922-8de8-65e2a9e89b00",
          "name": "List Custom Field Definitions",
          "request": {
            "name": "List Custom Field Definitions",
            "description": {
              "content": "Retrieves a list of all the custom field definitions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "dcb9b6b1-73f3-421d-b4bf-7145287ccc07",
          "name": "Get Custom Field Definition",
          "request": {
            "name": "Get Custom Field Definition",
            "description": {
              "content": "Retrieves a Custom Field by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions",
                ":customFieldDefinitionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "customFieldDefinitionId",
                  "description": "(Required) The custom field definition identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "46e9dbb2-1548-458e-9e38-100ca675ecfe",
      "name": "Customer",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0ee9bfd0-c320-4c20-a377-af27350447f0",
          "name": "Get Customer",
          "request": {
            "name": "Get Customer",
            "description": {
              "content": "Retrieves a customer by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "customerId",
                  "description": "(Required) The customer identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0f54bbbe-5073-439f-a9e8-b10c30241a9f",
          "name": "List Customers",
          "request": {
            "name": "List Customers",
            "description": {
              "content": "Retrieves a list of all the customers in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "e473a6bc-9331-4b4e-937a-8c0f4ab6ffdd",
      "name": "File Processing Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "db764417-0893-4533-803a-53d42daf7d79",
          "name": "Get File Processing Configuration",
          "request": {
            "name": "Get File Processing Configuration",
            "description": {
              "content": "Retrieves a file processing configuration by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "description": "(Required) The file processing configuration identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5bea1a6c-8585-4f15-86a8-488114df3e65",
          "name": "List File Processing Configurations",
          "request": {
            "name": "List File Processing Configurations",
            "description": {
              "content": "Retrieves a list of all the file processing configurations in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6eb1bc4f-be0f-49d2-9bac-68c881c57cde",
          "name": "Get File Type Setting",
          "request": {
            "name": "Get File Type Setting",
            "description": {
              "content": "Retrieves a file type setting by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId",
                "file-type-settings",
                ":fileTypeSettingId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "description": "(Required) The file processing configuration identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileTypeSettingId",
                  "description": "(Required) The file type setting identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3d0f061d-156d-419f-9be1-a2b16876c04a",
          "name": "List File Type Settings",
          "request": {
            "name": "List File Type Settings",
            "description": {
              "content": "Retrieves a list of all the file type settings in a file processing configuration.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId",
                "file-type-settings"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "description": "(Required) The file processing configuration identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ff3d06f4-9673-48a2-9199-bf09f5656e65",
      "name": "File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a538473c-15ca-4d70-82f8-5435e7300d70",
          "name": "Upload Zip File",
          "request": {
            "name": "Upload Zip File",
            "description": {
              "content": "Uploads an archive with source files in a .zip format, to be extracted and used at project creation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The .zip file to be uploaded.  "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c4548b5f-fcc8-44f9-9fb5-e1863c07f947",
          "name": "Poll Upload Zip File",
          "request": {
            "name": "Poll Upload Zip File",
            "description": {
              "content": "Monitors the unzipping operation for a previously uploaded archive and gets details on the extracted files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "files",
                ":fileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "description": "(Required) The uploaded file id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "26836562-531f-40c8-948a-c75c64322cb9",
      "name": "Folder",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a8d549aa-cbd6-4197-a85a-f97faae26e50",
          "name": "Get Folder",
          "request": {
            "name": "Get Folder",
            "description": {
              "content": "Retrieves a folder by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                ":folderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "folderId",
                  "description": "(Required) The folder identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0d098ac9-cc38-4d37-80b0-a3816d5c31d3",
          "name": "Get Root Folder",
          "request": {
            "name": "Get Root Folder",
            "description": {
              "content": "Retrieves the Root folder in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                "root"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "dce8f9e2-44c8-4000-920e-eb220b3040d8",
          "name": "List Folders",
          "request": {
            "name": "List Folders",
            "description": {
              "content": "Retrieves a list of all the folders in an account. Max 500.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter folders by name."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "e9780d85-88a9-4943-8978-6719ad665ca2",
      "name": "Group",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f1cc7927-2a4c-4263-8ca6-679810bbb78c",
          "name": "Get Group",
          "request": {
            "name": "Get Group",
            "description": {
              "content": "Retrieves a group by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups",
                ":groupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "groupId",
                  "description": "(Required) The group identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c503ecdc-dccd-489c-9800-66325d135ef2",
          "name": "List Groups",
          "request": {
            "name": "List Groups",
            "description": {
              "content": "Retrieves a list of all the groups in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "2969c747-02a8-4718-888e-1076927de0f7",
      "name": "Language",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8fd55a13-27d5-4140-9043-9d7e76252741",
          "name": "List Languages",
          "request": {
            "name": "List Languages",
            "description": {
              "content": "Retrieves a list of all the languages.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "languages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "languageCodes",
                  "value": "<string>,<string>",
                  "description": "Filter by language codes."
                },
                {
                  "disabled": true,
                  "key": "type",
                  "value": "<string>",
                  "description": "Filter by type."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "4c245a59-0811-438d-b280-c70f9d454245",
      "name": "Language Processing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9e10052b-c88c-4cbb-a4c5-91b06f6b5eba",
          "name": "List Language Processing Rules",
          "request": {
            "name": "List Language Processing Rules",
            "description": {
              "content": "Returns a list of Language Processing Rules.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "language-processing-rules"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "01fc51bd-b435-41b6-aace-e77fb8f5051e",
          "name": "Get Language Processing Rule",
          "request": {
            "name": "Get Language Processing Rule",
            "description": {
              "content": "Returns a Language Processing Rule by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "language-processing-rules",
                ":languageProcessingRuleId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "languageProcessingRuleId",
                  "description": "(Required) "
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "28729d77-3bf7-4b4c-a435-379c5e066640",
      "name": "Pricing Model",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6da113b4-43ea-4e53-b4b4-f49c3da4931d",
          "name": "List Pricing Models",
          "request": {
            "name": "List Pricing Models",
            "description": {
              "content": "Retrieves a list of all the pricing models in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "baf88c01-90a4-46c4-ba60-6df9544dcfbf",
          "name": "Get Pricing Model",
          "request": {
            "name": "Get Pricing Model",
            "description": {
              "content": "Retrieves a pricing model by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models",
                ":pricingModelId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "pricingModelId",
                  "description": "(Required) The pricing model identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "79c90489-3d3a-4824-ae13-89a2d978b5e1",
      "name": "Project",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "76dc73cb-aaa1-426e-b0c0-80aef6dce715",
          "name": "List Projects",
          "request": {
            "name": "List Projects",
            "description": {
              "content": "Retrieves a list of all the projects in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "excludeOnline",
                  "value": "<boolean>",
                  "description": "Excludes projects that are being worked on exclusively in the Online Editor"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "65b42a75-9a4a-4710-902d-fd9dfdcd6578",
          "name": "Create Project",
          "request": {
            "name": "Create Project",
            "description": {
              "content": "Creates a new project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueBy\": \"<dateTime>\",\n  \"projectTemplate\": {\n    \"id\": \"<string>\"\n  },\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"location\": \"<string>\",\n  \"translationEngine\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"fileProcessingConfiguration\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"workflow\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"pricingModel\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"customFields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    }\n  ],\n  \"tqaProfile\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"forceOnline\": \"<boolean>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "40aa263d-65e6-4b59-8f23-053123acca9f",
          "name": "Get Project",
          "request": {
            "name": "Get Project",
            "description": {
              "content": "Retrieves a project by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "040603eb-b637-4c67-a70b-d347536c0ac9",
          "name": "Update Project",
          "request": {
            "name": "Update Project",
            "description": {
              "content": "Updates the project in terms of: name, description, due date, quote, and project resources. Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueBy\": \"<dateTime>\",\n  \"translationEngine\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"fileProcessingConfiguration\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"pricingModel\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"workflow\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"projectPlan\": {\n    \"taskConfigurations\": [\n      {\n        \"taskTemplate\": {\n          \"id\": \"<string>\"\n        },\n        \"isSkipped\": \"<boolean>\",\n        \"assignees\": [\n          {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n          }\n        ],\n        \"scope\": {\n          \"type\": \"<string>\",\n          \"targetLanguage\": {\n            \"languageCode\": \"<string>\"\n          }\n        },\n        \"dueBy\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"tqaProfile\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"quote\": {\n    \"languageCosts\": [\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      }\n    ],\n    \"additionalCosts\": [\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      }\n    ]\n  },\n  \"customFields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e74ab620-5eb3-4d75-b198-128619a6bc46",
          "name": "Delete Project",
          "request": {
            "name": "Delete Project",
            "description": {
              "content": "Deletes a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2c808e71-d6c6-4f1b-9c6e-baf9fbc9d880",
          "name": "Get Project Configuration",
          "request": {
            "name": "Get Project Configuration",
            "description": {
              "content": "Get the configuration settings of an existing project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "configuration"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1bf7a6b8-63a3-4fb8-b3a3-b408ad448038",
          "name": "Update Project Configuration",
          "request": {
            "name": "Update Project Configuration",
            "description": {
              "content": "Updates the configuration settings for an existing project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "configuration"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"translationMemoryFieldsSettings\": {\n    \"settings\": [\n      {\n        \"name\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": \"<string>\"\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6f823167-e13a-4c42-bd35-55661919c57c",
          "name": "Start Project",
          "request": {
            "name": "Start Project",
            "description": {
              "content": "Starts a project. Translatable files should be uploaded before starting the project. If the action is executed on an already started project, the new translatable files should be uploaded first.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "start"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d6f1a564-bc22-45eb-8c71-452c7efc5637",
          "name": "Complete Project",
          "request": {
            "name": "Complete Project",
            "description": {
              "content": "Marks a project as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4bef60b1-eafd-47d6-873b-aaeaf9cb6d0d",
          "name": "Cancel Project File",
          "request": {
            "name": "Cancel Project File",
            "description": {
              "content": "Cancels a project file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "files",
                ":fileId",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "description": "(Required) The file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ac6463ef-ddaf-4812-a28f-c8a6dcf454fa",
          "name": "List Project's Tasks",
          "request": {
            "name": "List Project's Tasks",
            "description": {
              "content": "Lists the tasks of a specific project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "f0dc0a05-8503-49d4-8ba3-fd312cc0862a",
      "name": "Project Template",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f05be6f6-37b6-49d1-b38f-8bb594e7a3fe",
          "name": "Get Project Template",
          "request": {
            "name": "Get Project Template",
            "description": {
              "content": "Retrieves a project template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates",
                ":projectTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectTemplateId",
                  "description": "(Required) The project template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b1e9b002-b5ed-46f9-a3c7-f6010d49a12f",
          "name": "List Project Templates",
          "request": {
            "name": "List Project Templates",
            "description": {
              "content": "Retrieves a list of all the project templates in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter by name."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "82b75c00-12fc-42bd-b7f4-47031b4d11d3",
      "name": "Public Keys",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "676702e6-a043-436f-ae32-7fbf8345f6e0",
          "name": "List Public Keys",
          "request": {
            "name": "List Public Keys",
            "description": {
              "content": "List all available Public Keys.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ".well-known",
                "jwks.json"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "97f927a0-17af-4541-b082-638dfb9b70f0",
          "name": "Get Public Key",
          "request": {
            "name": "Get Public Key",
            "description": {
              "content": "Retrieves a public key by it's identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ".well-known",
                "jwks.json",
                ":kid"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "kid",
                  "description": "(Required) The key identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "9b6f0054-c513-4837-ab58-80e196e231eb",
      "name": "Quote",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0106aa54-0533-4710-9fc0-1b0a79982ca9",
          "name": "Export Quote",
          "request": {
            "name": "Export Quote",
            "description": {
              "content": "Exports the quote for a project in either PDF or Excel format.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format for the downloaded quote."
                },
                {
                  "disabled": true,
                  "key": "languageId",
                  "value": "en",
                  "description": "The language used for the quote's localization."
                },
                {
                  "disabled": true,
                  "key": "timeZoneOffset",
                  "value": "<integer>",
                  "description": "The Time Zone Offset for date-time fields."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "646dc560-2adc-44b2-afb3-b6c3522c91c9",
          "name": "Export Quote Report",
          "request": {
            "name": "Export Quote Report",
            "description": {
              "content": "Generates an asynchronous quote export operation for the project in either PDF or Excel format. Use the [polling endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1export/get) to check when the export is completed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report",
                "export"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format for the downloaded quote."
                },
                {
                  "disabled": true,
                  "key": "languageId",
                  "value": "en",
                  "description": "The language used for quote localization."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a32a2b25-cc92-4855-b536-b9339f55cd4b",
          "name": "Poll Quote Report Export",
          "request": {
            "name": "Poll Quote Report Export",
            "description": {
              "content": "Polls a quote report via an export operation. The quote report can be [downloaded](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1download/get) once the status is \"completed\". The recommended polling interval is 20 seconds. If polling does not return a success status in 20 minutes, it should be abandoned and a new export should be retried.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report",
                "export"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format for the downloaded quote. It must match the format provided in Export Quote Report."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c2322123-1313-4ec1-8d37-ef1c126e6f03",
          "name": "Download Exported Quote Report",
          "request": {
            "name": "Download Exported Quote Report",
            "description": {
              "content": "Downloads a quote report generated by the [asynchronous export operation](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1export/post). ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format for the downloaded quote. It must match the format provided in Export Quote Report."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "fb36926e-f94a-41f5-9b2c-b28032be9a86",
      "name": "Source File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "97e013c4-0e7f-4e35-916c-b3454fca60a0",
          "name": "List Source Files",
          "request": {
            "name": "List Source Files",
            "description": {
              "content": "Retrieves the source files in a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a31d3c2d-c81b-442a-8aa5-daca1996e36d",
          "name": "Add Source File",
          "request": {
            "name": "Add Source File",
            "description": {
              "content": "Adds a source file to the project. Files can be uploaded before starting a project or after the project has started. When adding the file after the project started, a new start project request should be performed.\n\n> Note: The maximum character size of the sum between the `name` and the `path` fields must not exceed 200. Otherwise the request cannot be validated.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "properties",
                  "value": "{\"name\":\"<string>\",\"role\":\"<string>\",\"type\":\"<string>\",\"language\":\"<string>\",\"targetLanguages\":[\"<string>\",\"<string>\"],\"path\":[\"<string>\",\"<string>\"]}",
                  "type": "text",
                  "description": "(Required) "
                },
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "556544dc-77b4-4b11-b97d-8adecf86d3e8",
          "name": "Update Source Files",
          "request": {
            "name": "Update Source Files",
            "description": {
              "content": "Updates multiple source files. If any of the files fails to be updated, an error will be returned for each file. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"files\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateTargetFilesName\": false\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateTargetFilesName\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1138b046-9cdb-49f8-932a-c71bd8d5c17f",
          "name": "Attach Source Files",
          "request": {
            "name": "Attach Source Files",
            "description": {
              "content": "Adds multiple source files to the project. Files must be uploaded before attaching them to a project. When a file is attached after the project was started, a new start project request should be performed.\n\n\n> Note: The maximum character size of the sum between the `name` and the `path` fields must not exceed 200. Otherwise the request cannot be validated.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                "attach-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourceFilesAttachment\": [\n    {\n      \"name\": \"<string>\",\n      \"role\": \"<string>\",\n      \"fileUrl\": \"<string>\",\n      \"type\": \"<string>\",\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguages\": [\n        {\n          \"languageCode\": \"<string>\"\n        },\n        {\n          \"languageCode\": \"<string>\"\n        }\n      ],\n      \"path\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"role\": \"<string>\",\n      \"fileUrl\": \"<string>\",\n      \"type\": \"<string>\",\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguages\": [\n        {\n          \"languageCode\": \"<string>\"\n        },\n        {\n          \"languageCode\": \"<string>\"\n        }\n      ],\n      \"path\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "45455495-0194-47a2-8bde-0708fbe8e4d8",
          "name": "Get Source File",
          "request": {
            "name": "Get Source File",
            "description": {
              "content": "Retrieves a source file from the project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1fe02d5f-e059-47d7-b606-398cb31b9ac7",
          "name": "Update Source File",
          "request": {
            "name": "Update Source File",
            "description": {
              "content": "Updates a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"updateTargetFilesName\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "32a51a72-2a38-4ef6-80af-bc72573238ff",
          "name": "List Source File Versions",
          "request": {
            "name": "List Source File Versions",
            "description": {
              "content": "Retrieves all the versions of a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b3d669ca-efd8-4895-8ac4-67c0d975daaa",
          "name": "Add Source File Version",
          "request": {
            "name": "Add Source File Version",
            "description": {
              "content": "Adds a new version of the source file in BCM or native format. More information about file formats can be found on the [File formats](../docs/File-formats.md) page.\n\nThe version is added on the task represented by `taskId`. To successfully  execute the add operation the task should already be assigned and accepted by a user. If the task is automatic, it's possible to add a source file version only when the status of task is `inProgress`.\n\nThe file versions added need to respect the output file type declared by the task type of the enclosing task. On the [Rules for sequencing tasks correctly](https://docs.rws.com/791595/885137/trados-enterprise/rules-for-sequencing-tasks-correctly) page from the official RWS Documentation Center, you can find out what output file type is supported by each task.\n\nFor adding a source file version using an extension task, the configuration of the task must declare the `scope`'s value as \"file\".\n\nIf the file type of the new added file is different than the supported source file type, the new `fileTypeSettingsId` should be specified in the body or an update of file type should be performed after the add operation, using the [Update Source File Properties](../reference/Public-API.v1.json/paths/~1tasks~1{taskId}~1source-files~1{sourceFileId}/put).\nThe value of `fileTypeSettingsId` should be one of the identifiers listed by the [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get) endpoint called with an identifier of a File Processing Configuration that exists on the project. The list of File Processing Configurations from a project can be retrieved by using the [List File Processing Configurations](reference/Public-API.v1.json/paths/~1file-processing-configurations/get) endpoint.\n\nThe multipart parameters in the body should respect and strictly follow the order specified in our documentation. \n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "source-files",
                ":sourceFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "properties",
                  "value": "{\"type\":\"<string>\",\"fileTypeSettingsId\":\"<string>\"}",
                  "type": "text",
                  "description": "(Required) "
                },
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The source file."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ae92cc70-2dba-4c2c-becd-a3a4abcc3dce",
          "name": "Download Source File Version",
          "request": {
            "name": "Download Source File Version",
            "description": {
              "content": "Downloads a source file version.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "746b45e9-8558-4ca4-9ca7-601a162834ac",
          "name": "Get Source File Properties",
          "request": {
            "name": "Get Source File Properties",
            "description": {
              "content": "Retrieves the properties for a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b0e27e00-54f2-4412-93c7-a9b94ef77f89",
          "name": "Update Source File Properties",
          "request": {
            "name": "Update Source File Properties",
            "description": {
              "content": "Updates the properties of the source file.\n\n\nThe value of `fileTypeSettingsId` should be one of the identifiers listed by the [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get) endpoint called with an identifier of a File Processing Configuration that exists on the project. The list of File Processing Configurations from a project can be retrieved by using the [List File Processing Configurations](reference/Public-API.v1.json/paths/~1file-processing-configurations/get) endpoint.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileRole\": \"<string>\",\n  \"fileTypeSettingsId\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "dbb22f8e-a5cd-474d-bf38-738a226902b1",
      "name": "Target File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "fabad8b9-2280-4578-a95d-b03a4367ad0f",
          "name": "Get Target File",
          "request": {
            "name": "Get Target File",
            "description": {
              "content": "Retrieves a target file from a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "01706885-30ae-455a-b603-ec26a15b6fd9",
          "name": "Update Target File",
          "request": {
            "name": "Update Target File",
            "description": {
              "content": "Updates a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "de7897b4-8592-4505-bfb7-10b02b4ce664",
          "name": "List Target Files",
          "request": {
            "name": "List Target Files",
            "description": {
              "content": "Retrieves the target files for a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "targetFileIds",
                  "value": "<string>,<string>",
                  "description": "Filter target files by identifiers."
                },
                {
                  "disabled": true,
                  "key": "sourceFileIds",
                  "value": "<string>,<string>",
                  "description": "Filter target files by the identifiers of the source file they were generated from."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "281b4774-9942-4c39-87ae-e45805524651",
          "name": "Update Target Files",
          "request": {
            "name": "Update Target Files",
            "description": {
              "content": "Updates multiple target files. If any of the files fails to be updated, an error will be returned for each file. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"files\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f5bc9a41-8e91-42f1-b021-db95e08df5d4",
          "name": "Get Target File Version",
          "request": {
            "name": "Get Target File Version",
            "description": {
              "content": "Retrieves one version of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3381e6b4-aa5a-4ae2-aee6-2c3c09ecae9e",
          "name": "List Target File Versions",
          "request": {
            "name": "List Target File Versions",
            "description": {
              "content": "Retrieves the versions of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "db82bb6e-da86-4eed-b799-b7a470a0b14d",
          "name": "Export Target File Version",
          "request": {
            "name": "Export Target File Version",
            "description": {
              "content": "Generates an asynchronous export operation. Use the [Get Target File Version Export](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1{fileVersionId}~1exports~1{exportId}/get) endpoint to poll until the export is completed. Used only for BCM file versions.\n\nThis operation triggers a conversion of the BCM target file version in a native or SDLXLIFF format, based on the value of the `format` query parameter used.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "format",
                  "value": "native",
                  "description": "The file format."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9074360b-7d8d-4401-a500-58dc13d8ddab",
          "name": "Poll Target File Version Export",
          "request": {
            "name": "Poll Target File Version Export",
            "description": {
              "content": "Polls a target file version via an export operation. The new version can be downloaded once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "16676f8c-9a9e-4ec1-bb6d-2beb30b1df0c",
          "name": "Download Exported Target File Version",
          "request": {
            "name": "Download Exported Target File Version",
            "description": {
              "content": "Downloads a completed target file version via an export operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ab3082dd-b08f-4100-a938-e97547c3ac73",
          "name": "Download Target File Version",
          "request": {
            "name": "Download Target File Version",
            "description": {
              "content": "Downloads the file version (native or BCM). \n\nIf the `fileVersionId` path parameter represents a native file version, the native file will be downloaded. If the `fileVersionId` is an identifier of a version in BCM format, the BCM file will be downloaded.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f85e2794-9b3f-4971-8f02-9b936e605ac8",
          "name": "Import Target File Version",
          "request": {
            "name": "Import Target File Version",
            "description": {
              "content": "Generates an asynchronous import operation. Use [Poll Target File Version Import endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1imports~1{importId}/get) to poll until the import is completed. Only `sdlxliff` files can be imported.\n\nImport should be used when a file is downloaded as an `sdlxliff`, processsed and then, replaced. \nThe import operation triggers internally the update of the `bcm` file associated with the imported file. It should mostly be used for offline work.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "71ca3e66-24d9-4827-90a1-00d874f8e552",
          "name": "Poll Target File Version Import",
          "request": {
            "name": "Poll Target File Version Import",
            "description": {
              "content": "Polls a target file version via an import operation. The new version can be seen on the file versions once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3d6b3884-65b6-496c-ac44-6f763cb988a2",
          "name": "Add Target File Version",
          "request": {
            "name": "Add Target File Version",
            "description": {
              "content": "Adds a new  version of the target file. Only the `native` and `bcm` file formats are accepted. For the `sdlxliff` files, you should use the [Import Target File endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1imports/post). More information about file formats can be found on the [File formats](../docs/File-formats.md) page.\n\nThe version is added on the task represented by `taskId`. To be able to execute the add operation the task should be assigned and accepted by user. If the task is automatic, it is possible to add a target file version only if the status is `inProgress`.\n\nThe added file versions need to respect the output file type declared by the task type of the enclosing task. On the [Rules for sequencing tasks correctly](https://docs.rws.com/791595/885137/trados-enterprise/rules-for-sequencing-tasks-correctly) page from the official RWS Documentation Center, you can find out what output file type is supported by each task.\n\nFor adding a target file version using an extension task, the configuration of the task type must declare the `scope`'s value as \"file\".\n\nThe multipart parameters in the body should respect and strictly follow the order specified in our documentation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "target-files",
                ":targetFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "properties",
                  "value": "{\"type\":\"<string>\"}",
                  "type": "text",
                  "description": "(Required) "
                },
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The target file."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "0b962643-ad47-438f-bf46-337179733640",
      "name": "Task",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "85f786c4-e7c2-4d8e-9ed3-063190a26787",
          "name": "Get Task",
          "request": {
            "name": "Get Task",
            "description": {
              "content": "Retrieves a task.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "575fa0f5-c0ab-4773-8d20-0bd43e24987a",
          "name": "List Tasks assigned to me",
          "request": {
            "name": "List Tasks assigned to me",
            "description": {
              "content": "Retrieves tasks assigned to the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                "assigned"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "status",
                  "value": "<string>",
                  "description": "If specified, this filters tasks by status."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b6325919-467b-426d-9649-7cfd467ec05f",
          "name": "Accept Task",
          "request": {
            "name": "Accept Task",
            "description": {
              "content": "Accepts a task. The authenticated user becomes the owner of the accepted task and can start work on it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "accept"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "02015da5-8be0-4017-aed4-e1fafef903f3",
          "name": "Reject Task",
          "request": {
            "name": "Reject Task",
            "description": {
              "content": "Rejects a task. The authenticated user will be removed from the task's list of available assignee users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reject"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2885b593-fe49-4650-80d7-24048415438d",
          "name": "Complete Task",
          "request": {
            "name": "Complete Task",
            "description": {
              "content": "Completes a task. The task will be marked as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"outcome\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "18e31e2e-8700-4dc0-a7d1-a95e8b0c6a7f",
          "name": "Release Task",
          "request": {
            "name": "Release Task",
            "description": {
              "content": "Releases the task from its owner so that other task assignees will be able to accept it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "release"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b606a263-99b0-4cdf-a2c2-fb0b27818ee3",
          "name": "Reclaim Task",
          "request": {
            "name": "Reclaim Task",
            "description": {
              "content": "The current owner of task is removed so that other assignees can accept it. \nThe task is not reassigned automatically.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reclaim"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4d139eae-1b47-43d6-a2c0-618d1cbca624",
          "name": "Assign Task",
          "request": {
            "name": "Assign Task",
            "description": {
              "content": "Assigns a task. The task assignees will be updated.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "assign"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignees\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "00fdbd02-bd3d-4c16-9f1a-99e5d0b5382a",
      "name": "Task Type",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e432f40b-22e6-425c-aa7e-e3954943e841",
          "name": "Get Task Type",
          "request": {
            "name": "Get Task Type",
            "description": {
              "content": "Retrieves a task type by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types",
                ":taskTypeId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskTypeId",
                  "description": "(Required) The task type identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ac9179d4-7a40-45df-a5d7-3a4bddf72e69",
          "name": "List Task Types",
          "request": {
            "name": "List Task Types",
            "description": {
              "content": "Retrieves all the task types in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "key",
                  "value": "<string>,<string>",
                  "description": "Filter by keys."
                },
                {
                  "disabled": true,
                  "key": "automatic",
                  "value": "<boolean>",
                  "description": "Filter by automatic or human tasks."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "2e91d892-be01-4979-bd3c-fe577be234b5",
      "name": "Termbase",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "714e5407-aee9-4f83-b1ce-3c2fe856ef2b",
          "name": "List Termbases",
          "request": {
            "name": "List Termbases",
            "description": {
              "content": "List termbases.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1004a7e9-b40f-4f28-8d58-54ac91eef6d6",
          "name": "Create Termbase",
          "request": {
            "name": "Create Termbase",
            "description": {
              "content": "Creates a new termbase.\nThe termbase can be created with a termbase template by providing the templateId or by providing a custom termbaseStructure. \nIf only a `termbaseTemplateId` was provided, the termbase will be created using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be created using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precendence.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\",\n  \"termbaseTemplateId\": \"<string>\",\n  \"termbaseStructure\": {\n    \"languages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "91d7578b-9a0a-4834-806c-a8ee68697a4e",
          "name": "Get Termbase",
          "request": {
            "name": "Get Termbase",
            "description": {
              "content": "Retrieves a termbase by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "244ac827-142f-46bc-8c95-b21eeb91cadb",
          "name": "Delete Termbase",
          "request": {
            "name": "Delete Termbase",
            "description": {
              "content": "Deletes a termbase by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8f4403d9-e25f-42ae-a8c7-842ea114cd2c",
          "name": "Update Termbase",
          "request": {
            "name": "Update Termbase",
            "description": {
              "content": "Updates the termbase.\nThe termbase can be updated with a termbase template by providing the termbaseTemplateId or by providing a custom termbaseStructure. \n\nIf only a `termbaseTemplateId ` was provided, the termbase will be updated using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be updated using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precedence.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"termbaseTemplateId\": \"<string>\",\n  \"termbaseStructure\": {\n    \"languages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "45f76f07-a3cd-45f1-bb42-b5acc2cac191",
          "name": "Create Termbase Entry",
          "request": {
            "name": "Create Termbase Entry",
            "description": {
              "content": "Creates a new termbase entry. For more information about how to use `fieldValueLinks` see [`Create termbase entry`](../docs/termbase/Termbase-entries.md#creating-a-termbase-entry).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languages\": [\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"humanReadableId\": \"<string>\",\n  \"termbaseFieldValues\": [\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6383b78f-4f3c-49fa-9542-8297e83dad09",
          "name": "List Termbase Entries",
          "request": {
            "name": "List Termbase Entries",
            "description": {
              "content": "Retrieves a list of all the entries in a termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "humanReadableIds",
                  "value": "<string>",
                  "description": "Can provide a list of humanReadableId from entries to filter by."
                },
                {
                  "disabled": true,
                  "key": "humanReadableIds",
                  "value": "<string>",
                  "description": "Can provide a list of humanReadableId from entries to filter by."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "18f35cd1-8707-43a3-9ffa-e8a9a770fa6b",
          "name": "Delete Termbase Entries",
          "request": {
            "name": "Delete Termbase Entries",
            "description": {
              "content": "Deletes all the entries in the termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ab72251e-3e62-4371-bdb5-31e344376f67",
          "name": "Get Termbase Entry",
          "request": {
            "name": "Get Termbase Entry",
            "description": {
              "content": "Retrieves a termbase entry by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f393d8c3-50a9-4c60-9bd2-88746af35d4b",
          "name": "Update Termbase Entry",
          "request": {
            "name": "Update Termbase Entry",
            "description": {
              "content": "Updates a termbase entry by identifier.\nThe request body will overwrite the existing data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languages\": [\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"id\": \"<string>\",\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"id\": \"<string>\",\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"humanReadableId\": \"<string>\",\n  \"termbaseFieldValues\": [\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3b610767-aba3-4fd5-a3de-3769a7e7d608",
          "name": "Delete Termbase Entry",
          "request": {
            "name": "Delete Termbase Entry",
            "description": {
              "content": "Deletes a termbase entry.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5f07139f-b8d8-4e87-9b0b-891896d7576a",
          "name": "List Termbase Terms",
          "request": {
            "name": "List Termbase Terms",
            "description": {
              "content": "Retrieves a list of all the terms of the termbase.\nSearch types:\n- normal: Use normal search to look for terms that match the text exactly as entered.\n- linguistic: Use linguistic search to look for terms that are similar to the search term. Linguistic search is based on stemming and other language-dependent aspects.\n- fuzzy: Use fuzzy search to look for terms that are similar to the search term. Fuzzy search is more fault-tolerant than linguistic search.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "terms",
                ":sourceLanguageCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "search",
                  "value": "<string>",
                  "description": "The text to search for."
                },
                {
                  "disabled": true,
                  "key": "searchType",
                  "value": "normal",
                  "description": "The type of the search performed."
                },
                {
                  "disabled": true,
                  "key": "targetLanguageCode",
                  "value": "<string>",
                  "description": "The target language code used to list the terms."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceLanguageCode",
                  "description": "(Required) The source language code used to list the terms."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "9f025d04-4a55-4088-a0f8-df08e5d9a8cc",
      "name": "Termbase Template",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "12aa2822-06c3-46dc-9425-e11d0f50d2d5",
          "name": "List Termbase Templates",
          "request": {
            "name": "List Termbase Templates",
            "description": {
              "content": "List termbase templates.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>",
                  "description": "The identifiers of the resource folders. "
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>",
                  "description": "The identifiers of the resource folders. "
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "type",
                  "value": "<string>",
                  "description": "The type of the termbase template to retrieve. If not specified, both types will be returned"
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "770a302b-59a4-472a-bbdb-3a7e30e80aca",
          "name": "Create Termbase Template",
          "request": {
            "name": "Create Termbase Template",
            "description": {
              "content": "Creates a new termbase template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\",\n  \"languages\": [\n    {\n      \"languageCode\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\"\n    }\n  ],\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "afc2e19e-9e9b-457b-8fcd-4fbb565b8000",
          "name": "Get Termbase Template",
          "request": {
            "name": "Get Termbase Template",
            "description": {
              "content": "Get a termbase template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e4ae67c4-1619-413a-8e10-73246c9f1cf6",
          "name": "Delete Termbase Template",
          "request": {
            "name": "Delete Termbase Template",
            "description": {
              "content": "Deletes a termbase template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a21e0646-442b-49e5-980f-40dc0e6df9fd",
          "name": "Update Termbase Template",
          "request": {
            "name": "Update Termbase Template",
            "description": {
              "content": "Updates the termbase template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"languages\": [\n    {\n      \"languageCode\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\"\n    }\n  ],\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5be741ea-56c1-4237-b3a3-7c374f365878",
          "name": "Convert XDT to Termbase Structure",
          "request": {
            "name": "Convert XDT to Termbase Structure",
            "description": {
              "content": "Converts a termbase definition (XDT file) to a termbase structure that will be returned in the response.<br>\nThe structure will not be stored in Language Cloud.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                "convert-xdt"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The <b>.xdt</b> file used for conversion."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "83e9d3ef-f90e-455c-a60b-714134dd6c22",
      "name": "Termbase Import",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6992a8ae-cb8d-4d7a-8668-43810aae3d3c",
          "name": "Get Termbase Import History",
          "request": {
            "name": "Get Termbase Import History",
            "description": {
              "content": "Gets the import history for a termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "55390e35-373a-4e81-b96c-b580d13465cb",
          "name": "Import Termbase",
          "request": {
            "name": "Import Termbase",
            "description": {
              "content": "Generates an asynchronous import operation.<br>\nUse the Poll Import Termbase endpoint to poll until the import status is `done`.<br>",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "strictImport",
                  "value": "true",
                  "description": "Specifies if the entries are only imported into the exact language that matches your imported file.<br> `true` - The import will only occur if the language in your import file matches exactly with a language in your termbase.<br> `false` - The import will occur even there are non-matching languages, by trying to match them to a relevant main language or language variant, if available."
                },
                {
                  "disabled": true,
                  "key": "duplicateEntriesStrategy",
                  "value": "overwrite",
                  "description": "The strategy for duplicate entries. Determines how the duplicate entries will be handled.<br> `ignore` - The content of the current entry with the same identifier will be kept, and the new entry will be ignored<br> `merge` - The content of the current entry with the same identifier will be merged with the imported entry. If the identifier is not provided the content will be merged by text.<br> `overwrite` - The content of the current entry with the same identifier will be replaced by the imported entry."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The file to import into the termbase.<br>\nAccepted file types: <b>.xml</b>, <b>.tbx</b>\n<br>\nIt's recommended you do not exceed 10Mb file size for tembase imports."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "14ea5a2f-0a3f-41f2-90fc-a68d63db679c",
          "name": "Poll Termbase Import",
          "request": {
            "name": "Poll Termbase Import",
            "description": {
              "content": "Polls a termbase import operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4f33c43b-dec2-4666-848e-8f6bd8696321",
          "name": "Download Termbase Import Logs",
          "request": {
            "name": "Download Termbase Import Logs",
            "description": {
              "content": "Downloads the termbase import logs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports",
                ":importId",
                "logs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "3f602ee3-61fc-464f-a90b-5d10cc6c4e4b",
      "name": "Termbase Export",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "19863f8f-a8dc-4d00-b682-0a78d0111d00",
          "name": "Export Termbase",
          "request": {
            "name": "Export Termbase",
            "description": {
              "content": "Generates an asynchronous export operation.<br>\nUse the Poll Export Termbase endpoint to poll until the export status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"format\": \"tbx\",\n  \"properties\": {\n    \"downloadCompressed\": false\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "17051fa8-72b2-4d18-a4a7-5cb37f35ee0a",
          "name": "Poll Termbase Export",
          "request": {
            "name": "Poll Termbase Export",
            "description": {
              "content": "Polls a termbase via an export operation. The exported termbase can be downloaded once the status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1bd239ea-2acf-46df-a2fa-5e057dcf798d",
          "name": "Download Exported Termbase",
          "request": {
            "name": "Download Exported Termbase",
            "description": {
              "content": "Downloads the exported termbase when the poll operation status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8ebb025f-1f05-4ccd-b60a-4a715513641f",
          "name": "Export Termbase Template",
          "request": {
            "name": "Export Termbase Template",
            "description": {
              "content": "Downloads the termbase definition.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "export-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "467af65e-89c2-4176-a9c5-5a3d7d5733b1",
      "name": "TQA Profile",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "99c32c1c-1d85-4209-b69c-c59dbbbccdf6",
          "name": "List TQA Profiles",
          "request": {
            "name": "List TQA Profiles",
            "description": {
              "content": "List TQA Profiles.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "76d62eda-da05-4c5b-80b0-98b83e6960a9",
          "name": "Get TQA Profile",
          "request": {
            "name": "Get TQA Profile",
            "description": {
              "content": "Get a TQA Profile By identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles",
                ":profileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "profileId",
                  "description": "(Required) The profile identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b23be38c-52f0-477c-8b1c-abadf925a675",
      "name": "Translation Engine",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "430b2d61-2ce5-4447-b605-5ffbdbbf4ddf",
          "name": "Get Translation Engine",
          "request": {
            "name": "Get Translation Engine",
            "description": {
              "content": "Retrieves a translation engine.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines",
                ":translationEngineId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationEngineId",
                  "description": "(Required) The translation engine identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d8ff9678-25c1-4c3d-af02-a68b38429999",
          "name": "List Translation Engines",
          "request": {
            "name": "List Translation Engines",
            "description": {
              "content": "Retrieves all the translation engines in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "c5e88590-747c-4907-b936-78693d1ff26a",
      "name": "Translation Memory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "03ae9348-b531-4246-ac97-98955b131b17",
          "name": "Get Translation Memory",
          "request": {
            "name": "Get Translation Memory",
            "description": {
              "content": "Get a single Translation Memory by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The identifier of the translation memory"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "53daab93-00f2-4091-afd9-1bf2ebfbbf76",
          "name": "Update Translation Memory",
          "request": {
            "name": "Update Translation Memory",
            "description": {
              "content": "Updates a Translation Memory. We recommend reading this page too [Updating data with PUT](../docs/Updating-data-with-PUT.md).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The identifier of the translation memory"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"languageProcessingRuleId\": \"<string>\",\n  \"fieldTemplateId\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c670a57c-8d9e-4809-8cd1-19ace09c7a9b",
          "name": "Delete Translation Memory",
          "request": {
            "name": "Delete Translation Memory",
            "description": {
              "content": "Deletes a Translation Memory.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The identifier of the translation memory"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "41278395-f2c1-4ad5-898b-ed62295241c2",
          "name": "Copy Translation Memory",
          "request": {
            "name": "Copy Translation Memory",
            "description": {
              "content": "Creates a copy of a Translation Memory. The name will be suffixed with ' (Copy) '",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId",
                "copy"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The identifier of the translation memory"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1216ed05-79e3-4575-b5d7-dc99f4340279",
          "name": "List Translation Memories",
          "request": {
            "name": "List Translation Memories",
            "description": {
              "content": "Retrieves all the Translation Memories.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fdec84a1-1266-4f24-b11c-eeb7f1f85890",
          "name": "Create Translation Memory",
          "request": {
            "name": "Create Translation Memory",
            "description": {
              "content": "Create a new Translation Memory.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"languageProcessingRuleId\": \"<string>\",\n  \"fieldTemplateId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "28cc65fb-781d-41c5-8b5b-508e47aa7064",
          "name": "List Field Templates",
          "request": {
            "name": "List Field Templates",
            "description": {
              "content": "Retrieves all the Field Templates.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "field-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "725b30b7-f2da-4855-921c-4b7d9b7553e4",
          "name": "Get Field Template",
          "request": {
            "name": "Get Field Template",
            "description": {
              "content": "Get a single Field Template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "field-templates",
                ":fieldTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fieldTemplateId",
                  "description": "(Required) "
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b6b1c13c-a357-447c-a175-f0ae5180885b",
      "name": "User",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2b66bbfe-42e0-448f-9d72-27d30a81256e",
          "name": "Get my User",
          "request": {
            "name": "Get my User",
            "description": {
              "content": "Retrieves the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "me"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fa06cd85-3bc9-4f43-aa2d-965affbd6b10",
          "name": "List Users",
          "request": {
            "name": "List Users",
            "description": {
              "content": "Retrieves a list of all the users in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6ea8faca-edd7-44cb-aae6-41d2f8322931",
          "name": "Get User",
          "request": {
            "name": "Get User",
            "description": {
              "content": "Retrieves a user by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                ":userId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "userId",
                  "description": "(Required) The user identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a1163aa2-6f1e-4b65-9ded-9d297f9f4044",
      "name": "Workflow",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c7eb2e56-9c96-47af-9665-558c7b1687cd",
          "name": "Get Workflow",
          "request": {
            "name": "Get Workflow",
            "description": {
              "content": "Retrieves a workflow by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "description": "(Required) The workflow identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8ed803c8-1bb8-48dd-8b84-59ffca1649b1",
          "name": "Update Workflow",
          "request": {
            "name": "Update Workflow",
            "description": {
              "content": "Updates the workflow in terms of: name, description, and task configuration (and its details). Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "description": "(Required) The workflow identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"taskConfigurations\": [\n    {\n      \"taskTemplate\": {\n        \"id\": \"<string>\"\n      },\n      \"isSkipped\": \"<boolean>\",\n      \"assignees\": [\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"scope\": {\n        \"type\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"taskTemplate\": {\n        \"id\": \"<string>\"\n      },\n      \"isSkipped\": \"<boolean>\",\n      \"assignees\": [\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"scope\": {\n        \"type\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        }\n      }\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "003fa812-d698-41b0-8b9c-42847e4e0d52",
          "name": "List Workflows",
          "request": {
            "name": "List Workflows",
            "description": {
              "content": "Retrieves all the workflows in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br>\n - `location`: all resources located strictly in the folders from 'location' param (default); <br>\n - `lineage`: all resources located in the folders specified in 'location' param, as well as the subfolders; <br>\n - `bloodline`: all resources located in the folders specified in 'location' param, as well as the ancestor folders; <br>\n - `genealogy`: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "name": "Authentication (Start Here)",
      "item": [
        {
          "name": "Obtain a client credentials access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "pm.collectionVariables.set(\"lc_access_token\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                },
                {
                  "key": "audience",
                  "value": "https://api.sdl.com",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "https://sdl-prod.eu.auth0.com/oauth/token",
              "protocol": "https",
              "host": [
                "sdl-prod",
                "eu",
                "auth0",
                "com"
              ],
              "path": [
                "oauth",
                "token"
              ]
            }
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://lc-api.sdl.com/public-api/v1",
      "key": "baseUrl"
    },
    {
      "key": "lc_access_token",
      "value": ""
    },
    {
      "key": "lc_tenant",
      "value": ""
    }
  ],
  "info": {
    "_postman_id": "42cd826c-9eb7-4e4e-8444-70756b3065ce",
    "name": "RWS Language Cloud API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The RWS Language Cloud public API.",
      "type": "text/plain"
    }
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{lc_access_token}}",
        "type": "string"
      }
    ]
  }
}
