{
  "item": [
    {
      "id": "a53ada81-ea5f-448d-ae77-8977d2dadc40",
      "name": "Account",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "29b28145-2614-43e3-a6e8-4e16f9bbc9a7",
          "name": "List my Accounts",
          "request": {
            "name": "List my Accounts",
            "description": {
              "content": "Retrieves the accounts the authenticated user is part of. \nNote: for service users only the account where the user is defined is returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "accounts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "65a2e010-9627-42df-919f-ab2f57d36493",
      "name": "Custom Field",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "75c3617c-9f8b-42c9-91f3-2dc0cd887b35",
          "name": "List Custom Field Definitions",
          "request": {
            "name": "List Custom Field Definitions",
            "description": {
              "content": "Retrieves a list of all the custom field definitions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "84275379-5051-44e1-81bb-b51091fde645",
          "name": "Get Custom Field Definition",
          "request": {
            "name": "Get Custom Field Definition",
            "description": {
              "content": "Retrieves a Custom Field by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions",
                ":customFieldDefinitionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "customFieldDefinitionId",
                  "description": "(Required) The custom field definition identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f4297b4f-4b53-4eb2-97d0-da0004295975",
      "name": "Customer",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b4d74b94-b20e-4d2a-a1b4-36e7b121e7f5",
          "name": "Get Customer",
          "request": {
            "name": "Get Customer",
            "description": {
              "content": "Retrieves a customer by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "customerId",
                  "description": "(Required) The customer identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "c2c0da83-e660-46b8-952d-a7aaf6b4eef5",
          "name": "List Customers",
          "request": {
            "name": "List Customers",
            "description": {
              "content": "Retrieves a list of all the customers in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "9e4b7aa3-43bb-4709-b3d3-67cc78c40c62",
      "name": "File Processing Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1490aad5-69cc-45ee-a0e9-64e8a4084b58",
          "name": "Get File Processing Configuration",
          "request": {
            "name": "Get File Processing Configuration",
            "description": {
              "content": "Retrieves a file processing configuration by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "description": "(Required) The file processing configuration identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "d431fb6b-2c99-41ff-9906-ba4118aeffed",
          "name": "List File Processing Configurations",
          "request": {
            "name": "List File Processing Configurations",
            "description": {
              "content": "Retrieves a list of all the file processing configurations in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "9b751e96-c1d7-479b-8704-3c05eebbcde0",
      "name": "File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ea367ea4-8980-40a8-b19e-92b5ab01563c",
          "name": "Upload Zip File",
          "request": {
            "name": "Upload Zip File",
            "description": {
              "content": "Uploads an archive with source files in a .zip format, to be extracted and used at project creation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The .zip file to be uploaded.  "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0a6de95f-10dc-4da4-bfca-9e0e9258122b",
          "name": "Poll Upload Zip File",
          "request": {
            "name": "Poll Upload Zip File",
            "description": {
              "content": "Monitors the unzipping operation for a previously uploaded archive and gets details on the extracted files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "files",
                ":fileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "description": "(Required) The uploaded file id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3c3f6d37-6e29-4bcd-90f5-ea2153dcf1d6",
      "name": "Folder",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d689aacc-5799-481d-bdad-eab31b56c867",
          "name": "Get Folder",
          "request": {
            "name": "Get Folder",
            "description": {
              "content": "Retrieves a folder by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                ":folderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "folderId",
                  "description": "(Required) The folder identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "3bd73eb4-1b3e-471b-81a0-cd6415e7a465",
          "name": "Get Root Folder",
          "request": {
            "name": "Get Root Folder",
            "description": {
              "content": "Retrieves the Root folder in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                "root"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "66587467-61df-40ce-a6bd-f8dc289bc592",
          "name": "List Folders",
          "request": {
            "name": "List Folders",
            "description": {
              "content": "Retrieves a list of all the folders in an account. Max 500.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter folders by name."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "01760278-b241-43f8-b5bf-63f66cf0bd98",
      "name": "Group",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "867553c9-5d3d-4025-81e1-143cf2ad935d",
          "name": "Get Group",
          "request": {
            "name": "Get Group",
            "description": {
              "content": "Retrieves a group by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups",
                ":groupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "groupId",
                  "description": "(Required) The group identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "43813c97-c472-45a9-ab21-470a5a0c3f04",
          "name": "List Groups",
          "request": {
            "name": "List Groups",
            "description": {
              "content": "Retrieves a list of all the groups in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "82f614a2-e6b8-43de-99cb-2eb85ce8275b",
      "name": "Language",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b6ac772c-7237-4969-83bb-1dd4a976bad4",
          "name": "List Languages",
          "request": {
            "name": "List Languages",
            "description": {
              "content": "Retrieves a list of all the languages.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "languages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "languageCodes",
                  "value": "<string>,<string>",
                  "description": "Filter by language codes."
                },
                {
                  "disabled": true,
                  "key": "type",
                  "value": "<string>",
                  "description": "Filter by type."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "37f64e65-69cf-49ee-a5c4-0589538f67e9",
      "name": "Pricing Model",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1a747da5-9185-43be-8b9c-d85c5989da8e",
          "name": "List Pricing Models",
          "request": {
            "name": "List Pricing Models",
            "description": {
              "content": "Retrieves a list of all the pricing models in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "ce800e38-ded2-49bb-a0ce-0f712ed26f95",
          "name": "Get Pricing Model",
          "request": {
            "name": "Get Pricing Model",
            "description": {
              "content": "Retrieves a pricing model by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models",
                ":pricingModelId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "pricingModelId",
                  "description": "(Required) The pricing model identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "7949503a-d8a6-4946-aa21-a32f64ad5509",
      "name": "Project",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "df533bb3-f724-4dbc-aa70-e0c83cf7bb97",
          "name": "List Projects",
          "request": {
            "name": "List Projects",
            "description": {
              "content": "Retrieves a list of all the projects in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "excludeOnline",
                  "value": "<boolean>",
                  "description": "Excludes projects that are being worked on exclusively in the Online Editor"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "06b0b65f-bcdd-4df0-89e6-ed48133f8e94",
          "name": "Create Project",
          "request": {
            "name": "Create Project",
            "description": {
              "content": "Creates a new project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueBy\": \"<dateTime>\",\n  \"projectTemplate\": {\n    \"id\": \"<string>\"\n  },\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"location\": \"<string>\",\n  \"translationEngine\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"fileProcessingConfiguration\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"workflow\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"pricingModel\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"customFields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    }\n  ],\n  \"tqaProfile\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"forceOnline\": \"<boolean>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e025ed7b-0fb5-41f7-b3a5-1dc881b34485",
          "name": "Get Project",
          "request": {
            "name": "Get Project",
            "description": {
              "content": "Retrieves a project by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "09216e0d-56fd-4dc8-89f2-277e9383c576",
          "name": "Update Project",
          "request": {
            "name": "Update Project",
            "description": {
              "content": "Updates the project in terms of: name, description, due date, quote, and project resources. Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueBy\": \"<dateTime>\",\n  \"translationEngine\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"fileProcessingConfiguration\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"pricingModel\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"workflow\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"projectPlan\": {\n    \"taskConfigurations\": [\n      {\n        \"taskTemplate\": {\n          \"id\": \"<string>\"\n        },\n        \"isSkipped\": \"<boolean>\",\n        \"assignees\": [\n          {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n          }\n        ],\n        \"scope\": {\n          \"type\": \"<string>\",\n          \"targetLanguage\": {\n            \"languageCode\": \"<string>\"\n          }\n        },\n        \"dueBy\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"tqaProfile\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"quote\": {\n    \"languageCosts\": [\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      }\n    ],\n    \"additionalCosts\": [\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      }\n    ]\n  },\n  \"customFields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8399222f-5223-4b1f-b2a0-e3961621aa01",
          "name": "Delete Project",
          "request": {
            "name": "Delete Project",
            "description": {
              "content": "Deletes a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "02eb874d-0011-442d-bae3-dd975a6e422a",
          "name": "Get Project Configuration",
          "request": {
            "name": "Get Project Configuration",
            "description": {
              "content": "Get the configuration settings of an existing project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "configuration"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "335e1b79-c261-4107-b57d-c179a4f4e437",
          "name": "Update Project Configuration",
          "request": {
            "name": "Update Project Configuration",
            "description": {
              "content": "Updates the configuration settings for an existing project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "configuration"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"translationMemoryFieldsSettings\": {\n    \"settings\": [\n      {\n        \"name\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": \"<string>\"\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "430f2544-c1a2-4d8f-8a12-5d01890efc06",
          "name": "Start Project",
          "request": {
            "name": "Start Project",
            "description": {
              "content": "Starts a project. Translatable files should be uploaded before starting the project. If the action is executed on an already started project, the new translatable files should be uploaded first.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "start"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "0fcef72a-a170-4581-8983-a391a38716b0",
          "name": "Complete Project",
          "request": {
            "name": "Complete Project",
            "description": {
              "content": "Marks a project as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "276df41f-5f1c-4fe6-a0ce-272d2bea8355",
          "name": "Cancel Project File",
          "request": {
            "name": "Cancel Project File",
            "description": {
              "content": "Cancels a project file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "files",
                ":fileId",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "description": "(Required) The file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "d4f447ce-7893-4745-986a-d6b7138bf7d9",
          "name": "List Project's Tasks",
          "request": {
            "name": "List Project's Tasks",
            "description": {
              "content": "Lists the tasks of a specific project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "d5c73188-c1d7-42cb-8fbb-c7d83423398f",
      "name": "Project Template",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "aaf7e709-966e-422e-8732-95b373f80352",
          "name": "Get Project Template",
          "request": {
            "name": "Get Project Template",
            "description": {
              "content": "Retrieves a project template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates",
                ":projectTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectTemplateId",
                  "description": "(Required) The project template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "43507bb9-4a97-433e-ac1c-05653b4d23d5",
          "name": "List Project Templates",
          "request": {
            "name": "List Project Templates",
            "description": {
              "content": "Retrieves a list of all the project templates in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter by name."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f713a71c-7c49-48af-bd78-300890f9d35a",
      "name": "Public Keys",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "170f2311-a1d5-436d-973d-54ad1c8cf9e6",
          "name": "List Public Keys",
          "request": {
            "name": "List Public Keys",
            "description": {
              "content": "List all available Public Keys.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ".well-known",
                "jwks.json"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "a6bcde2e-494d-4b1e-96b8-2e20f75d343d",
          "name": "Get Public Key",
          "request": {
            "name": "Get Public Key",
            "description": {
              "content": "Retrieves a public key by it's identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ".well-known",
                "jwks.json",
                ":kid"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "kid",
                  "description": "(Required) The key identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "5487925b-7c0b-4b16-b9a8-3bf494801c35",
      "name": "Quote",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7a9180ff-c42b-404a-904e-ef13299c562f",
          "name": "Export Quote",
          "request": {
            "name": "Export Quote",
            "description": {
              "content": "Exports the quote for the Project in either PDF or Excel format.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format for the downloaded quote."
                },
                {
                  "disabled": true,
                  "key": "languageId",
                  "value": "en",
                  "description": "The language used for quote localization."
                },
                {
                  "disabled": true,
                  "key": "timeZoneOffset",
                  "value": "<integer>",
                  "description": "The Time Zone Offset for date-time fields."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "6ddaf5b2-c22c-4b9d-ba6a-8d6261c8a7f6",
      "name": "Source File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d3a3357d-6ff0-4a5e-abc0-1dcfb66ba1a6",
          "name": "List Source Files",
          "request": {
            "name": "List Source Files",
            "description": {
              "content": "Retrieves the source files in a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "3c634376-6a28-4c0f-b656-a47dddc36e8b",
          "name": "Add Source File",
          "request": {
            "name": "Add Source File",
            "description": {
              "content": "Adds a source file to the project. Files can be uploaded before starting a project or after the project has started. When adding the file after the project started, a new start project request should be performed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) "
                },
                {
                  "key": "properties",
                  "value": "{\"name\":\"<string>\",\"role\":\"<string>\",\"type\":\"<string>\",\"language\":\"<string>\",\"targetLanguages\":[\"<string>\",\"<string>\"],\"path\":[\"<string>\",\"<string>\"]}",
                  "type": "text",
                  "description": "(Required) "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "73c1545c-d2e4-4981-a9ef-0cfdefc5c7c0",
          "name": "Update Source Files",
          "request": {
            "name": "Update Source Files",
            "description": {
              "content": "Updates multiple source files. If any of the files fails to be updated, an error will be returned for each file. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"files\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateTargetFilesName\": false\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateTargetFilesName\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3cac41b1-8bd9-4de6-8772-f0fea31d3f93",
          "name": "Attach Source Files",
          "request": {
            "name": "Attach Source Files",
            "description": {
              "content": "Adds multiple source files to the project. Files must be uploaded before attaching them to a project. When a file is attached after the project was started, a new start project request should be performed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                "attach-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"role\": \"<string>\",\n    \"fileUrl\": \"<string>\",\n    \"type\": \"<string>\",\n    \"language\": {\n      \"languageCode\": \"<string>\"\n    },\n    \"targetLanguages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"path\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"role\": \"<string>\",\n    \"fileUrl\": \"<string>\",\n    \"type\": \"<string>\",\n    \"language\": {\n      \"languageCode\": \"<string>\"\n    },\n    \"targetLanguages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"path\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3487569b-b368-406f-8427-1d512ff10ca2",
          "name": "Get Source File",
          "request": {
            "name": "Get Source File",
            "description": {
              "content": "Retrieves a source file from the project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "340e104f-36d6-40bb-9a3b-a8865781195d",
          "name": "Update Source File",
          "request": {
            "name": "Update Source File",
            "description": {
              "content": "Updates a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"updateTargetFilesName\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3450f234-da9a-4bb8-90e8-1f41e9410be6",
          "name": "List Source File Versions",
          "request": {
            "name": "List Source File Versions",
            "description": {
              "content": "Retrieves all the versions of a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "75c385a6-f074-432b-bc61-ade73cd0a719",
          "name": "Download Source File Version",
          "request": {
            "name": "Download Source File Version",
            "description": {
              "content": "Downloads a source file version.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "7370643b-a4b1-48f7-842c-8f8ac5f673cb",
      "name": "Target File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7772915b-9ecd-4ab5-bf85-29231edbddc2",
          "name": "Get Target File",
          "request": {
            "name": "Get Target File",
            "description": {
              "content": "Retrieves a target file from a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "5b6ea944-78a9-4371-b1f3-e1134c835ffb",
          "name": "Update Target File",
          "request": {
            "name": "Update Target File",
            "description": {
              "content": "Updates a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "046d8a55-d52d-4b3f-9c72-f4626bc5a3f1",
          "name": "List Target Files",
          "request": {
            "name": "List Target Files",
            "description": {
              "content": "Retrieves the target files for a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "targetFileIds",
                  "value": "<string>,<string>",
                  "description": "Filter target files by identifiers."
                },
                {
                  "disabled": true,
                  "key": "sourceFileIds",
                  "value": "<string>,<string>",
                  "description": "Filter target files by the identifiers of the source file they were generated from."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "3f9c6fce-94f5-41e8-96a4-a23ef557f503",
          "name": "Update Target Files",
          "request": {
            "name": "Update Target Files",
            "description": {
              "content": "Updates multiple target files. If any of the files fails to be updated, an error will be returned for each file. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"files\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "85ce8d57-aeef-4e4a-9219-1f2c50e7fc7c",
          "name": "Get Target File Version",
          "request": {
            "name": "Get Target File Version",
            "description": {
              "content": "Retrieves one version of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "c0d3e6c6-32b6-45a3-80f9-97696d4d7ce1",
          "name": "List Target File Versions",
          "request": {
            "name": "List Target File Versions",
            "description": {
              "content": "Retrieves the versions of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "bac20153-8d5b-465b-a1aa-e41f7cc8be30",
          "name": "Export Target File Version",
          "request": {
            "name": "Export Target File Version",
            "description": {
              "content": "Generates an asynchronous export operation, exclusively available for versions of the file in BCM format. Use the [dedicated endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1{fileVersionId}~1exports~1{exportId}/get) to poll until the export is completed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "format",
                  "value": "native",
                  "description": "The file format."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "event": []
        },
        {
          "id": "9d448725-c9cc-4a87-93e3-6102da85ecb8",
          "name": "Poll Target File Version Export",
          "request": {
            "name": "Poll Target File Version Export",
            "description": {
              "content": "Polls a target file version via an export operation. The new version can be downloaded once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "5722605c-8174-4493-ad03-afd695d5387d",
          "name": "Download Exported Target File Version",
          "request": {
            "name": "Download Exported Target File Version",
            "description": {
              "content": "Downloads a completed target file version via an export operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "5af24fef-8db5-45a0-86e1-875950ff7ae4",
          "name": "Download Target File Version",
          "request": {
            "name": "Download Target File Version",
            "description": {
              "content": "Downloads the file version (native and BCM). ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "380f9567-620d-44c2-9ce2-a2c7c1cf9361",
          "name": "Import Target File Version",
          "request": {
            "name": "Import Target File Version",
            "description": {
              "content": "Generates an asynchronous import operation. Use the [dedicated endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1imports~1{importId}/get) to poll until the import is completed. Only `sdlxliff` files can be imported.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1c9630ee-bd6b-42df-94e9-03b797525c35",
          "name": "Poll Target File Version Import",
          "request": {
            "name": "Poll Target File Version Import",
            "description": {
              "content": "Polls a target file version via an import operation. The new version can be seen on the file versions once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "31831df4-d8ae-44e0-86d6-4aea1de023d5",
      "name": "Task",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c4dc0099-b989-48a1-b610-e260e5ae9aaa",
          "name": "Get Task",
          "request": {
            "name": "Get Task",
            "description": {
              "content": "Retrieves a task.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "27c2e0a8-fb37-478a-bbec-6dcdd27d7fe1",
          "name": "List Tasks assigned to me",
          "request": {
            "name": "List Tasks assigned to me",
            "description": {
              "content": "Retrieves tasks assigned to the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                "assigned"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "status",
                  "value": "<string>",
                  "description": "If specified, this filters tasks by status."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "e75c4803-45c5-4578-8be7-63a65f741338",
          "name": "Accept Task",
          "request": {
            "name": "Accept Task",
            "description": {
              "content": "Accepts a task. The authenticated user becomes the owner of the accepted task and can start work on it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "accept"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "b1f66c66-6462-4a04-9d59-514ddff1f4ee",
          "name": "Reject Task",
          "request": {
            "name": "Reject Task",
            "description": {
              "content": "Rejects a task. The authenticated user will be removed from the task's list of available assignee users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reject"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "9ce199bc-d140-4df1-8f20-f442f79e5b6d",
          "name": "Complete Task",
          "request": {
            "name": "Complete Task",
            "description": {
              "content": "Completes a task. The task will be marked as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"outcome\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c33317e5-db1b-4a8d-a9ac-8707c5344749",
          "name": "Release Task",
          "request": {
            "name": "Release Task",
            "description": {
              "content": "Releases the task from its owner so that other task assignees will be able to accept it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "release"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "1fa9be04-3329-473e-84cf-e16f7f082c49",
          "name": "Reclaim Task",
          "request": {
            "name": "Reclaim Task",
            "description": {
              "content": "The current owner of task is removed so that other assignees can accept it. \nThe task is not reassigned automatically.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reclaim"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "f5bd461f-f1d1-4eca-87e5-112fb3a288be",
          "name": "Assign Task",
          "request": {
            "name": "Assign Task",
            "description": {
              "content": "Assigns a task. The task assignees will be updated.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "assign"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignees\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "91c6112c-69aa-466b-b1fa-e6c42b8d5157",
      "name": "Task Type",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1f350f8b-5a0d-48cc-b957-edda4dda54c5",
          "name": "Get Task Type",
          "request": {
            "name": "Get Task Type",
            "description": {
              "content": "Retrieves a task type by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types",
                ":taskTypeId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskTypeId",
                  "description": "(Required) The task type identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "2f94916d-d8a5-412e-9de0-f98a214391c3",
          "name": "List Task Types",
          "request": {
            "name": "List Task Types",
            "description": {
              "content": "Retrieves all the task types in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "key",
                  "value": "<string>,<string>",
                  "description": "Filter by keys."
                },
                {
                  "disabled": true,
                  "key": "automatic",
                  "value": "<boolean>",
                  "description": "Filter by automatic or human tasks."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "85f2cd61-19ea-4f12-ab32-70b98572f02a",
      "name": "Termbase",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9cee5f8a-c02e-4e7b-a774-590745d037f5",
          "name": "List Termbases",
          "request": {
            "name": "List Termbases",
            "description": {
              "content": "List termbases.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "83beaf03-71a4-44a6-8d04-ea95adb64451",
          "name": "Create Termbase",
          "request": {
            "name": "Create Termbase",
            "description": {
              "content": "Creates a new termbase.\nThe termbase can be created with a termbase template by providing the templateId or by providing a custom termbaseStructure. \nIf only a `termbaseTemplateId` was provided, the termbase will be created using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be created using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precendence.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\",\n  \"termbaseTemplateId\": \"<string>\",\n  \"termbaseStructure\": {\n    \"languages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "45ca1fa8-a9f0-481a-a3e4-216177161591",
          "name": "Get Termbase",
          "request": {
            "name": "Get Termbase",
            "description": {
              "content": "Retrieves a termbase by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "0b0dd5b2-7ba2-4e8b-ba36-e0ad5af78e82",
          "name": "Delete Termbase",
          "request": {
            "name": "Delete Termbase",
            "description": {
              "content": "Deletes a termbase by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "5d22a783-1096-4f31-8738-cf98d2cbf31a",
          "name": "Update Termbase",
          "request": {
            "name": "Update Termbase",
            "description": {
              "content": "Updates the termbase.\nThe termbase can be updated with a termbase template by providing the termbaseTemplateId or by providing a custom termbaseStructure. \n\nIf only a `termbaseTemplateId ` was provided, the termbase will be updated using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be updated using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precedence.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"termbaseTemplateId\": \"<string>\",\n  \"termbaseStructure\": {\n    \"languages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3f89cbaf-78a0-4d5f-938a-3984a6e6524f",
          "name": "Create Termbase Entry",
          "request": {
            "name": "Create Termbase Entry",
            "description": {
              "content": "Creates a new termbase entry. For more information about how to use `fieldValueLinks` see [`Create termbase entry`](../docs/termbase/Termbase-entries.md#creating-a-termbase-entry).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languages\": [\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"humanReadableId\": \"<string>\",\n  \"termbaseFieldValues\": [\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8cb3db89-7bbb-460d-8020-3fe553aab203",
          "name": "List Termbase Entries",
          "request": {
            "name": "List Termbase Entries",
            "description": {
              "content": "Retrieves a list of all the entries in a termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "humanReadableIds",
                  "value": "<string>",
                  "description": "Can provide a list of humanReadableId from entries to filter by."
                },
                {
                  "disabled": true,
                  "key": "humanReadableIds",
                  "value": "<string>",
                  "description": "Can provide a list of humanReadableId from entries to filter by."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "5046bf1d-0891-44b9-82a8-133f260d0c6f",
          "name": "Delete Termbase Entries",
          "request": {
            "name": "Delete Termbase Entries",
            "description": {
              "content": "Deletes all the entries in the termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "cb2ada8b-1649-45df-92dc-996431226b13",
          "name": "Get Termbase Entry",
          "request": {
            "name": "Get Termbase Entry",
            "description": {
              "content": "Retrieves a termbase entry by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "b32e33a5-46a3-41f1-a245-bf4181b621d6",
          "name": "Update Termbase Entry",
          "request": {
            "name": "Update Termbase Entry",
            "description": {
              "content": "Updates a termbase entry by identifier.\nThe request body will overwrite the existing data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languages\": [\n    {\n      \"id\": \"<string>\",\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"humanReadableId\": \"<string>\",\n  \"termbaseFieldValues\": [\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5879773b-ec49-41b8-8dfe-776a7c563416",
          "name": "Delete Termbase Entry",
          "request": {
            "name": "Delete Termbase Entry",
            "description": {
              "content": "Deletes a termbase entry.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "30a4ce2e-45f0-4be1-af7c-00cf8b36e727",
          "name": "List Termbase Terms",
          "request": {
            "name": "List Termbase Terms",
            "description": {
              "content": "Retrieves a list of all the terms of the termbase.\nSearch types:\n- normal: Use normal search to look for terms that match the text exactly as entered.\n- linguistic: Use linguistic search to look for terms that are similar to the search term. Linguistic search is based on stemming and other language-dependent aspects.\n- fuzzy: Use fuzzy search to look for terms that are similar to the search term. Fuzzy search is more fault-tolerant than linguistic search.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "terms",
                ":sourceLanguageCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "search",
                  "value": "<string>",
                  "description": "The text to search for."
                },
                {
                  "disabled": true,
                  "key": "searchType",
                  "value": "normal",
                  "description": "The type of the search performed."
                },
                {
                  "disabled": true,
                  "key": "targetLanguageCode",
                  "value": "<string>",
                  "description": "The target language code used to list the terms."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceLanguageCode",
                  "description": "(Required) The source language code used to list the terms."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "9c02be64-e3e1-4514-a9ea-482ed98d654d",
      "name": "Termbase Template",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7932bcb4-5853-406c-bca1-1c2ac9bbdc38",
          "name": "List Termbase Templates",
          "request": {
            "name": "List Termbase Templates",
            "description": {
              "content": "List termbase templates.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>",
                  "description": "The identifiers of the resource folders. "
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>",
                  "description": "The identifiers of the resource folders. "
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "type",
                  "value": "<string>",
                  "description": "The type of the termbase template to retrieve. If not specified, both types will be returned"
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "a0cfa882-ef1c-4d40-8311-61173ca2da35",
          "name": "Create Termbase Template",
          "request": {
            "name": "Create Termbase Template",
            "description": {
              "content": "Creates a new termbase template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\",\n  \"languages\": [\n    {\n      \"languageCode\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\"\n    }\n  ],\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7eb95288-1c4a-43d1-af0b-05173b3f6bc0",
          "name": "Get Termbase Template",
          "request": {
            "name": "Get Termbase Template",
            "description": {
              "content": "Get a termbase template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "89a41e74-8515-4a7b-bafa-4275cb9e7d03",
          "name": "Delete Termbase Template",
          "request": {
            "name": "Delete Termbase Template",
            "description": {
              "content": "Deletes a termbase template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "e05a1abe-5fe5-4ab7-9062-df8bd62b6df0",
          "name": "Update Termbase Template",
          "request": {
            "name": "Update Termbase Template",
            "description": {
              "content": "Updates the termbase template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"languages\": [\n    {\n      \"languageCode\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\"\n    }\n  ],\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2569a4c1-8101-463f-9987-5d3328ab5045",
          "name": "Convert XDT to Termbase Structure",
          "request": {
            "name": "Convert XDT to Termbase Structure",
            "description": {
              "content": "Converts a termbase definition (XDT file) to a termbase structure that will be returned in the response.<br>\nThe structure will not be stored in Language Cloud.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                "convert-xdt"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The <b>.xdt</b> file used for conversion."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "1c510c06-0f30-439b-b0ed-01f476510c4a",
      "name": "Termbase Import",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "843676ae-dcd6-40bc-8c89-848e8f8ffc7a",
          "name": "Get Termbase Import History",
          "request": {
            "name": "Get Termbase Import History",
            "description": {
              "content": "Gets the import history for a termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "81fd6b20-7109-4288-a32f-3a97f52a7cad",
          "name": "Import Termbase",
          "request": {
            "name": "Import Termbase",
            "description": {
              "content": "Generates an asynchronous import operation.<br>\nUse the Poll Import Termbase endpoint to poll until the import status is `done`.<br>",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "strictImport",
                  "value": "true",
                  "description": "Specifies if the entries are only imported into the exact language that matches your imported file.<br> `true` - The import will only occur if the language in your import file matches exactly with a language in your termbase.<br> `false` - The import will occur even there are non-matching languages, by trying to match them to a relevant main language or language variant, if available."
                },
                {
                  "disabled": true,
                  "key": "duplicateEntriesStrategy",
                  "value": "overwrite",
                  "description": "The strategy for duplicate entries. Determines how the duplicate entries will be handled.<br> `ignore` - The content of the current entry with the same identifier will be kept, and the new entry will be ignored<br> `merge` - The content of the current entry with the same identifier will be merged with the imported entry. If the identifier is not provided the content will be merged by text.<br> `overwrite` - The content of the current entry with the same identifier will be replaced by the imported entry."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The file to import into the termbase.<br>\nAccepted file types: <b>.xml</b>, <b>.tbx</b>\n<br>\nIt's recommended you do not exceed 10Mb file size for tembase imports."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2c2077e4-125c-4ca1-b483-70727b2bd508",
          "name": "Poll Termbase Import",
          "request": {
            "name": "Poll Termbase Import",
            "description": {
              "content": "Polls a termbase import operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "18c9b8f9-bdff-4efb-b517-73d24b392d17",
          "name": "Download Termbase Import Logs",
          "request": {
            "name": "Download Termbase Import Logs",
            "description": {
              "content": "Downloads the termbase import logs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports",
                ":importId",
                "logs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "5ab0ed2b-fe2a-402c-8979-be8ecbbe5bad",
      "name": "Termbase Export",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "99ee6c3d-3723-4fc9-b4f4-be88525c6c59",
          "name": "Export Termbase",
          "request": {
            "name": "Export Termbase",
            "description": {
              "content": "Generates an asynchronous export operation.<br>\nUse the Poll Export Termbase endpoint to poll until the export status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"format\": \"tbx\",\n  \"properties\": {\n    \"downloadCompressed\": false\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "06d4f591-d0bc-4e0a-b86f-a8dfaad68d07",
          "name": "Poll Termbase Export",
          "request": {
            "name": "Poll Termbase Export",
            "description": {
              "content": "Polls a termbase via an export operation. The exported termbase can be downloaded once the status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "e0a83b31-9f47-48d5-9689-ffc83d4d1e64",
          "name": "Download Exported Termbase",
          "request": {
            "name": "Download Exported Termbase",
            "description": {
              "content": "Downloads the exported termbase when the poll operation status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "7c7228ff-7bee-43b0-b8ab-850b9e8b8db4",
          "name": "Export Termbase Template",
          "request": {
            "name": "Export Termbase Template",
            "description": {
              "content": "Downloads the termbase definition.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "export-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "8af4eb1f-edad-4508-ba8a-d87972664767",
      "name": "TQA Profile",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "feaf121e-deb8-460d-a440-27524afc3862",
          "name": "List TQA Profiles",
          "request": {
            "name": "List TQA Profiles",
            "description": {
              "content": "List TQA Profiles.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "1c037c4b-0c5f-45ab-bc42-d2a78e000c5a",
          "name": "Get TQA Profile",
          "request": {
            "name": "Get TQA Profile",
            "description": {
              "content": "Get a TQA Profile By identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles",
                ":profileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "profileId",
                  "description": "(Required) The profile identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "e73632ef-ee1f-449d-acd5-555b5e810339",
      "name": "Translation Engine",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9f2c3071-11e9-42ba-9c4b-847abceb6229",
          "name": "Get Translation Engine",
          "request": {
            "name": "Get Translation Engine",
            "description": {
              "content": "Retrieves a translation engine.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines",
                ":translationEngineId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationEngineId",
                  "description": "(Required) The translation engine identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "7801621a-3b26-4e70-8d50-ed9ff4eec179",
          "name": "List Translation Engines",
          "request": {
            "name": "List Translation Engines",
            "description": {
              "content": "Retrieves all the translation engines in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "26aac7ed-9510-49e8-b2b3-7d62475aabb1",
      "name": "User",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "92540b47-7680-436e-9e0a-47ad858b1a2b",
          "name": "Get my User",
          "request": {
            "name": "Get my User",
            "description": {
              "content": "Retrieves the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "me"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "916e435a-8c90-4679-b677-64e9263aa9f6",
          "name": "List Users",
          "request": {
            "name": "List Users",
            "description": {
              "content": "Retrieves a list of all the users in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "7400e4cb-5524-416e-97f2-07910120af18",
          "name": "Get User",
          "request": {
            "name": "Get User",
            "description": {
              "content": "Retrieves a user by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                ":userId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "userId",
                  "description": "(Required) The user identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "a4ac9621-72ac-4215-8b03-d7e0585f6864",
      "name": "Workflow",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "45888049-667c-482e-8b78-2e6dfc5539bb",
          "name": "Get Workflow",
          "request": {
            "name": "Get Workflow",
            "description": {
              "content": "Retrieves a workflow by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "description": "(Required) The workflow identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "8275ad70-dcb0-4eb0-83cc-ae7b52d5b7a6",
          "name": "Update Workflow",
          "request": {
            "name": "Update Workflow",
            "description": {
              "content": "Updates the workflow in terms of: name, description, and task configuration (and its details). Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "description": "(Required) The workflow identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"taskConfigurations\": [\n    {\n      \"taskTemplate\": {\n        \"id\": \"<string>\"\n      },\n      \"isSkipped\": \"<boolean>\",\n      \"assignees\": [\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"scope\": {\n        \"type\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"taskTemplate\": {\n        \"id\": \"<string>\"\n      },\n      \"isSkipped\": \"<boolean>\",\n      \"assignees\": [\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"scope\": {\n        \"type\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        }\n      }\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2eedf3bf-f4ca-4bf8-9de5-61d755354658",
          "name": "List Workflows",
          "request": {
            "name": "List Workflows",
            "description": {
              "content": "Retrieves all the workflows in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "name": "Authentication (Start Here)",
      "item": [
        {
          "name": "Obtain a client credentials access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "pm.collectionVariables.set(\"lc_access_token\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                },
                {
                  "key": "audience",
                  "value": "https://api.sdl.com",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "https://sdl-prod.eu.auth0.com/oauth/token",
              "protocol": "https",
              "host": [
                "sdl-prod",
                "eu",
                "auth0",
                "com"
              ],
              "path": [
                "oauth",
                "token"
              ]
            }
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://lc-api.sdl.com/public-api/v1",
      "key": "baseUrl"
    },
    {
      "key": "lc_access_token",
      "value": ""
    },
    {
      "key": "lc_tenant",
      "value": ""
    }
  ],
  "info": {
    "_postman_id": "5ac42530-82c7-485b-b4ce-925f668ad185",
    "name": "RWS Language Cloud API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The RWS Language Cloud public API.",
      "type": "text/plain"
    }
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{lc_access_token}}",
        "type": "string"
      }
    ]
  }
}
