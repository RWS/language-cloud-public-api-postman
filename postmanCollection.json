{
  "item": [
    {
      "id": "a544ceae-7e37-4886-980e-548a499ac798",
      "name": "Account",
      "description": {
        "content": "Account",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7794ea6c-ea60-4fb0-867f-f1f7bf9cc8e3",
          "name": "List my Accounts",
          "request": {
            "name": "List my Accounts",
            "description": {
              "content": "Retrieves the accounts the authenticated user is part of. \nNote: for service users only the account where the user is defined is returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "accounts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "2ed37f00-fc13-413d-94eb-3bc6ac635065",
      "name": "Custom Field",
      "description": {
        "content": "Custom Field",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3d5e7882-e136-4ba5-80fb-a9df4feb22e8",
          "name": "List Custom Field Definitions",
          "request": {
            "name": "List Custom Field Definitions",
            "description": {
              "content": "Retrieves a list of all the custom field definitions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e42e7811-7586-4b66-9aba-f8a8b5656d59",
          "name": "Get Custom Field Definition",
          "request": {
            "name": "Get Custom Field Definition",
            "description": {
              "content": "Retrieves a Custom Field by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions",
                ":customFieldDefinitionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "customFieldDefinitionId",
                  "description": "(Required) The custom field definition identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ba04eed5-e3a5-4bde-a7f9-be71be02a4d9",
      "name": "Customer",
      "description": {
        "content": "Customer",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d0983eea-261b-4f1c-8929-1506abe77343",
          "name": "Get Customer",
          "request": {
            "name": "Get Customer",
            "description": {
              "content": "Retrieves a customer by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "customerId",
                  "description": "(Required) The customer identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4e319292-788c-4fa5-a2fe-b5ad84e46866",
          "name": "List Customers",
          "request": {
            "name": "List Customers",
            "description": {
              "content": "Retrieves a list of all the customers in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "467a66ce-55a1-4b87-95e8-e7ea325d4e22",
      "name": "File Processing Configuration",
      "description": {
        "content": "File Processing Configuration",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c33dac47-7a4f-4280-847e-925c67f57125",
          "name": "Get File Processing Configuration",
          "request": {
            "name": "Get File Processing Configuration",
            "description": {
              "content": "Retrieves a file processing configuration by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "description": "(Required) The file processing configuration identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cf938c1c-cbfe-4875-a8b2-4d8200b9782a",
          "name": "List File Processing Configurations",
          "request": {
            "name": "List File Processing Configurations",
            "description": {
              "content": "Retrieves a list of all the file processing configurations in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "07fd0cdf-7149-44af-88f8-0b8ea9ccbf04",
          "name": "Get File Type Setting",
          "request": {
            "name": "Get File Type Setting",
            "description": {
              "content": "Retrieves a file type setting by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId",
                "file-type-settings",
                ":fileTypeSettingId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "description": "(Required) The file processing configuration identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileTypeSettingId",
                  "description": "(Required) The file type setting identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b479da2c-d826-4ca8-873f-3dba72bba001",
          "name": "List File Type Settings",
          "request": {
            "name": "List File Type Settings",
            "description": {
              "content": "Retrieves a list of all the file type settings in a file processing configuration.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId",
                "file-type-settings"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "description": "(Required) The file processing configuration identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "19aaf45f-c1f6-47fb-95a7-cd433757f0c4",
      "name": "File",
      "description": {
        "content": "File",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "46429f9d-3e8e-4340-a43a-e5886dbd4dfc",
          "name": "Upload Zip File",
          "request": {
            "name": "Upload Zip File",
            "description": {
              "content": "Uploads an archive with source files in a .zip format, to be extracted and used at project creation.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The .zip file to be uploaded.  "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b781a9c4-9941-4418-8e1b-b9f95ae342cd",
          "name": "Poll Upload Zip File",
          "request": {
            "name": "Poll Upload Zip File",
            "description": {
              "content": "Monitors the unzipping operation for a previously uploaded archive and gets details on the extracted files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "files",
                ":fileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "description": "(Required) The uploaded file id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "9e7efc46-5e04-4d33-8ba7-b5bb5ba3f793",
      "name": "Folder",
      "description": {
        "content": "Folder",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "079623de-3477-443d-b3fa-aed5a3313a2c",
          "name": "Get Folder",
          "request": {
            "name": "Get Folder",
            "description": {
              "content": "Retrieves a folder by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                ":folderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "folderId",
                  "description": "(Required) The folder identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "eaab43bb-d126-407d-8d14-d84096951a82",
          "name": "Get Root Folder",
          "request": {
            "name": "Get Root Folder",
            "description": {
              "content": "Retrieves the Root folder in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                "root"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3c415108-91d8-4ec0-a421-bcbbd027ad3c",
          "name": "List Folders",
          "request": {
            "name": "List Folders",
            "description": {
              "content": "Retrieves a list of all the folders in an account. Max 500.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter folders by name."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7501e095-de2c-4ae3-b907-b393cdac6eb8",
      "name": "Group",
      "description": {
        "content": "Group",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b85191ba-5be4-4ccf-9051-2441890450df",
          "name": "Get Group",
          "request": {
            "name": "Get Group",
            "description": {
              "content": "Retrieves a group by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups",
                ":groupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "groupId",
                  "description": "(Required) The group identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "063eb010-f722-43ac-8ca4-6256c57bf337",
          "name": "List Groups",
          "request": {
            "name": "List Groups",
            "description": {
              "content": "Retrieves a list of all the groups in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "d4159e5e-9e70-43b3-852c-4c4162a39776",
      "name": "Language",
      "description": {
        "content": "Language",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e2dc1b51-ae2f-45a9-adbb-1e399e7b8e21",
          "name": "List Languages",
          "request": {
            "name": "List Languages",
            "description": {
              "content": "Retrieves a list of all the languages.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "languages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "languageCodes",
                  "value": "<string>,<string>",
                  "description": "Filter by language codes."
                },
                {
                  "disabled": false,
                  "key": "type",
                  "value": "<string>",
                  "description": "Filter by type."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "f911c57a-8189-4e36-bcd8-77318fe50bb1",
      "name": "Language Processing",
      "description": {
        "content": "Language Processing",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b2a9380b-a2db-4430-b188-bbe8fdd3a8f1",
          "name": "List Language Processing Rules",
          "request": {
            "name": "List Language Processing Rules",
            "description": {
              "content": "Returns a list of Language Processing Rules.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "language-processing-rules"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d168832d-d92d-4bda-86a3-20476a4a25df",
          "name": "Get Language Processing Rule",
          "request": {
            "name": "Get Language Processing Rule",
            "description": {
              "content": "Returns a Language Processing Rule by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "language-processing-rules",
                ":languageProcessingRuleId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "languageProcessingRuleId",
                  "description": "(Required) The language processing rule identifier"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "e186dafd-fd19-405d-bddd-ffd4265d9ffc",
      "name": "Pricing Model",
      "description": {
        "content": "Pricing Model",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "bd0bba5b-d47a-4313-a7f3-0b237ccd7df3",
          "name": "List Pricing Models",
          "request": {
            "name": "List Pricing Models",
            "description": {
              "content": "Retrieves a list of all the pricing models in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "992536e7-4a2c-4325-87fd-ffab165b0de3",
          "name": "Get Pricing Model",
          "request": {
            "name": "Get Pricing Model",
            "description": {
              "content": "Retrieves a pricing model by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models",
                ":pricingModelId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "pricingModelId",
                  "description": "(Required) The pricing model identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "de148bfc-ff06-46f1-b6e8-7b8a333ce687",
      "name": "Project",
      "description": {
        "content": "Project",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "93208753-e05c-49c9-8012-675b99a0e8fd",
          "name": "List Projects",
          "request": {
            "name": "List Projects",
            "description": {
              "content": "Retrieves a list of all the projects in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": false,
                  "key": "excludeOnline",
                  "value": "<boolean>",
                  "description": "Excludes projects that are being worked on exclusively in the Online Editor"
                },
                {
                  "disabled": false,
                  "key": "status",
                  "value": "<string>",
                  "description": "Filter the list of projects to projects that have this status."
                },
                {
                  "disabled": false,
                  "key": "createdFrom",
                  "value": "<dateTime>",
                  "description": "Filter the list of of projects to projects that were created after this date and time.  <br> Accepted format: ISO-8601 `YYYY-MM-DDThh:mm:ss.sssZ`"
                },
                {
                  "disabled": false,
                  "key": "createdTo",
                  "value": "<dateTime>",
                  "description": "Filter the list of of projects to projects that were created before this date and time.  <br> Accepted format: ISO-8601 `YYYY-MM-DDThh:mm:ss.sssZ`"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a82ef43c-7709-44c4-81d2-d483ca361bbc",
          "name": "Create Project",
          "request": {
            "name": "Create Project",
            "description": {
              "content": "Creates a new project.\n\nWhen creating a project using a project template that supports multiple source languages, you must supply the `languageDirections`.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when creating projects.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueBy\": \"<dateTime>\",\n  \"projectTemplate\": {\n    \"id\": \"<string>\"\n  },\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"location\": \"<string>\",\n  \"translationEngine\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"fileProcessingConfiguration\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"workflow\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"pricingModel\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"customFields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    }\n  ],\n  \"tqaProfile\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"forceOnline\": \"<boolean>\",\n  \"projectManagers\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "001385f8-b38e-406d-8dae-a3d49026e390",
          "name": "Get Project",
          "request": {
            "name": "Get Project",
            "description": {
              "content": "Retrieves a project by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8520b7d2-a8b2-419c-ba98-e8b2ae3ed6c4",
          "name": "Update Project",
          "request": {
            "name": "Update Project",
            "description": {
              "content": "Updates the project in terms of: name, description, due date, quote, and project resources. Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueBy\": \"<dateTime>\",\n  \"translationEngine\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"fileProcessingConfiguration\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"pricingModel\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"workflow\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"projectPlan\": {\n    \"taskConfigurations\": [\n      {\n        \"taskTemplate\": {\n          \"id\": \"<string>\"\n        },\n        \"isSkipped\": \"<boolean>\",\n        \"assignees\": [\n          {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n          }\n        ],\n        \"scope\": {\n          \"type\": \"<string>\",\n          \"sourceLanguage\": {\n            \"languageCode\": \"<string>\"\n          },\n          \"targetLanguage\": {\n            \"languageCode\": \"<string>\"\n          },\n          \"languageDirection\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"dueBy\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"tqaProfile\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"quote\": {\n    \"languageCosts\": [\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      }\n    ],\n    \"additionalCosts\": [\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      }\n    ]\n  },\n  \"customFields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    }\n  ],\n  \"projectManagers\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "448ec8e2-9897-4c18-a95c-6663d703fb17",
          "name": "Delete Project",
          "request": {
            "name": "Delete Project",
            "description": {
              "content": "Deletes a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a046462e-8d16-4b5f-a03e-0c24abf6845a",
          "name": "Get Project Configuration",
          "request": {
            "name": "Get Project Configuration",
            "description": {
              "content": "Get the configuration settings of an existing project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "configuration"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d9588489-a4ef-4495-a513-950421e96c6d",
          "name": "Update Project Configuration",
          "request": {
            "name": "Update Project Configuration",
            "description": {
              "content": "Updates the configuration settings for an existing project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "configuration"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"translationMemoryFieldsSettings\": {\n    \"settings\": [\n      {\n        \"name\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": \"<string>\"\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1911d465-a443-4c7d-ad4b-624b6036c6c5",
          "name": "Start Project",
          "request": {
            "name": "Start Project",
            "description": {
              "content": "Starts a project. Translatable files should be uploaded before starting the project. If the action is executed on an already started project, the new translatable files should be uploaded first.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "start"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f3216bf5-deac-4c47-ab6e-416f5209261e",
          "name": "Complete Project",
          "request": {
            "name": "Complete Project",
            "description": {
              "content": "Marks a project as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "39cc3856-ce16-4e53-8ccd-ef012c2d2737",
          "name": "Cancel Project File",
          "request": {
            "name": "Cancel Project File",
            "description": {
              "content": "Cancels a project file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "files",
                ":fileId",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "description": "(Required) The file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "84697edd-7b21-4880-adcb-7692ec7377b8",
          "name": "List Project's Tasks",
          "request": {
            "name": "List Project's Tasks",
            "description": {
              "content": "Lists the tasks of a specific project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "4255bc48-d2fd-4fe3-a50d-478a9791d44d",
      "name": "Project Group",
      "description": {
        "content": "Project Group",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9183c734-e57e-44b0-96d8-13fca9ee43bf",
          "name": "List Project Groups",
          "request": {
            "name": "List Project Groups",
            "description": {
              "content": "Retrieves a list of all the project groups in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9ad9afb3-6c89-48c6-ab58-31394b3b8910",
          "name": "Create Project Group",
          "request": {
            "name": "Create Project Group",
            "description": {
              "content": "Creates a new project group.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"location\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5e7e1cf2-8bc9-432f-a342-17620daeb60b",
          "name": "Get Project Group",
          "request": {
            "name": "Get Project Group",
            "description": {
              "content": "Retrieves a project group by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups",
                ":projectGroupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectGroupId",
                  "description": "(Required) "
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d1f8afe0-b758-429b-b07e-f7386c392c92",
          "name": "Update Project Group",
          "request": {
            "name": "Update Project Group",
            "description": {
              "content": "Updates the project group.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups",
                ":projectGroupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectGroupId",
                  "description": "(Required) "
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "dc7177a3-c475-4cd1-8888-a5ff51f01e42",
          "name": "Delete Project Group",
          "request": {
            "name": "Delete Project Group",
            "description": {
              "content": "Deletes a project group.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups",
                ":projectGroupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectGroupId",
                  "description": "(Required) "
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f7bfe759-de0e-4275-8611-98c0ddacfaad",
          "name": "Add Projects To Group",
          "request": {
            "name": "Add Projects To Group",
            "description": {
              "content": "Adds projects to the project group.\n\nThe projects are not added instantly. To check the status use the [Get Project Group](../reference/Public-API.v1.json/paths/~1project-groups~1{projectGroupId}/get) endpoint.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups",
                ":projectGroupId",
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectGroupId",
                  "description": "(Required) "
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"projects\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b033b84b-f6fb-4b4d-9862-21a7a4e00be3",
          "name": "Remove Projects From Group",
          "request": {
            "name": "Remove Projects From Group",
            "description": {
              "content": "Removes projects from the project group.\n\nThe projects are not removed instantly. To check the status use the [Get Project Group](../reference/Public-API.v1.json/paths/~1project-groups~1{projectGroupId}/get) endpoint.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups",
                ":projectGroupId",
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectGroupId",
                  "description": "(Required) "
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"projects\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7192a386-1f94-4868-a3a5-5926ea76f0f9",
      "name": "Project Template",
      "description": {
        "content": "Project Template",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b24a61c8-1154-4bb4-9048-dfe6103ef7a3",
          "name": "Get Project Template",
          "request": {
            "name": "Get Project Template",
            "description": {
              "content": "Retrieves a project template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates",
                ":projectTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectTemplateId",
                  "description": "(Required) The project template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "dd96758f-d72d-47a1-a6ee-fc5bd4e8f2ce",
          "name": "List Project Templates",
          "request": {
            "name": "List Project Templates",
            "description": {
              "content": "Retrieves a list of all the project templates in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter by name."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "dbfff8e3-53c6-450d-aa1d-1067ca03860d",
      "name": "Public Keys",
      "description": {
        "content": "Public Keys",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "bb1e57c1-95ea-4234-833e-dd9878317ef2",
          "name": "List Public Keys",
          "request": {
            "name": "List Public Keys",
            "description": {
              "content": "List all available Public Keys.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ".well-known",
                "jwks.json"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "951ac904-0eb8-4e5d-933c-2b9e56957420",
          "name": "Get Public Key",
          "request": {
            "name": "Get Public Key",
            "description": {
              "content": "Retrieves a public key by it's identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ".well-known",
                "jwks.json",
                ":kid"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "kid",
                  "description": "(Required) The key identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "d3262621-8315-4d7c-bf79-62d9ce97ac63",
      "name": "Quote",
      "description": {
        "content": "Quote",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "bffc2885-72be-48f9-b88e-3bdb2b3a79b4",
          "name": "Export Quote",
          "request": {
            "name": "Export Quote",
            "description": {
              "content": "Exports the quote for a project in either PDF or Excel format.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format of the quote report."
                },
                {
                  "disabled": false,
                  "key": "languageId",
                  "value": "en",
                  "description": "The language used for localization."
                },
                {
                  "disabled": false,
                  "key": "timeZoneOffset",
                  "value": "<integer>",
                  "description": "The Time Zone Offset for date-time fields."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "207fe922-18c0-4362-bfc1-ffd83853582c",
          "name": "Export Quote Report",
          "request": {
            "name": "Export Quote Report",
            "description": {
              "content": "Generates an asynchronous quote export operation for the project in either PDF or Excel format. Use the [polling endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1export/get) to check when the export is completed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report",
                "export"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format of the quote report."
                },
                {
                  "disabled": false,
                  "key": "languageId",
                  "value": "en",
                  "description": "The language used for localization."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f844f87b-bdfe-46ae-9c1e-942068f50194",
          "name": "Poll Quote Report Export",
          "request": {
            "name": "Poll Quote Report Export",
            "description": {
              "content": "Polls a quote report via an export operation. The quote report can be [downloaded](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1download/get) once the status is \"completed\". The recommended polling interval is 20 seconds. If polling does not return a success status in 20 minutes, it should be abandoned and a new export should be retried.\n\nIf the `exportId` query parameter is not provided, the polling action will return the status for the last generated export.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report",
                "export"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format of the quote report."
                },
                {
                  "disabled": false,
                  "key": "exportId",
                  "value": "<string>",
                  "description": "The export identifier."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9327808c-2224-4738-94da-7579318ed235",
          "name": "Download Exported Quote Report",
          "request": {
            "name": "Download Exported Quote Report",
            "description": {
              "content": "Downloads a quote report generated by the [asynchronous export operation](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1export/post). \n\nThe endpoint might return a 500 Internal Error on a second consecutive download attempt. [See more details.](../docs/Known-Issues.md#download-exported-quote-report)\n\nIf the `exportId` query parameter is not provided, the last generated export quote will be downloaded.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format of the quote report."
                },
                {
                  "disabled": false,
                  "key": "exportId",
                  "value": "<string>",
                  "description": "The export identifier."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "315af436-630f-4a37-abd0-fcf406abac6a",
      "name": "Source File",
      "description": {
        "content": "Source File",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "725c8cb1-a858-4c17-99f3-b75f934194d2",
          "name": "List Source Files",
          "request": {
            "name": "List Source Files",
            "description": {
              "content": "Retrieves the source files in a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7d3f0f3e-a847-4a52-9eff-aa04c9bc943e",
          "name": "Add Source File",
          "request": {
            "name": "Add Source File",
            "description": {
              "content": "Adds a source file to the project. Files can be uploaded before starting a project or after the project has started. When adding the file after the project started, a new start project request should be performed.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.\n\n> Note: The maximum character size of the sum between the `name` and the `path` fields must not exceed 200. Otherwise the request cannot be validated.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "properties",
                  "value": "{\"name\":\"<string>\",\"role\":\"<string>\",\"type\":\"<string>\",\"language\":\"<string>\",\"targetLanguages\":[\"<string>\",\"<string>\"],\"path\":[\"<string>\",\"<string>\"]}",
                  "type": "text",
                  "description": "(Required) "
                },
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fe1da14f-c595-463a-b599-e96525bb2013",
          "name": "Update Source Files",
          "request": {
            "name": "Update Source Files",
            "description": {
              "content": "Updates multiple source files. If any of the files fails to be updated, an error will be returned for each file. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"files\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateTargetFilesName\": false\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateTargetFilesName\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b6782f33-144c-48c7-9e9e-d2dda94a6640",
          "name": "Attach Source Files",
          "request": {
            "name": "Attach Source Files",
            "description": {
              "content": "Adds multiple source files to the project. Files must be uploaded before attaching them to a project. When a file is attached after the project was started, a new start project request should be performed.\n\n\n> Note: The maximum character size of the sum between the `name` and the `path` fields must not exceed 200. Otherwise the request cannot be validated.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                "attach-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourceFilesAttachment\": [\n    {\n      \"name\": \"<string>\",\n      \"role\": \"<string>\",\n      \"fileUrl\": \"<string>\",\n      \"type\": \"<string>\",\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguages\": [\n        {\n          \"languageCode\": \"<string>\"\n        },\n        {\n          \"languageCode\": \"<string>\"\n        }\n      ],\n      \"path\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"role\": \"<string>\",\n      \"fileUrl\": \"<string>\",\n      \"type\": \"<string>\",\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguages\": [\n        {\n          \"languageCode\": \"<string>\"\n        },\n        {\n          \"languageCode\": \"<string>\"\n        }\n      ],\n      \"path\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7a5b102e-12a2-45df-8e54-9ebb39efcdd3",
          "name": "Get Source File",
          "request": {
            "name": "Get Source File",
            "description": {
              "content": "Retrieves a source file from the project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b85b3d2a-c8bc-48b1-97c8-fa851f18a5ee",
          "name": "Update Source File",
          "request": {
            "name": "Update Source File",
            "description": {
              "content": "Updates a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"updateTargetFilesName\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "28fd8ee3-ae7c-4f8c-9b64-eefe78d0d7f5",
          "name": "List Source File Versions",
          "request": {
            "name": "List Source File Versions",
            "description": {
              "content": "Retrieves all the versions of a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "082c5ceb-2962-49a8-9263-3eb88883db8c",
          "name": "Add Source File Version",
          "request": {
            "name": "Add Source File Version",
            "description": {
              "content": "Adds a new version of the source file in [BCM](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html) or native format. More information about file formats can be found on the [File formats](../docs/File-formats.md) page.\n\nThe version is added on the task represented by `taskId`. To successfully  execute the add operation the task should already be assigned and accepted by a user. If the task is automatic, it's possible to add a source file version only when the status of task is `inProgress`.\n\nThe file versions added need to respect the output file type declared by the task type of the enclosing task. On the [Rules for sequencing tasks correctly](https://docs.rws.com/791595/885137/trados-enterprise/rules-for-sequencing-tasks-correctly) page from the official RWS Documentation Center, you can find out what output file type is supported by each task.\n\nFor adding a source file version using an extension task, the configuration of the task must declare the `scope`'s value as \"file\".\n\nIf the file type of the new added file is different than the supported source file type, the new `fileTypeSettingsId` must be specified in the body or an update of file type should be performed after the add operation, using the [Update Source File Properties](../reference/Public-API.v1.json/paths/~1tasks~1{taskId}~1source-files~1{sourceFileId}/put).\n\nThe value of `fileTypeSettingsId` is one of the identifiers listed by the [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get) endpoint.\n\nThe [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get) endpoint must be called with the File Processing Configuration identifier of your project.\n\nThe File Processing Configuration of your project can be retrieved from [Get Project](../reference/Public-API.v1.json/paths/~1projects~1{projectId}/get) endpoint.\n\nThe multipart parameters in the body should respect and strictly follow the order specified in our documentation. \n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when adding files.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "source-files",
                ":sourceFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "properties",
                  "value": "{\"type\":\"<string>\",\"fileTypeSettingsId\":\"<string>\"}",
                  "type": "text",
                  "description": "(Required) "
                },
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The source file."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f34c4cb5-cc68-4998-a53e-fdf19385c7ae",
          "name": "Download Source File Version",
          "request": {
            "name": "Download Source File Version",
            "description": {
              "content": "Downloads a source file version.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ad69fb7e-f6d5-4c7d-8d61-a6f8c370588e",
          "name": "Get Source File Properties",
          "request": {
            "name": "Get Source File Properties",
            "description": {
              "content": "Retrieves the properties for a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1dbe57cf-e62b-42c4-85d4-447aba49a2ba",
          "name": "Update Source File Properties",
          "request": {
            "name": "Update Source File Properties",
            "description": {
              "content": "Updates the properties of the source file.\n\n\nThe value of `fileTypeSettingsId` should be one of the identifiers listed by the [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get)  endpoint called with an identifier of a File Processing Configuration that exists on the project. The list of File Processing Configurations from a project can be retrieved by using the [List File Processing Configurations](../reference/Public-API.v1.json/paths/~1file-processing-configurations/get) endpoint.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileRole\": \"<string>\",\n  \"fileTypeSettingsId\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "8e2073b9-bbfe-4332-8d40-330a0f7c4697",
      "name": "Target File",
      "description": {
        "content": "Target File",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ba3f1267-75c5-457a-90d3-7d1c815fb619",
          "name": "Get Target File",
          "request": {
            "name": "Get Target File",
            "description": {
              "content": "Retrieves a target file from a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b723db43-605c-44f0-8754-06a2c5774d2c",
          "name": "Update Target File",
          "request": {
            "name": "Update Target File",
            "description": {
              "content": "Updates a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "52c1808a-4885-47fe-8256-cab2f2f9ec0e",
          "name": "List Target Files",
          "request": {
            "name": "List Target Files",
            "description": {
              "content": "Retrieves the target files for a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "targetFileIds",
                  "value": "<string>,<string>",
                  "description": "Filter target files by identifiers."
                },
                {
                  "disabled": false,
                  "key": "sourceFileIds",
                  "value": "<string>,<string>",
                  "description": "Filter target files by the identifiers of the source file they were generated from."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "31761c46-02b0-4b88-829d-aa0487cab66b",
          "name": "Update Target Files",
          "request": {
            "name": "Update Target Files",
            "description": {
              "content": "Updates multiple target files. If any of the files fails to be updated, an error will be returned for each file. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"files\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "858b03bc-bf99-4a24-854d-925694876abd",
          "name": "Get Target File Version",
          "request": {
            "name": "Get Target File Version",
            "description": {
              "content": "Retrieves one version of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "34f12de1-b044-4d2b-a6c5-8a54ad7d8875",
          "name": "List Target File Versions",
          "request": {
            "name": "List Target File Versions",
            "description": {
              "content": "Retrieves the versions of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "25ed93ed-b00b-40bc-9488-f9ab75b4ec67",
          "name": "Export Target File Version",
          "request": {
            "name": "Export Target File Version",
            "description": {
              "content": "Generates an asynchronous export operation. Use the [Get Target File Version Export](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1{fileVersionId}~1exports~1{exportId}/get) endpoint to poll until the export is completed. Used only for [BCM](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html) file versions.\n\nThis operation triggers a conversion of the BCM target file version in a native or SDLXLIFF format, based on the value of the `format` query parameter used.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "format",
                  "value": "native",
                  "description": "The file format."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d9a6f3df-6f7d-44dc-8b2a-a25f04cb40ee",
          "name": "Poll Target File Version Export",
          "request": {
            "name": "Poll Target File Version Export",
            "description": {
              "content": "Polls a target file version via an export operation. The new version can be downloaded once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fccf0cf9-8fc8-497c-8812-103a3941d06d",
          "name": "Download Exported Target File Version",
          "request": {
            "name": "Download Exported Target File Version",
            "description": {
              "content": "Downloads a completed target file version via an export operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b363ea64-6851-4f4b-b937-3dc20e753427",
          "name": "Download Target File Version",
          "request": {
            "name": "Download Target File Version",
            "description": {
              "content": "Downloads the file version (native or BCM). \n\nIf the `fileVersionId` path parameter represents a native file version, the native file will be downloaded. If the `fileVersionId` is an identifier of a version in [BCM format](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html), the BCM file will be downloaded.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "029c44db-0179-48d4-a364-c04e1060a44d",
          "name": "Import Target File Version",
          "request": {
            "name": "Import Target File Version",
            "description": {
              "content": "Generates an asynchronous import operation. Use [Poll Target File Version Import endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1imports~1{importId}/get) to poll until the import is completed. Only `sdlxliff` files can be imported.\n\nImport should be used when a file is downloaded as an `sdlxliff`, processed and then, replaced. \nThe import operation triggers internally the update of the [BCM](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html) file associated with the imported file. It should mostly be used for offline work.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5b7207e6-061d-42d9-b32f-3025d8122005",
          "name": "Poll Target File Version Import",
          "request": {
            "name": "Poll Target File Version Import",
            "description": {
              "content": "Polls a target file version via an import operation. The new version can be seen on the file versions once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1741edaf-2cf6-4bcc-aa37-9a6f4c61325c",
          "name": "Add Target File Version",
          "request": {
            "name": "Add Target File Version",
            "description": {
              "content": "Adds a new  version of the target file. Only the `native` and `bcm` file formats are accepted. For the `sdlxliff` files, you should use the [Import Target File endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1imports/post). More information about file formats can be found on the [File formats](../docs/File-formats.md) page. Additional details on BCM files can be found [here](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html).\n\nThe version is added on the task represented by `taskId`. To be able to execute the add operation the task should be assigned and accepted by user. If the task is automatic, it is possible to add a target file version only if the status is `inProgress`.\n\nThe added file versions need to respect the output file type declared by the task type of the enclosing task. On the [Rules for sequencing tasks correctly](https://docs.rws.com/791595/885137/trados-enterprise/rules-for-sequencing-tasks-correctly) page from the official RWS Documentation Center, you can find out what output file type is supported by each task.\n\nFor adding a target file version using an extension task, the configuration of the task type must declare the `scope`'s value as \"file\".\n\nThe multipart parameters in the body should respect and strictly follow the order specified in our documentation.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "target-files",
                ":targetFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "properties",
                  "value": "{\"type\":\"<string>\"}",
                  "type": "text",
                  "description": "(Required) "
                },
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The target file."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a6670b4a-cd63-41c4-9d38-a244600a3036",
      "name": "Task",
      "description": {
        "content": "Task",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "592f6393-c183-4c08-a85c-bd7057619cdc",
          "name": "Get Task",
          "request": {
            "name": "Get Task",
            "description": {
              "content": "Retrieves a task.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "245c3138-baa8-4c41-9d2a-3f04b2d6d6ef",
          "name": "List Tasks assigned to me",
          "request": {
            "name": "List Tasks assigned to me",
            "description": {
              "content": "Retrieves the tasks assigned to the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                "assigned"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "status",
                  "value": "<string>",
                  "description": "If specified, this filters tasks by status."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8fa4ad9c-9a8f-4ce2-b3c4-40cb8fd52df6",
          "name": "Accept Task",
          "request": {
            "name": "Accept Task",
            "description": {
              "content": "Accepts a task. The authenticated user becomes the owner of the accepted task and can start work on it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "accept"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1b3ffc14-55a3-4869-95f7-deb47cf2b894",
          "name": "Reject Task",
          "request": {
            "name": "Reject Task",
            "description": {
              "content": "Rejects a task. The authenticated user will be removed from the task's list of available assignee users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reject"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ecd83891-d94a-44be-90dd-a0b43b4a30f5",
          "name": "Complete Task",
          "request": {
            "name": "Complete Task",
            "description": {
              "content": "Completes a task. The task will be marked as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"outcome\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ae26292a-35d8-4224-950d-0be74c23ea31",
          "name": "Release Task",
          "request": {
            "name": "Release Task",
            "description": {
              "content": "Releases the task from its owner so that other task assignees will be able to accept it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "release"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "55aac8ac-1c8a-4f2c-aa7d-cfa11f542770",
          "name": "Reclaim Task",
          "request": {
            "name": "Reclaim Task",
            "description": {
              "content": "The current owner of task is removed so that other assignees can accept it. \nThe task is not reassigned automatically.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reclaim"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "74823269-2b86-4b04-a83a-6b757280272c",
          "name": "Assign Task",
          "request": {
            "name": "Assign Task",
            "description": {
              "content": "Assigns a task. The task assignees will be updated.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "assign"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignees\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ff595d89-603c-43e7-be46-7f94cd97b239",
      "name": "Task Type",
      "description": {
        "content": "Task Type",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a04bde75-af75-447b-b269-fd0eb85a576e",
          "name": "Get Task Type",
          "request": {
            "name": "Get Task Type",
            "description": {
              "content": "Retrieves a task type by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types",
                ":taskTypeId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskTypeId",
                  "description": "(Required) The task type identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7ca0fa38-8897-495c-a4a2-06336f38a41d",
          "name": "List Task Types",
          "request": {
            "name": "List Task Types",
            "description": {
              "content": "Retrieves all the task types in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "key",
                  "value": "<string>,<string>",
                  "description": "Filter by keys."
                },
                {
                  "disabled": false,
                  "key": "automatic",
                  "value": "<boolean>",
                  "description": "Filter by automatic or human tasks."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "9bed6a90-2dcc-4ca4-98b3-093cce8f03be",
      "name": "Termbase",
      "description": {
        "content": "Termbase",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "63c424cc-5722-493e-83c6-65691af3a6e1",
          "name": "List Termbases",
          "request": {
            "name": "List Termbases",
            "description": {
              "content": "List termbases.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "77a5f429-861c-4eec-b562-3419799a5cef",
          "name": "Create Termbase",
          "request": {
            "name": "Create Termbase",
            "description": {
              "content": "Creates a new termbase.\nThe termbase can be created with a termbase template by providing the templateId or by providing a custom termbaseStructure. \nIf only a `termbaseTemplateId` was provided, the termbase will be created using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be created using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precedence.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\",\n  \"termbaseTemplateId\": \"<string>\",\n  \"termbaseStructure\": {\n    \"languages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e498df26-27a9-43fe-9ea1-f63dc16e50cb",
          "name": "Get Termbase",
          "request": {
            "name": "Get Termbase",
            "description": {
              "content": "Retrieves a termbase by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d7b87bf3-66d6-46e5-a7f7-571eb86d83bc",
          "name": "Delete Termbase",
          "request": {
            "name": "Delete Termbase",
            "description": {
              "content": "Deletes a termbase by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "123919a8-6740-4e4c-942e-bf2b9385be4b",
          "name": "Update Termbase",
          "request": {
            "name": "Update Termbase",
            "description": {
              "content": "Updates the termbase.\nThe termbase can be updated with a termbase template by providing the termbaseTemplateId or by providing a custom termbaseStructure. \n\nIf only a `termbaseTemplateId ` was provided, the termbase will be updated using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be updated using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precedence.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"termbaseTemplateId\": \"<string>\",\n  \"termbaseStructure\": {\n    \"languages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ccd1ab5c-4a49-44f6-bdef-33a72aaab384",
          "name": "Create Termbase Entry",
          "request": {
            "name": "Create Termbase Entry",
            "description": {
              "content": "Creates a new termbase entry. For more information about how to use `fieldValueLinks` see [`Create termbase entry`](../docs/termbase/Termbase-entries.md#creating-a-termbase-entry).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languages\": [\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"humanReadableId\": \"<string>\",\n  \"termbaseFieldValues\": [\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ef6e56f6-3194-42c1-8b37-807e0e7f45fa",
          "name": "List Termbase Entries",
          "request": {
            "name": "List Termbase Entries",
            "description": {
              "content": "Retrieves a list of all the entries in a termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": false,
                  "key": "humanReadableIds",
                  "value": "<string>",
                  "description": "Can provide a list of humanReadableId from entries to filter by."
                },
                {
                  "disabled": false,
                  "key": "humanReadableIds",
                  "value": "<string>",
                  "description": "Can provide a list of humanReadableId from entries to filter by."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b0da7944-64aa-41ee-8dc9-188e14fd9ea0",
          "name": "Delete Termbase Entries",
          "request": {
            "name": "Delete Termbase Entries",
            "description": {
              "content": "Deletes all the entries in the termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "692361c0-8d24-41c9-9d47-e48d3572e873",
          "name": "Get Termbase Entry",
          "request": {
            "name": "Get Termbase Entry",
            "description": {
              "content": "Retrieves a termbase entry by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d6b8e72e-f16a-46c0-9682-2013684c1de9",
          "name": "Update Termbase Entry",
          "request": {
            "name": "Update Termbase Entry",
            "description": {
              "content": "Updates a termbase entry by identifier.\nThe request body will overwrite the existing data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languages\": [\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"id\": \"<string>\",\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"id\": \"<string>\",\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"humanReadableId\": \"<string>\",\n  \"termbaseFieldValues\": [\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3e47f246-33fd-40d3-a6b9-682983d17df9",
          "name": "Delete Termbase Entry",
          "request": {
            "name": "Delete Termbase Entry",
            "description": {
              "content": "Deletes a termbase entry.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "aee2690d-70ff-44ba-9719-bf04539f7730",
          "name": "List Termbase Terms",
          "request": {
            "name": "List Termbase Terms",
            "description": {
              "content": "Retrieves a list of all the terms of the termbase.\nSearch types:\n- normal: Use normal search to look for terms that match the text exactly as entered.\n- linguistic: Use linguistic search to look for terms that are similar to the search term. Linguistic search is based on stemming and other language-dependent aspects.\n- fuzzy: Use fuzzy search to look for terms that are similar to the search term. Fuzzy search is more fault-tolerant than linguistic search.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "terms",
                ":sourceLanguageCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "search",
                  "value": "<string>",
                  "description": "The text to search for."
                },
                {
                  "disabled": false,
                  "key": "searchType",
                  "value": "normal",
                  "description": "The type of the search performed."
                },
                {
                  "disabled": false,
                  "key": "targetLanguageCode",
                  "value": "<string>",
                  "description": "The target language code used to list the terms."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceLanguageCode",
                  "description": "(Required) The source language code used to list the terms."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "62e77fe3-9df6-4554-8ebd-d67c0e9c8986",
      "name": "Termbase Template",
      "description": {
        "content": "Termbase Template",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d8f6d228-90e0-43c9-9888-43e36dc7b744",
          "name": "List Termbase Templates",
          "request": {
            "name": "List Termbase Templates",
            "description": {
              "content": "List termbase templates.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>",
                  "description": "The identifiers of the resource folders. "
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>",
                  "description": "The identifiers of the resource folders. "
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": false,
                  "key": "type",
                  "value": "<string>",
                  "description": "The type of the termbase template to retrieve. If not specified, both types will be returned"
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "836d49e4-77a9-4ee7-a3df-6eb2e2577d8a",
          "name": "Create Termbase Template",
          "request": {
            "name": "Create Termbase Template",
            "description": {
              "content": "Creates a new termbase template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\",\n  \"languages\": [\n    {\n      \"languageCode\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\"\n    }\n  ],\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9f28437f-745e-4406-86d5-d7c8adb698af",
          "name": "Get Termbase Template",
          "request": {
            "name": "Get Termbase Template",
            "description": {
              "content": "Get a termbase template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "91dabbf7-c8cd-4b6c-8fdc-eac1ab91d801",
          "name": "Delete Termbase Template",
          "request": {
            "name": "Delete Termbase Template",
            "description": {
              "content": "Deletes a termbase template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "eadf20b7-f0bb-4981-bbb8-887ded420a75",
          "name": "Update Termbase Template",
          "request": {
            "name": "Update Termbase Template",
            "description": {
              "content": "Updates the termbase template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"languages\": [\n    {\n      \"languageCode\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\"\n    }\n  ],\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cd7f7c58-3df1-421d-8ff5-3c65da6300ae",
          "name": "Convert XDT to Termbase Structure",
          "request": {
            "name": "Convert XDT to Termbase Structure",
            "description": {
              "content": "Converts a termbase definition (XDT file) to a termbase structure that will be returned in the response.<br>\nThe structure will not be stored in Language Cloud.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                "convert-xdt"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The <b>.xdt</b> file used for conversion."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "596e790e-0726-4a27-9edc-f2b12cfcbb58",
      "name": "Termbase Import",
      "description": {
        "content": "Termbase Import",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1f3b7a34-7ee4-4b66-9a93-4b7fbfaf9cf3",
          "name": "Get Termbase Import History",
          "request": {
            "name": "Get Termbase Import History",
            "description": {
              "content": "Gets the import history for a termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "51f6c9d5-59f1-4f6c-a973-a344f66c47f7",
          "name": "Import Termbase",
          "request": {
            "name": "Import Termbase",
            "description": {
              "content": "Generates an asynchronous import operation.<br>\nUse the Poll Import Termbase endpoint to poll until the import status is `done`.<br>",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "strictImport",
                  "value": "true",
                  "description": "Specifies if the entries are only imported into the exact language that matches your imported file.<br> `true` - The import will only occur if the language in your import file matches exactly with a language in your termbase.<br> `false` - The import will occur even there are non-matching languages, by trying to match them to a relevant main language or language variant, if available."
                },
                {
                  "disabled": false,
                  "key": "duplicateEntriesStrategy",
                  "value": "overwrite",
                  "description": "The strategy for duplicate entries. Determines how the duplicate entries will be handled.<br> `ignore` - The content of the current entry with the same identifier will be kept, and the new entry will be ignored<br> `merge` - The content of the current entry with the same identifier will be merged with the imported entry. If the identifier is not provided the content will be merged by text.<br> `overwrite` - The content of the current entry with the same identifier will be replaced by the imported entry."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The file to import into the termbase.<br>\nAccepted file types: <b>.xml</b>, <b>.tbx</b>\n<br>"
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9447459f-1993-4818-b493-64f79c2e3726",
          "name": "Poll Termbase Import",
          "request": {
            "name": "Poll Termbase Import",
            "description": {
              "content": "Polls a termbase import operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "78911fce-3c68-4c12-9320-588454cc5383",
          "name": "Download Termbase Import Logs",
          "request": {
            "name": "Download Termbase Import Logs",
            "description": {
              "content": "Downloads the termbase import logs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports",
                ":importId",
                "logs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "d46f9b5a-6662-4d50-948b-c2d6adc07c09",
      "name": "Termbase Export",
      "description": {
        "content": "Termbase Export",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c1c61cdb-3e13-4057-80f2-b4b3de0632b1",
          "name": "Export Termbase",
          "request": {
            "name": "Export Termbase",
            "description": {
              "content": "Generates an asynchronous export operation.<br>\nUse the Poll Export Termbase endpoint to poll until the export status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"format\": \"tbx\",\n  \"properties\": {\n    \"downloadCompressed\": false\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2c504744-8924-4161-af1c-09e691d5675d",
          "name": "Poll Termbase Export",
          "request": {
            "name": "Poll Termbase Export",
            "description": {
              "content": "Polls a termbase via an export operation. The exported termbase can be downloaded once the status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2febe11c-b78b-4454-b5ab-a9842554e15d",
          "name": "Download Exported Termbase",
          "request": {
            "name": "Download Exported Termbase",
            "description": {
              "content": "Downloads the exported termbase when the poll operation status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "754786e4-704e-4cbc-bdab-8d0e77380f7c",
          "name": "Export Termbase Template",
          "request": {
            "name": "Export Termbase Template",
            "description": {
              "content": "Downloads the termbase definition.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "export-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "40c39b45-3d93-4fc6-84e8-5836d536898f",
      "name": "TQA Profile",
      "description": {
        "content": "TQA Profile",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "19e3d9b8-d4c9-4bb7-9e36-0946fd82fccb",
          "name": "List TQA Profiles",
          "request": {
            "name": "List TQA Profiles",
            "description": {
              "content": "List TQA Profiles.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "14e5aa35-a82a-47e7-bd4c-f46fc7a5ec80",
          "name": "Get TQA Profile",
          "request": {
            "name": "Get TQA Profile",
            "description": {
              "content": "Get a TQA Profile By identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles",
                ":profileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "profileId",
                  "description": "(Required) The profile identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "dcaa1d26-a034-4593-8dcf-fd1b15e0fafd",
      "name": "Translation Engine",
      "description": {
        "content": "Translation Engine",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "fbdc954e-86e4-4de2-9453-ff756ccca7b5",
          "name": "Get Translation Engine",
          "request": {
            "name": "Get Translation Engine",
            "description": {
              "content": "Retrieves a translation engine.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines",
                ":translationEngineId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationEngineId",
                  "description": "(Required) The translation engine identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ee368564-2dc3-472f-8dc0-d2240a74b020",
          "name": "List Translation Engines",
          "request": {
            "name": "List Translation Engines",
            "description": {
              "content": "Retrieves all the translation engines in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "777a810e-882f-4154-a6e5-6cba2221a40d",
      "name": "Translation Memory",
      "description": {
        "content": "Translation Memory",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2f3a6f21-bab0-4357-9993-97189566b40a",
          "name": "Get Translation Memory",
          "request": {
            "name": "Get Translation Memory",
            "description": {
              "content": "Get a single Translation Memory by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The identifier of the translation memory"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "47b21af9-efb5-464e-966d-40c2f484a430",
          "name": "Update Translation Memory",
          "request": {
            "name": "Update Translation Memory",
            "description": {
              "content": "Updates a Translation Memory. We recommend reading this page too [Updating data with PUT](../docs/Updating-data-with-PUT.md).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The identifier of the translation memory"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"languageProcessingRuleId\": \"<string>\",\n  \"fieldTemplateId\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "10588440-7f83-49c3-9f46-d25bd88198f9",
          "name": "Delete Translation Memory",
          "request": {
            "name": "Delete Translation Memory",
            "description": {
              "content": "Deletes a Translation Memory.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The identifier of the translation memory"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8180b5a7-8a47-44d5-bbd4-f19c0ea86991",
          "name": "Copy Translation Memory",
          "request": {
            "name": "Copy Translation Memory",
            "description": {
              "content": "Creates a copy of a Translation Memory. The name will be suffixed with ' (Copy) '",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId",
                "copy"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The identifier of the translation memory"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "78ac122c-8fe3-404b-ae9a-eadd8d7a76b5",
          "name": "List Translation Memories",
          "request": {
            "name": "List Translation Memories",
            "description": {
              "content": "Retrieves all the Translation Memories.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a88d93f6-0f1a-4b2c-a17e-c1654321e49a",
          "name": "Create Translation Memory",
          "request": {
            "name": "Create Translation Memory",
            "description": {
              "content": "Create a new Translation Memory.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"languageProcessingRuleId\": \"<string>\",\n  \"fieldTemplateId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b31dcc0f-95a6-4861-85b3-a1d358510504",
          "name": "List Field Templates",
          "request": {
            "name": "List Field Templates",
            "description": {
              "content": "Retrieves all the Field Templates.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "field-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a51fa6a8-b087-4354-8148-b6512a4dbc60",
          "name": "Get Field Template",
          "request": {
            "name": "Get Field Template",
            "description": {
              "content": "Get a single Field Template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "field-templates",
                ":fieldTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fieldTemplateId",
                  "description": "(Required) The field template identifier"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "e5a3b2a8-ad57-4e08-9aea-35751fc585e6",
      "name": "Translation Memory Import",
      "description": {
        "content": "Translation Memory Import",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9a11962a-09a0-482e-86b8-f79f1b356e8d",
          "name": "Get Translation Memory Import History",
          "request": {
            "name": "Get Translation Memory Import History",
            "description": {
              "content": "Gets the import history for a translation memory.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The identifier of the Translation Memory."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ef5fb02c-0f49-4693-99c3-cd4dbdd91068",
          "name": "Import Translation Memory",
          "request": {
            "name": "Import Translation Memory",
            "description": {
              "content": "Generates an asynchronous import operation. \n<br>\n<br> Read more about prerequisites and limitations on the [official documentation center](https://docs.rws.com/791595/741139/trados-enterprise/importing-tm-content).\n<br>\nNote: The order of the multipart form parameter must be implemented as such: properties first, file second.\n<br>\nUse the Poll Translation Memory Import endpoint to poll until the import status is `done`.<br>\nTo track the progress of the import please refer to [Poll Translation Memory Import](../reference/Public-API.v1.json/paths/~1translation-memory~1imports~1{importId}/get).\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The identifier of the Translation Memory."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "properties",
                  "value": "{\"sourceLanguageCode\":\"<string>\",\"targetLanguageCode\":\"<string>\",\"importAsPlainText\":false,\"exportInvalidTranslationUnits\":true,\"triggerRecomputeStatistics\":false,\"targetSegmentsDifferOption\":\"addNew\",\"unknownFieldsOption\":\"addToTranslationMemory\",\"onlyImportSegmentsWithConfirmationLevels\":[\"<string>\",\"<string>\"]}",
                  "type": "text",
                  "description": "(Required) "
                },
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The file to import into the translation memory.<br>Accepted file types: <b>.tmx</b>, <b>.sdltm</b>, <b>.zip</b>, <b>.tmx.gz</b>, <b>.sdlxliff</b>"
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3da794d4-ca7e-4d0c-9c25-838b5f326a34",
          "name": "Poll Translation Memory Import",
          "request": {
            "name": "Poll Translation Memory Import",
            "description": {
              "content": "Polls a Translation Memory import operation. The import is finished when the status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "80cc2493-6775-46ed-b5a2-1f418180b4fd",
      "name": "Translation Memory Export",
      "description": {
        "content": "Translation Memory Export",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c39097bf-6ce5-4b6c-b029-52d7bd24f848",
          "name": "Export Translation Memory",
          "request": {
            "name": "Export Translation Memory",
            "description": {
              "content": "Generates an asynchronous export operation.\nUse the [Poll Translation Memory Export](../reference/Public-API.v1.json/paths/~1translation-memory~1exports~1{exportId}/get) endpoint to poll until the export status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "description": "(Required) The translation memory identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languageDirection\": {\n    \"sourceLanguage\": {\n      \"languageCode\": \"<string>\"\n    },\n    \"targetLanguage\": {\n      \"languageCode\": \"<string>\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f0401681-6cea-403d-b1e4-1d12bef8a2dd",
          "name": "Poll Translation Memory Export",
          "request": {
            "name": "Poll Translation Memory Export",
            "description": {
              "content": "Polls a translation memory via an export operation. The exported translation memory can be downloaded once the status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bc82d451-ae95-4ae0-abaa-2811dcf3b2c1",
          "name": "Download Exported Translation Memory",
          "request": {
            "name": "Download Exported Translation Memory",
            "description": {
              "content": "Downloads the exported translation memory in the `tmx.gz` format when the poll operation status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ed3fb3dd-838c-46f7-8869-f06b68b1b272",
      "name": "User",
      "description": {
        "content": "User",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3e5d91a9-6007-4bf8-9b10-1c7c76813603",
          "name": "Get my User",
          "request": {
            "name": "Get my User",
            "description": {
              "content": "Retrieves the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "me"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f16d4f27-204b-4d4e-89e1-f5d2fa7a4a79",
          "name": "List Users",
          "request": {
            "name": "List Users",
            "description": {
              "content": "Retrieves a list of all the users in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7943e86c-0fba-4414-ba41-8965524b42f3",
          "name": "Get User",
          "request": {
            "name": "Get User",
            "description": {
              "content": "Retrieves a user by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                ":userId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "userId",
                  "description": "(Required) The user identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "61d4a931-90b4-40db-9865-ec01697c4b4c",
      "name": "Workflow",
      "description": {
        "content": "Workflow",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c03d09e3-8cbd-4018-9a82-70fdb9f3ce08",
          "name": "Get Workflow",
          "request": {
            "name": "Get Workflow",
            "description": {
              "content": "Retrieves a workflow by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "description": "(Required) The workflow identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2c0d9a39-3587-44d6-be30-df8ae28c15ad",
          "name": "Update Workflow",
          "request": {
            "name": "Update Workflow",
            "description": {
              "content": "Updates the workflow in terms of: name, description, and task configuration (and its details). Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "description": "(Required) The workflow identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"taskConfigurations\": [\n    {\n      \"taskTemplate\": {\n        \"id\": \"<string>\"\n      },\n      \"isSkipped\": \"<boolean>\",\n      \"assignees\": [\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"scope\": {\n        \"type\": \"<string>\",\n        \"sourceLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"languageDirection\": {\n          \"id\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"taskTemplate\": {\n        \"id\": \"<string>\"\n      },\n      \"isSkipped\": \"<boolean>\",\n      \"assignees\": [\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"scope\": {\n        \"type\": \"<string>\",\n        \"sourceLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"languageDirection\": {\n          \"id\": \"<string>\"\n        }\n      }\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "68d10075-a7d4-49cf-ab07-ab5ac86dbeb5",
          "name": "List Workflows",
          "request": {
            "name": "List Workflows",
            "description": {
              "content": "Retrieves all the workflows in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "name": "Authentication (Start Here)",
      "item": [
        {
          "name": "Obtain a client credentials access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "pm.collectionVariables.set(\"lc_access_token\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                },
                {
                  "key": "audience",
                  "value": "https://api.sdl.com",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "https://sdl-prod.eu.auth0.com/oauth/token",
              "protocol": "https",
              "host": [
                "sdl-prod",
                "eu",
                "auth0",
                "com"
              ],
              "path": [
                "oauth",
                "token"
              ]
            }
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://lc-api.sdl.com/public-api/v1",
      "key": "baseUrl"
    },
    {
      "key": "lc_access_token",
      "value": ""
    },
    {
      "key": "lc_tenant",
      "value": ""
    }
  ],
  "info": {
    "_postman_id": "0edf1323-b742-4cb8-90ea-0cdeec09d404",
    "name": "RWS Language Cloud API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The RWS Language Cloud public API.",
      "type": "text/plain"
    }
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{lc_access_token}}",
        "type": "string"
      }
    ]
  }
}
