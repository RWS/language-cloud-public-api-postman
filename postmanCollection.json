{
  "item": [
    {
      "id": "59175a60-b81e-4a80-b4a4-8491c8b6624e",
      "name": "Account",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f6f5f0be-18e0-4305-ae6c-8b95cf1f7559",
          "name": "List my Accounts",
          "request": {
            "name": "List my Accounts",
            "description": {
              "content": "Retrieves the accounts the authenticated user is part of. \nNote: for service users only the account where the user is defined is returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "accounts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "df23fd9e-1088-40b2-87c8-322bc31ecb9b",
      "name": "Custom Field",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "691804b2-b67c-4427-8ed8-6fd9501c1a7a",
          "name": "List Custom Field Definitions",
          "request": {
            "name": "List Custom Field Definitions",
            "description": {
              "content": "Retrieves a list of all the custom field definitions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "ffbc1375-f026-4364-a1da-84726e1ca290",
          "name": "Get Custom Field Definition",
          "request": {
            "name": "Get Custom Field Definition",
            "description": {
              "content": "Retrieves a Custom Field by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions",
                ":customFieldDefinitionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "customFieldDefinitionId",
                  "description": "(Required) The custom field definition identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "df455333-b13d-4db0-8283-4f30eb8dd2ec",
      "name": "Folder",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "440fb5ca-f7ad-4587-8989-37786236e388",
          "name": "Get Folder",
          "request": {
            "name": "Get Folder",
            "description": {
              "content": "Retrieves a folder by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                ":folderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "folderId",
                  "description": "(Required) The folder identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "eb5c1f06-3748-4ab6-a5b3-d997887a86a2",
          "name": "Get Root Folder",
          "request": {
            "name": "Get Root Folder",
            "description": {
              "content": "Retrieves the Root folder in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                "root"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "8c7deaeb-e5c1-41ae-b7c5-5050deeab883",
          "name": "List Folders",
          "request": {
            "name": "List Folders",
            "description": {
              "content": "Retrieves a list of all the folders in an account. Max 500.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter folders by name."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "a67a6d6c-25c7-4fed-8387-846d61118b49",
      "name": "User",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "05276bbb-462d-457e-a735-98b4060391e9",
          "name": "Get my User",
          "request": {
            "name": "Get my User",
            "description": {
              "content": "Retrieves the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "me"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "b2bae646-e21e-4c3a-9eea-ac4ecf03711c",
          "name": "List Users",
          "request": {
            "name": "List Users",
            "description": {
              "content": "Retrieves a list of all the users in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "76a603a1-d8e2-4a8d-887f-3abc5fc108bb",
          "name": "Get User",
          "request": {
            "name": "Get User",
            "description": {
              "content": "Retrieves a user by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                ":userId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "userId",
                  "description": "(Required) The user identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "818f5ee4-69b2-42fc-9933-748431e6c5af",
      "name": "Group",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7a552721-1abe-48fd-9030-836090955ea7",
          "name": "Get Group",
          "request": {
            "name": "Get Group",
            "description": {
              "content": "Retrieves a group by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups",
                ":groupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "groupId",
                  "description": "(Required) The group identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "6a5a6511-63dc-4c14-aad7-417e34a1e75f",
          "name": "List Groups",
          "request": {
            "name": "List Groups",
            "description": {
              "content": "Retrieves a list of all the groups in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "42b8cae6-b08d-442a-a1b0-40ff26fa2533",
      "name": "Customer",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "58a0e0de-79b3-4a51-8fb9-0db9deb1b27a",
          "name": "Get Customer",
          "request": {
            "name": "Get Customer",
            "description": {
              "content": "Retrieves a customer by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "customerId",
                  "description": "(Required) The customer identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "95f039ec-1d73-4b61-8d2f-86942fdc83d9",
          "name": "List Customers",
          "request": {
            "name": "List Customers",
            "description": {
              "content": "Retrieves a list of all the customers in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "88643f5a-6740-4e3b-bad8-f6525c08e001",
      "name": "Project",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7d257b53-8fd3-4c24-a834-5234ef29c944",
          "name": "Get Project",
          "request": {
            "name": "Get Project",
            "description": {
              "content": "Retrieves a project by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "e93cf0ee-fe1a-4f38-9a56-7d09f6417c7d",
          "name": "Update Project",
          "request": {
            "name": "Update Project",
            "description": {
              "content": "Updates the project in terms of: name, description, due date, language pairs, quote, and project resources. Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dueBy\": \"<dateTime>\",\n    \"languageDirections\": [\n        {\n            \"sourceLanguage\": {\n                \"languageCode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"targetLanguage\": {\n                \"languageCode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        {\n            \"sourceLanguage\": {\n                \"languageCode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"targetLanguage\": {\n                \"languageCode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    ],\n    \"translationEngine\": {\n        \"id\": \"<string>\",\n        \"strategy\": \"copy\"\n    },\n    \"fileProcessingConfiguration\": {\n        \"id\": \"<string>\",\n        \"strategy\": \"copy\"\n    },\n    \"pricingModel\": {\n        \"id\": \"<string>\",\n        \"strategy\": \"copy\"\n    },\n    \"workflow\": {\n        \"id\": \"<string>\",\n        \"strategy\": \"copy\"\n    },\n    \"tqaProfile\": {\n        \"id\": \"<string>\",\n        \"strategy\": \"copy\"\n    },\n    \"quote\": {\n        \"languageCosts\": [\n            {\n                \"name\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"count\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"cost\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"costOrder\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostThreshold\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"costType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"volumeUnitType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"targetLanguage\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostOperator\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostVariable\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"name\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"count\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"cost\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"costOrder\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostThreshold\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"costType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"volumeUnitType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"targetLanguage\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostOperator\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostVariable\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ],\n        \"additionalCosts\": [\n            {\n                \"name\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"count\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"cost\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"costOrder\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostThreshold\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"costType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"volumeUnitType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostOperator\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostVariable\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            {\n                \"name\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"count\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"cost\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"costOrder\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostThreshold\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"costType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"volumeUnitType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostOperator\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"conditionalCostVariable\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        ]\n    },\n    \"customFields\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<object>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<object>\"\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": []
        },
        {
          "id": "5ab205b0-64c6-4897-afb1-79ce80e1cac9",
          "name": "Delete Project",
          "request": {
            "name": "Delete Project",
            "description": {
              "content": "Deletes a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "3b280606-2d95-4f71-972d-22d9ced8fda1",
          "name": "List Projects",
          "request": {
            "name": "List Projects",
            "description": {
              "content": "Retrieves a list of all the projects in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": false,
                  "key": "excludeOnline",
                  "value": "<boolean>",
                  "description": "Excludes projects that are being worked on exclusively in the Online Editor"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "074117ee-f205-4e51-bece-e42c91c56f9f",
          "name": "Create Project",
          "request": {
            "name": "Create Project",
            "description": {
              "content": "Creates a new project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"dueBy\": \"<dateTime>\",\n    \"projectTemplate\": {\n        \"id\": \"<string>\"\n    },\n    \"languageDirections\": [\n        {\n            \"sourceLanguage\": {\n                \"languageCode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"targetLanguage\": {\n                \"languageCode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        {\n            \"sourceLanguage\": {\n                \"languageCode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"targetLanguage\": {\n                \"languageCode\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    ],\n    \"location\": \"<string>\",\n    \"translationEngine\": {\n        \"id\": \"<string>\",\n        \"strategy\": \"copy\"\n    },\n    \"fileProcessingConfiguration\": {\n        \"id\": \"<string>\",\n        \"strategy\": \"copy\"\n    },\n    \"workflow\": {\n        \"id\": \"<string>\",\n        \"strategy\": \"copy\"\n    },\n    \"pricingModel\": {\n        \"id\": \"<string>\",\n        \"strategy\": \"copy\"\n    },\n    \"customFields\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<object>\"\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": \"<object>\"\n        }\n    ],\n    \"tqaProfile\": {\n        \"id\": \"<string>\",\n        \"strategy\": \"copy\"\n    },\n    \"forceOnline\": \"<boolean>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": []
        },
        {
          "id": "168f913f-fdee-468c-ba89-992971adabb7",
          "name": "Start Project",
          "request": {
            "name": "Start Project",
            "description": {
              "content": "Starts a project. Before starting a project, translatable files should be uploaded. If the action is executed on an already started project, new translatable files should be uploaded first.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "start"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "797d2b47-22a0-4d1c-83ee-9d9b36eba2b6",
          "name": "Complete Project",
          "request": {
            "name": "Complete Project",
            "description": {
              "content": "Marks a project as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "9b76d357-0709-4bf0-8432-8ea089da5ec7",
          "name": "List Project's Tasks",
          "request": {
            "name": "List Project's Tasks",
            "description": {
              "content": "List the tasks of a specific project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "c3e75c51-c211-4367-be74-849993d29909",
          "name": "Cancel Project File",
          "request": {
            "name": "Cancel Project File",
            "description": {
              "content": "Cancels a project file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "files",
                ":fileId",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "description": "(Required) The file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "2a0645d4-70e2-42b4-9f54-dc03c27f2c8a",
      "name": "Project Template",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3e440990-ddaa-41a5-a779-84fb577f3d14",
          "name": "Get Project Template",
          "request": {
            "name": "Get Project Template",
            "description": {
              "content": "Retrieves a project template by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates",
                ":projectTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectTemplateId",
                  "description": "(Required) The project template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "70157bc2-d23b-4db0-aee3-dafdb52d2b0a",
          "name": "List Project Templates",
          "request": {
            "name": "List Project Templates",
            "description": {
              "content": "Retrieves a list of all the project templates in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter by name."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "af568221-91c8-4803-b0a7-1422253dc6de",
      "name": "Source File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3802c6ae-a86f-49ac-83b8-8c5743c67429",
          "name": "List Source Files",
          "request": {
            "name": "List Source Files",
            "description": {
              "content": "Retrieves the source files in a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "1abf3c54-29a1-4604-a470-d5f1b44c9910",
          "name": "Add Source File",
          "request": {
            "name": "Add Source File",
            "description": {
              "content": "Adds a source file to the project. A file can be uploaded before starting a project or after project was started. When a file is added after the project was started, a new start project request should be performed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) "
                },
                {
                  "key": "properties",
                  "value": "{\"name\":\"<string>\",\"role\":\"<string>\",\"type\":\"<string>\",\"language\":\"<string>\",\"targetLanguages\":[\"<string>\",\"<string>\"],\"path\":[\"<string>\",\"<string>\"]}",
                  "type": "text",
                  "description": "(Required) "
                }
              ]
            }
          },
          "event": []
        },
        {
          "id": "5387b04a-7766-4af9-a0f2-e1fc44f9f832",
          "name": "Get Source File",
          "request": {
            "name": "Get Source File",
            "description": {
              "content": "Retrieves a source file from the project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "5885976c-5750-4a79-a461-bae8f3aa1623",
          "name": "List Source File Versions",
          "request": {
            "name": "List Source File Versions",
            "description": {
              "content": "Retrieves all the versions of a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "c3282ae1-c98e-44a2-8a90-79bf69c3602c",
          "name": "Download Source File Version",
          "request": {
            "name": "Download Source File Version",
            "description": {
              "content": "Downloads a source file version.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "1c6b2acf-dd4f-43d9-95dd-47493a957346",
      "name": "Target File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "67f5055e-96b7-4d0d-ac81-fbf649809180",
          "name": "Get Target File",
          "request": {
            "name": "Get Target File",
            "description": {
              "content": "Retrieves a target file from a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "235eafd6-f0b1-49c7-8933-b262d34ca0cf",
          "name": "List Target Files",
          "request": {
            "name": "List Target Files",
            "description": {
              "content": "Retrieves the target files for a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "targetFileIds",
                  "value": "<string>,<string>",
                  "description": "Filter target files by ids."
                },
                {
                  "disabled": false,
                  "key": "sourceFileIds",
                  "value": "<string>,<string>",
                  "description": "Filter target files by the ids of the source file they were generated from."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "7f1f89ff-0ab8-4054-8b31-c1ca53939c45",
          "name": "Get Target File Version",
          "request": {
            "name": "Get Target File Version",
            "description": {
              "content": "Retrieves one version of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "db1b722b-28d3-4cf7-9a1d-998faaafbf88",
          "name": "List Target File Versions",
          "request": {
            "name": "List Target File Versions",
            "description": {
              "content": "Retrieves the versions of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "99020286-f02f-4a3c-ba28-983acc4bf73a",
          "name": "Export Target File Version",
          "request": {
            "name": "Export Target File Version",
            "description": {
              "content": "Generates an asynchronous export operation. Use the Get Target File Version export endpoint to poll until the export is completed. Used only for bcm file versions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "format",
                  "value": "native",
                  "description": "The file format."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "event": []
        },
        {
          "id": "a8ff1475-3348-446f-b138-8712b0bb1ef0",
          "name": "Poll Target File Version Export",
          "request": {
            "name": "Poll Target File Version Export",
            "description": {
              "content": "Polls a target file version via an export operation. The new version can be downloaded once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "3ed79fbd-b304-4b35-99f4-2e576ff9f041",
          "name": "Download Exported Target File Version",
          "request": {
            "name": "Download Exported Target File Version",
            "description": {
              "content": "Downloads a completed target file version via an export operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "abbf4541-5d7c-4d95-8759-2a4339391b01",
          "name": "Download Target File Version",
          "request": {
            "name": "Download Target File Version",
            "description": {
              "content": "Downloads the file version (native and BCM). ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "6d17d04d-6e8b-4674-b1fb-d5f6f0eb7725",
          "name": "Import Target File Version",
          "request": {
            "name": "Import Target File Version",
            "description": {
              "content": "Generates an asynchronous import operation. Use the Get Target File Version Import endpoint to poll until the import is completed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": ""
                }
              ]
            }
          },
          "event": []
        },
        {
          "id": "a053b2c1-e8aa-4ccd-b348-c4ba4b32044c",
          "name": "Poll Target File Version Import",
          "request": {
            "name": "Poll Target File Version Import",
            "description": {
              "content": "Polls a target file version via an import operation. The new version can be seen on the file versions once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "2e69b0d2-69b6-4d28-a95a-51aae1cb935b",
      "name": "Task",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e5ec6230-3f83-4b3e-86c7-6a24bc2f04f1",
          "name": "Get Task",
          "request": {
            "name": "Get Task",
            "description": {
              "content": "Retrieves a task.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "752de1f4-662a-4301-b870-ca919c727c45",
          "name": "List Tasks assigned to me",
          "request": {
            "name": "List Tasks assigned to me",
            "description": {
              "content": "Retrieves the tasks assigned to the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                "assigned"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "status",
                  "value": "<string>",
                  "description": "Filters tasks by status if specified."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "f4f398c0-33e5-43c0-b08c-3a32955bbbc9",
          "name": "Accept Task",
          "request": {
            "name": "Accept Task",
            "description": {
              "content": "Accepts a task. The authenticated user will become the owner of the accepted task.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "accept"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "846716cf-4703-4433-b33c-1fcab5ad62af",
          "name": "Reject Task",
          "request": {
            "name": "Reject Task",
            "description": {
              "content": "Rejects a task. The authenticated user will be removed from the task's assignee list.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reject"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "406ac043-75b2-4f65-90c3-30747fedee3a",
          "name": "Complete Task",
          "request": {
            "name": "Complete Task",
            "description": {
              "content": "Completes a task. The task will be marked as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"outcome\": \"<string>\",\n    \"comment\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": []
        },
        {
          "id": "ed15b510-4fe0-45bb-9e6e-5370ff93726c",
          "name": "Release Task",
          "request": {
            "name": "Release Task",
            "description": {
              "content": "Releases the task from its owner. The other task assignee will be able to accept it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "release"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "3b9b0418-f082-4248-a5ab-a0d36b7c42be",
          "name": "Reclaim Task",
          "request": {
            "name": "Reclaim Task",
            "description": {
              "content": "The owner of task is removed and another user from the assignee’s list can accept it. \nThe task is not reassigned automatically.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reclaim"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "02bdbf2c-7282-4ad5-b7e4-b12fb5194e1b",
          "name": "Assign Task",
          "request": {
            "name": "Assign Task",
            "description": {
              "content": "Assigns a task. Task assignees will be updated.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "assign"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"assignees\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\"\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3ddf3e9d-12e5-414c-866d-e1dd3fc8dafb",
      "name": "Task Type",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c774cc4b-48a9-4e2d-b516-e322c24ac85e",
          "name": "Get Task Type",
          "request": {
            "name": "Get Task Type",
            "description": {
              "content": "Retrieves a task type by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types",
                ":taskTypeId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskTypeId",
                  "description": "(Required) The task type identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "2ea79b34-76e0-476f-afcc-f35bec312fac",
          "name": "List Task Types",
          "request": {
            "name": "List Task Types",
            "description": {
              "content": "Retrieves all the task types in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "key",
                  "value": "<string>,<string>",
                  "description": "Filter by keys."
                },
                {
                  "disabled": false,
                  "key": "automatic",
                  "value": "<boolean>",
                  "description": "Filter by automatic or human tasks."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "5f9e73b6-5fb3-42bd-8615-7ed193b14ae5",
      "name": "TQA Profile",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3e651a9a-2300-427c-82f5-b711aac93726",
          "name": "List TQA Profiles",
          "request": {
            "name": "List TQA Profiles",
            "description": {
              "content": "List TQA Profiles.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "5afc0ca0-5d43-46d3-817a-e3bec32e5a0a",
          "name": "Get TQA Profile",
          "request": {
            "name": "Get TQA Profile",
            "description": {
              "content": "Get a TQA Profile By Id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles",
                ":profileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "profileId",
                  "description": "(Required) The profile identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "d9e63975-c4ff-4519-ad7c-3e72e46dda3e",
      "name": "Workflow",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "db410dbc-cae3-4869-907d-ff89852a2c29",
          "name": "Get Workflow",
          "request": {
            "name": "Get Workflow",
            "description": {
              "content": "Retrieves a workflow by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "description": "(Required) The workflow identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "40fa1880-351c-4178-a4e0-1332de55e210",
          "name": "Update Workflow",
          "request": {
            "name": "Update Workflow",
            "description": {
              "content": "Updates the workflow in terms of: name, description, and task configuration (and its details). Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "description": "(Required) The workflow identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"taskConfigurations\": [\n        {\n            \"taskTemplate\": {\n                \"id\": \"<string>\"\n            },\n            \"isSkipped\": \"<boolean>\",\n            \"assignees\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"scope\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"targetLanguage\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        {\n            \"taskTemplate\": {\n                \"id\": \"<string>\"\n            },\n            \"isSkipped\": \"<boolean>\",\n            \"assignees\": [\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            ],\n            \"scope\": {\n                \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"targetLanguage\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": []
        },
        {
          "id": "148f49eb-863b-4068-9f57-33b3f6db7d4d",
          "name": "List Workflows",
          "request": {
            "name": "List Workflows",
            "description": {
              "content": "Retrieves all the workflows in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "44a27a03-e28f-4f56-ab79-e3bc76ae2b73",
      "name": "File Processing Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "00d55896-6d71-4902-837f-250e79d82cb7",
          "name": "Get File Processing Configuration",
          "request": {
            "name": "Get File Processing Configuration",
            "description": {
              "content": "Retrieves a file processing configuration by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "description": "(Required) The file processing configuration identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "816b1e33-8457-4215-80a7-0afe8794a69d",
          "name": "List File Processing Configurations",
          "request": {
            "name": "List File Processing Configurations",
            "description": {
              "content": "Retrieves a list of all the file processing configurations in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "32fb8fd9-786f-4cf0-ba6e-c7095431e07f",
      "name": "Translation Engine",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "726e3aec-0fd6-479e-b274-b0128817070c",
          "name": "Get Translation Engine",
          "request": {
            "name": "Get Translation Engine",
            "description": {
              "content": "Retrieves a translation engine.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines",
                ":translationEngineId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationEngineId",
                  "description": "(Required) The translation engine identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "44cc67d1-233d-41a0-b15e-6fec7dc8a06e",
          "name": "List Translation Engines",
          "request": {
            "name": "List Translation Engines",
            "description": {
              "content": "Retrieves all the translation engines in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "2e60db6d-c9a8-45db-a57a-726bab458d03",
      "name": "Pricing Model",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "451fc287-f4c6-4e74-9fdf-4a82abfe3e25",
          "name": "Get Pricing Model",
          "request": {
            "name": "Get Pricing Model",
            "description": {
              "content": "Retrieves a pricing model by id.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models",
                ":pricingModelId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "pricingModelId",
                  "description": "(Required) The pricing model identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "f1779dfe-79ff-44ea-b59a-343f987844d3",
          "name": "List Pricing Models",
          "request": {
            "name": "List Pricing Models",
            "description": {
              "content": "Retrieves a list of all the pricing models in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "top",
                  "value": "100",
                  "description": "Number of items to include inside the page."
                },
                {
                  "disabled": false,
                  "key": "skip",
                  "value": "0",
                  "description": "Number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": false,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The ids of the folders where you want to retrieve resources from. More complex behavior can be set by also using the 'locationStrategy'."
                },
                {
                  "disabled": false,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options:\nlocation: all resources located strictly in the folders from 'location' param (default).\nlineage: all resources located in the folders specified in 'location' param, as well as the subfolders\nbloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders\ngenealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": false,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "18f033a9-5856-4d3e-921f-b8346daa6412",
      "name": "Language",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6f271d0e-99f5-4d9b-bac2-3654f644b681",
          "name": "List Languages",
          "request": {
            "name": "List Languages",
            "description": {
              "content": "Retrieves a list of all the languages.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "languages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "languageCodes",
                  "value": "<string>,<string>",
                  "description": "Filter by language codes."
                },
                {
                  "disabled": false,
                  "key": "type",
                  "value": "<string>",
                  "description": "Filter by type."
                },
                {
                  "disabled": false,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "d3fe96fe-a103-42bf-ad9c-712c0ef91f31",
      "name": "Quote",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c7504650-ef97-4351-a048-b4fae6bff72b",
          "name": "Export Quote",
          "request": {
            "name": "Export Quote",
            "description": {
              "content": "Exports the quote for the Project in either PDF or Excel format.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format for the downloaded quote."
                },
                {
                  "disabled": false,
                  "key": "languageId",
                  "value": "en",
                  "description": "The language used for quote localization."
                },
                {
                  "disabled": false,
                  "key": "timeZoneOffset",
                  "value": "<integer>",
                  "description": "The Time Zone Offset for date-time fields."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The id of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "name": "Authentication (Start Here)",
      "item": [
        {
          "name": "Obtain a client credentials access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "pm.collectionVariables.set(\"lc_access_token\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                },
                {
                  "key": "audience",
                  "value": "https://api.sdl.com",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "https://sdl-prod.eu.auth0.com/oauth/token",
              "protocol": "https",
              "host": [
                "sdl-prod",
                "eu",
                "auth0",
                "com"
              ],
              "path": [
                "oauth",
                "token"
              ]
            }
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://lc-api.sdl.com/public-api/v1",
      "key": "baseUrl"
    },
    {
      "key": "lc_access_token",
      "value": ""
    },
    {
      "key": "lc_tenant",
      "value": ""
    }
  ],
  "info": {
    "_postman_id": "ebeed360-5ae8-4c37-9e0f-7d81fd5a98de",
    "name": "Public API Live API.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The Language Cloud public API.",
      "type": "text/plain"
    }
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{lc_access_token}}",
        "type": "string"
      }
    ]
  }
}
