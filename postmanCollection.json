{
  "item": [
    {
      "id": "c0aaa583-09b6-48b2-a71b-6fed6d49927f",
      "name": "Account",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8b82fa1b-50b6-4991-bb2f-b86fcd286e70",
          "name": "List my Accounts",
          "request": {
            "name": "List my Accounts",
            "description": {
              "content": "Retrieves the accounts the authenticated user is part of. \nNote: for service users only the account where the user is defined is returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "accounts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "e7763637-38c3-47f5-9dda-88d277f94ae0",
      "name": "Custom Field",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "73ce0d3a-efbb-4375-bd73-90154c82b626",
          "name": "List Custom Field Definitions",
          "request": {
            "name": "List Custom Field Definitions",
            "description": {
              "content": "Retrieves a list of all the custom field definitions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "880053e6-3940-4e89-8a34-6e6dce1bc0bf",
          "name": "Get Custom Field Definition",
          "request": {
            "name": "Get Custom Field Definition",
            "description": {
              "content": "Retrieves a Custom Field by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions",
                ":customFieldDefinitionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "customFieldDefinitionId",
                  "description": "(Required) The custom field definition identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "977cd1f5-0dc8-4d21-85c2-1e0b3fcb8a49",
      "name": "Customer",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "08f78183-95f5-44d1-b0d6-c567762deb3f",
          "name": "Get Customer",
          "request": {
            "name": "Get Customer",
            "description": {
              "content": "Retrieves a customer by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "customerId",
                  "description": "(Required) The customer identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "35177811-89f6-4232-ae9f-52f6deb800be",
          "name": "List Customers",
          "request": {
            "name": "List Customers",
            "description": {
              "content": "Retrieves a list of all the customers in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "ebe41120-c75d-4755-b240-582c573245a7",
      "name": "File Processing Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3cfb7604-758d-4b61-b8d9-2f8efc543034",
          "name": "Get File Processing Configuration",
          "request": {
            "name": "Get File Processing Configuration",
            "description": {
              "content": "Retrieves a file processing configuration by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "description": "(Required) The file processing configuration identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "22a622f6-f131-4049-8bfe-4e76ddc9c3c6",
          "name": "List File Processing Configurations",
          "request": {
            "name": "List File Processing Configurations",
            "description": {
              "content": "Retrieves a list of all the file processing configurations in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "bcc3e116-13c2-495d-8c3b-f2990344ecaf",
      "name": "File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a8f8c004-2480-45bd-81f0-d85960e04d4e",
          "name": "Upload Zip File",
          "request": {
            "name": "Upload Zip File",
            "description": {
              "content": "Uploads an archive with source files in a .zip format, to be extracted and used at project creation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The .zip file to be uploaded.  "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "082638fd-3b74-42fa-90db-df76209c9caf",
          "name": "Poll Upload Zip File",
          "request": {
            "name": "Poll Upload Zip File",
            "description": {
              "content": "Monitors the unzipping operation for a previously uploaded archive and gets details on the extracted files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "files",
                ":fileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "description": "(Required) The uploaded file id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "2771b141-62e4-4460-b7f9-7de8f0d92b46",
      "name": "Folder",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "cf34b4da-d348-4e73-a5ad-b71e1a0485b9",
          "name": "Get Folder",
          "request": {
            "name": "Get Folder",
            "description": {
              "content": "Retrieves a folder by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                ":folderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "folderId",
                  "description": "(Required) The folder identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "dc9e2619-48fa-44a1-9fff-a1bdfad26aaa",
          "name": "Get Root Folder",
          "request": {
            "name": "Get Root Folder",
            "description": {
              "content": "Retrieves the Root folder in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                "root"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "f0e8f449-d29c-4e79-8762-5f74ba79c471",
          "name": "List Folders",
          "request": {
            "name": "List Folders",
            "description": {
              "content": "Retrieves a list of all the folders in an account. Max 500.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter folders by name."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "b205ceb3-f732-4b1d-ad2e-3c41a7394b6f",
      "name": "Group",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "de8939cb-7c3b-4dbc-8882-78c142983289",
          "name": "Get Group",
          "request": {
            "name": "Get Group",
            "description": {
              "content": "Retrieves a group by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups",
                ":groupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "groupId",
                  "description": "(Required) The group identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "431010b5-ea18-4500-91d8-b982f4691ff4",
          "name": "List Groups",
          "request": {
            "name": "List Groups",
            "description": {
              "content": "Retrieves a list of all the groups in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "7098d180-857c-4c63-ab00-fca90f538568",
      "name": "Language",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0b26e28d-cffb-424d-a162-5d6c888c93f4",
          "name": "List Languages",
          "request": {
            "name": "List Languages",
            "description": {
              "content": "Retrieves a list of all the languages.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "languages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "languageCodes",
                  "value": "<string>,<string>",
                  "description": "Filter by language codes."
                },
                {
                  "disabled": true,
                  "key": "type",
                  "value": "<string>",
                  "description": "Filter by type."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "47fb6ded-b0a4-496f-aa90-9da3932cf688",
      "name": "Pricing Model",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "87002ea2-750c-4d69-bf7b-d5ad29b1b5e9",
          "name": "List Pricing Models",
          "request": {
            "name": "List Pricing Models",
            "description": {
              "content": "Retrieves a list of all the pricing models in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "f0fb641b-c99e-4a27-a214-ebf511f0a5c3",
          "name": "Get Pricing Model",
          "request": {
            "name": "Get Pricing Model",
            "description": {
              "content": "Retrieves a pricing model by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models",
                ":pricingModelId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "pricingModelId",
                  "description": "(Required) The pricing model identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "6a01d632-99d1-481a-9911-bab50d2e443b",
      "name": "Project",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "873531f6-d40e-406f-842d-e172328d7492",
          "name": "List Projects",
          "request": {
            "name": "List Projects",
            "description": {
              "content": "Retrieves a list of all the projects in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "excludeOnline",
                  "value": "<boolean>",
                  "description": "Excludes projects that are being worked on exclusively in the Online Editor"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "a2c8136d-ca13-42b1-a910-9318f4fb0ed2",
          "name": "Create Project",
          "request": {
            "name": "Create Project",
            "description": {
              "content": "Creates a new project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueBy\": \"<dateTime>\",\n  \"projectTemplate\": {\n    \"id\": \"<string>\"\n  },\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"location\": \"<string>\",\n  \"translationEngine\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"fileProcessingConfiguration\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"workflow\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"pricingModel\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"customFields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    }\n  ],\n  \"tqaProfile\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"forceOnline\": \"<boolean>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0247f81f-64f7-4930-835c-82b80008ce63",
          "name": "Get Project",
          "request": {
            "name": "Get Project",
            "description": {
              "content": "Retrieves a project by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "f7639bcd-f8da-42a7-a638-4a730bd6046c",
          "name": "Update Project",
          "request": {
            "name": "Update Project",
            "description": {
              "content": "Updates the project in terms of: name, description, due date, quote, and project resources. Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueBy\": \"<dateTime>\",\n  \"translationEngine\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"fileProcessingConfiguration\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"pricingModel\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"workflow\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"projectPlan\": {\n    \"taskConfigurations\": [\n      {\n        \"taskTemplate\": {\n          \"id\": \"<string>\"\n        },\n        \"isSkipped\": \"<boolean>\",\n        \"assignees\": [\n          {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n          }\n        ],\n        \"scope\": {\n          \"type\": \"<string>\",\n          \"targetLanguage\": {\n            \"languageCode\": \"<string>\"\n          }\n        },\n        \"dueBy\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"tqaProfile\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"quote\": {\n    \"languageCosts\": [\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      }\n    ],\n    \"additionalCosts\": [\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"<string>\",\n        \"volumeUnitType\": \"<string>\",\n        \"conditionalCostType\": \"<string>\",\n        \"conditionalCostOperator\": \"<string>\",\n        \"conditionalCostVariable\": \"<string>\"\n      }\n    ]\n  },\n  \"customFields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<object>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c79f4b2e-8c97-4973-94ca-049fbe85f127",
          "name": "Delete Project",
          "request": {
            "name": "Delete Project",
            "description": {
              "content": "Deletes a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "ec9d1aa6-ac70-40a3-ba82-f41129e46d8e",
          "name": "Start Project",
          "request": {
            "name": "Start Project",
            "description": {
              "content": "Starts a project. Translatable files should be uploaded before starting the project. If the action is executed on an already started project, the new translatable files should be uploaded first.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "start"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "51848dee-16a8-40c2-ae16-e5a3c67eb853",
          "name": "Complete Project",
          "request": {
            "name": "Complete Project",
            "description": {
              "content": "Marks a project as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "ac827d4c-0244-41e6-9be9-a85948ee54f6",
          "name": "Cancel Project File",
          "request": {
            "name": "Cancel Project File",
            "description": {
              "content": "Cancels a project file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "files",
                ":fileId",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "description": "(Required) The file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "ea4839d2-1a9d-4880-bc9e-3ca1f76d1953",
          "name": "List Project's Tasks",
          "request": {
            "name": "List Project's Tasks",
            "description": {
              "content": "Lists the tasks of a specific project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "7647e0de-8bd2-4424-8250-5193e33d1cb8",
      "name": "Project Template",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7eb9122e-b6b6-4e99-98a0-67c8a22393d5",
          "name": "Get Project Template",
          "request": {
            "name": "Get Project Template",
            "description": {
              "content": "Retrieves a project template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates",
                ":projectTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectTemplateId",
                  "description": "(Required) The project template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "8d874df9-20f1-4f89-aa95-657297ece7ee",
          "name": "List Project Templates",
          "request": {
            "name": "List Project Templates",
            "description": {
              "content": "Retrieves a list of all the project templates in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter by name."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3595fd9b-791e-4b35-881d-e0f9051328c7",
      "name": "Public Keys",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "187fd339-9292-4aae-a6a9-1ac31e573c80",
          "name": "List Public Keys",
          "request": {
            "name": "List Public Keys",
            "description": {
              "content": "List all available Public Keys.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ".well-known",
                "jwks.json"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "d80db280-57a1-4a28-beb0-18e7a7c44f2c",
          "name": "Get Public Key",
          "request": {
            "name": "Get Public Key",
            "description": {
              "content": "Retrieves a public key by it's identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ".well-known",
                "jwks.json",
                ":kid"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "kid",
                  "description": "(Required) The key identifier."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "e4d5ef17-bd11-4363-a9e2-10fcf582ee47",
      "name": "Quote",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "23defd5d-3af9-4545-aa87-cef6c0cb5bf5",
          "name": "Export Quote",
          "request": {
            "name": "Export Quote",
            "description": {
              "content": "Exports the quote for the Project in either PDF or Excel format.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "format",
                  "value": "pdf",
                  "description": "The file format for the downloaded quote."
                },
                {
                  "disabled": true,
                  "key": "languageId",
                  "value": "en",
                  "description": "The language used for quote localization."
                },
                {
                  "disabled": true,
                  "key": "timeZoneOffset",
                  "value": "<integer>",
                  "description": "The Time Zone Offset for date-time fields."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "8aafe8aa-9885-42aa-aa40-4c1a18087ac5",
      "name": "Source File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "89769854-28df-4204-9078-b6d0fc0468bb",
          "name": "List Source Files",
          "request": {
            "name": "List Source Files",
            "description": {
              "content": "Retrieves the source files in a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "28526805-f339-4b8f-981b-cbe5ffeb73ff",
          "name": "Add Source File",
          "request": {
            "name": "Add Source File",
            "description": {
              "content": "Adds a source file to the project. Files can be uploaded before starting a project or after the project has started. When adding the file after the project started, a new start project request should be performed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) "
                },
                {
                  "key": "properties",
                  "value": "{\"name\":\"<string>\",\"role\":\"<string>\",\"type\":\"<string>\",\"language\":\"<string>\",\"targetLanguages\":[\"<string>\",\"<string>\"],\"path\":[\"<string>\",\"<string>\"]}",
                  "type": "text",
                  "description": "(Required) "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9893e15b-a9fd-4b2f-81fe-2f03cb44d134",
          "name": "Attach Source Files",
          "request": {
            "name": "Attach Source Files",
            "description": {
              "content": "Adds multiple source files to the project. Files must be uploaded before attaching them to a project. When a file is attached after the project was started, a new start project request should be performed.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                "attach-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"role\": \"<string>\",\n    \"fileUrl\": \"<string>\",\n    \"type\": \"<string>\",\n    \"language\": {\n      \"languageCode\": \"<string>\"\n    },\n    \"targetLanguages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"path\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"role\": \"<string>\",\n    \"fileUrl\": \"<string>\",\n    \"type\": \"<string>\",\n    \"language\": {\n      \"languageCode\": \"<string>\"\n    },\n    \"targetLanguages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"path\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e8d5b829-3543-4342-b531-19b4f38ac135",
          "name": "Get Source File",
          "request": {
            "name": "Get Source File",
            "description": {
              "content": "Retrieves a source file from the project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "d8c9ee3d-0fc8-4865-8e64-d8ed281ce9c7",
          "name": "List Source File Versions",
          "request": {
            "name": "List Source File Versions",
            "description": {
              "content": "Retrieves all the versions of a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "43fd175f-ef1f-4f8e-81df-818fe469a6dc",
          "name": "Download Source File Version",
          "request": {
            "name": "Download Source File Version",
            "description": {
              "content": "Downloads a source file version.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "description": "(Required) The source file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "9b27b2d5-2da6-4c0d-8e62-de36a6af3afd",
      "name": "Target File",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3ffa7872-8acd-431b-8fb3-d0b92a3a5679",
          "name": "Get Target File",
          "request": {
            "name": "Get Target File",
            "description": {
              "content": "Retrieves a target file from a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "1c7953b8-313f-48c8-aca8-890c0615ae13",
          "name": "List Target Files",
          "request": {
            "name": "List Target Files",
            "description": {
              "content": "Retrieves the target files for a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "targetFileIds",
                  "value": "<string>,<string>",
                  "description": "Filter target files by identifiers."
                },
                {
                  "disabled": true,
                  "key": "sourceFileIds",
                  "value": "<string>,<string>",
                  "description": "Filter target files by the identifiers of the source file they were generated from."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "d5f54cf7-d0ca-4117-bba3-14b006c9b191",
          "name": "Get Target File Version",
          "request": {
            "name": "Get Target File Version",
            "description": {
              "content": "Retrieves one version of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "144d2c78-dcd0-4eac-a06b-401f6945c934",
          "name": "List Target File Versions",
          "request": {
            "name": "List Target File Versions",
            "description": {
              "content": "Retrieves the versions of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "48640e3d-2858-4668-b8c9-275995fd7c6b",
          "name": "Export Target File Version",
          "request": {
            "name": "Export Target File Version",
            "description": {
              "content": "Generates an asynchronous export operation. Use the Get Target File Version export endpoint to poll until the export is completed. Used only for bcm file versions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "format",
                  "value": "native",
                  "description": "The file format."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null
          },
          "event": []
        },
        {
          "id": "ea231be9-bb38-4198-986c-f5175a6774db",
          "name": "Poll Target File Version Export",
          "request": {
            "name": "Poll Target File Version Export",
            "description": {
              "content": "Polls a target file version via an export operation. The new version can be downloaded once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "d5cf0676-48c3-4b0a-b384-0d98db8dd1d9",
          "name": "Download Exported Target File Version",
          "request": {
            "name": "Download Exported Target File Version",
            "description": {
              "content": "Downloads a completed target file version via an export operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "2b59be75-0ca0-4a1f-9165-5dd2fd54c89c",
          "name": "Download Target File Version",
          "request": {
            "name": "Download Target File Version",
            "description": {
              "content": "Downloads the file version (native and BCM). ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "description": "(Required) The file version identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "6f9e8007-1b64-4721-a760-4e9c6cf3fbb4",
          "name": "Import Target File Version",
          "request": {
            "name": "Import Target File Version",
            "description": {
              "content": "Generates an asynchronous import operation. Use the Get Target File Version Import endpoint to poll until the import is completed. Only `sdlxliff` files can be imported.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) "
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "86c53e8f-48eb-47d5-8552-68b7dcac5d3d",
          "name": "Poll Target File Version Import",
          "request": {
            "name": "Poll Target File Version Import",
            "description": {
              "content": "Polls a target file version via an import operation. The new version can be seen on the file versions once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "description": "(Required) The project identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "description": "(Required) The target file identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "eb67f0fd-4f8f-4255-b6fa-1aba287819be",
      "name": "Task",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b80d29f8-4ed6-4aa2-9f2f-3c58298f1e56",
          "name": "Get Task",
          "request": {
            "name": "Get Task",
            "description": {
              "content": "Retrieves a task.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "088963f7-4989-4fd5-9bfd-2f576ec6bd69",
          "name": "List Tasks assigned to me",
          "request": {
            "name": "List Tasks assigned to me",
            "description": {
              "content": "Retrieves tasks assigned to the autheticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                "assigned"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "status",
                  "value": "<string>",
                  "description": "If specified, this filters tasks by status."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "38f45afb-ecd6-4945-bcb8-5f8c30eb8765",
          "name": "Accept Task",
          "request": {
            "name": "Accept Task",
            "description": {
              "content": "Accepts a task. The authenticated user becomes the owner of the accepted task and can start work on it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "accept"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "099a528e-8fd0-4adc-9f39-7909c6aeefac",
          "name": "Reject Task",
          "request": {
            "name": "Reject Task",
            "description": {
              "content": "Rejects a task. The authenticated user will be removed from the task's list of available assignee users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reject"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "b490e0ac-1c16-4d15-a577-9b858db67d23",
          "name": "Complete Task",
          "request": {
            "name": "Complete Task",
            "description": {
              "content": "Completes a task. The task will be marked as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"outcome\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9e7e35e0-6d3c-49b8-bd5c-e706d91fc33b",
          "name": "Release Task",
          "request": {
            "name": "Release Task",
            "description": {
              "content": "Releases the task from its owner so that other task assignees will be able to accept it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "release"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "e45f8f5a-2c91-46e8-a27f-9afde9ce7289",
          "name": "Reclaim Task",
          "request": {
            "name": "Reclaim Task",
            "description": {
              "content": "The current owner of task is removed so that other assignees can accept it. \nThe task is not reassigned automatically.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reclaim"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null
          },
          "event": []
        },
        {
          "id": "7677b7da-79ab-4bb7-b866-196049bc36d6",
          "name": "Assign Task",
          "request": {
            "name": "Assign Task",
            "description": {
              "content": "Assigns a task. The task assignees will be updated.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "assign"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "description": "(Required) The task identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignees\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "f91ed730-7c6e-4679-9d15-fbabbc225a8e",
      "name": "Task Type",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e5e12b26-8179-42b1-946f-6f4a2d209c99",
          "name": "Get Task Type",
          "request": {
            "name": "Get Task Type",
            "description": {
              "content": "Retrieves a task type by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types",
                ":taskTypeId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "taskTypeId",
                  "description": "(Required) The task type identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "37ab7a87-3bdc-4ac0-a34f-e8a70081a226",
          "name": "List Task Types",
          "request": {
            "name": "List Task Types",
            "description": {
              "content": "Retrieves all the task types in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "key",
                  "value": "<string>,<string>",
                  "description": "Filter by keys."
                },
                {
                  "disabled": true,
                  "key": "automatic",
                  "value": "<boolean>",
                  "description": "Filter by automatic or human tasks."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "d4eb693a-3ca3-4518-820c-3becf60e0a97",
      "name": "Termbase",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "eb6343fa-972a-402f-8e67-d84b55617f98",
          "name": "List Termbases",
          "request": {
            "name": "List Termbases",
            "description": {
              "content": "List termbases.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "25a5c4ee-0ccf-4220-afe5-663de9623061",
          "name": "Create Termbase",
          "request": {
            "name": "Create Termbase",
            "description": {
              "content": "Creates a new termbase.\nThe termbase can be created with a termbase template by providing the templateId or by providing a custom termbaseStructure. \nIf only a `termbaseTemplateId` was provided, the termbase will be created using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be created using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precendence.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\",\n  \"termbaseTemplateId\": \"<string>\",\n  \"termbaseStructure\": {\n    \"languages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3a0905a3-8581-418c-af18-fda7745e6b48",
          "name": "Get Termbase",
          "request": {
            "name": "Get Termbase",
            "description": {
              "content": "Retrieves a termbase by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "9afc5e90-538a-44f3-91e6-42460921faa6",
          "name": "Delete Termbase",
          "request": {
            "name": "Delete Termbase",
            "description": {
              "content": "Deletes a termbase by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "8d77d53f-6680-403b-ad8d-c4f4d1b8612c",
          "name": "Update Termbase",
          "request": {
            "name": "Update Termbase",
            "description": {
              "content": "Updates the termbase.\nThe termbase can be updated with a termbase template by providing the termbaseTemplateId or by providing a custom termbaseStructure. \n\nIf only a `termbaseTemplateId ` was provided, the termbase will be updated using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be updated using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precedence.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"termbaseTemplateId\": \"<string>\",\n  \"termbaseStructure\": {\n    \"languages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"level\": \"<string>\",\n        \"dataType\": \"<string>\",\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "159510ad-7c92-4023-82e2-64a126471a93",
          "name": "Create Termbase Entry",
          "request": {
            "name": "Create Termbase Entry",
            "description": {
              "content": "Creates a new termbase entry. For more information about how to use `fieldValueLinks` see [`Create termbase entry`](/termbaseentries#creating-a-termbase-entry).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languages\": [\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"humanReadableId\": \"<string>\",\n  \"termbaseFieldValues\": [\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "12a7fe89-122a-4cba-89ae-9e3cdfd299ce",
          "name": "List Termbase Entries",
          "request": {
            "name": "List Termbase Entries",
            "description": {
              "content": "Retrieves a list of all the entries in a termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "humanReadableIds",
                  "value": "<string>",
                  "description": "Can provide a list of humanReadableId from entries to filter by."
                },
                {
                  "disabled": true,
                  "key": "humanReadableIds",
                  "value": "<string>",
                  "description": "Can provide a list of humanReadableId from entries to filter by."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "39860a12-742f-4752-aa0c-67c2b7836c8e",
          "name": "Delete Termbase Entries",
          "request": {
            "name": "Delete Termbase Entries",
            "description": {
              "content": "Deletes all the entries in the termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "c9102ee0-5b2a-4aee-bfe2-f5959991a55b",
          "name": "Get Termbase Entry",
          "request": {
            "name": "Get Termbase Entry",
            "description": {
              "content": "Retrieves a termbase entry by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "9a3f2007-696c-4389-8d6c-56537e326a57",
          "name": "Update Termbase Entry",
          "request": {
            "name": "Update Termbase Entry",
            "description": {
              "content": "Updates a termbase entry by identifier.\nThe request body will overwrite the existing data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languages\": [\n    {\n      \"id\": \"<string>\",\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"<string>\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"humanReadableId\": \"<string>\",\n  \"termbaseFieldValues\": [\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "75639294-bae2-430d-a1be-6b364fff3741",
          "name": "Delete Termbase Entry",
          "request": {
            "name": "Delete Termbase Entry",
            "description": {
              "content": "Deletes a termbase entry.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "description": "(Required) The termbase entry identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "ab3287bb-c476-4968-9118-a564f88f25c6",
          "name": "List Termbase Terms",
          "request": {
            "name": "List Termbase Terms",
            "description": {
              "content": "Retrieves a list of all the terms of the termbase.\nSearch types:\n- normal: Use normal search to look for terms that match the text exactly as entered.\n- linguistic: Use linguistic search to look for terms that are similar to the search term. Linguistic search is based on stemming and other language-dependent aspects.\n- fuzzy: Use fuzzy search to look for terms that are similar to the search term. Fuzzy search is more fault-tolerant than linguistic search.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "terms",
                ":sourceLanguageCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "search",
                  "value": "<string>",
                  "description": "The text to search for."
                },
                {
                  "disabled": true,
                  "key": "searchType",
                  "value": "normal",
                  "description": "The type of the search performed."
                },
                {
                  "disabled": true,
                  "key": "targetLanguageCode",
                  "value": "<string>",
                  "description": "The target language code used to list the terms."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceLanguageCode",
                  "description": "(Required) The source language code used to list the terms."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "9585a327-6886-43e0-afec-a79b901d1c9a",
      "name": "Termbase Template",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e9987545-1a09-4b62-852b-8809de751a93",
          "name": "List Termbase Templates",
          "request": {
            "name": "List Termbase Templates",
            "description": {
              "content": "List termbase templates.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>",
                  "description": "The identifiers of the resource folders. "
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>",
                  "description": "The identifiers of the resource folders. "
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "type",
                  "value": "<string>",
                  "description": "The type of the termbase template to retrieve. If not specified, both types will be returned"
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "b038c680-78b0-4997-baa6-6c32f3a35874",
          "name": "Create Termbase Template",
          "request": {
            "name": "Create Termbase Template",
            "description": {
              "content": "Creates a new termbase template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\",\n  \"languages\": [\n    {\n      \"languageCode\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\"\n    }\n  ],\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e3eedb76-fa7d-4081-bf7f-2d7eb6bbed9f",
          "name": "Get Termbase Template",
          "request": {
            "name": "Get Termbase Template",
            "description": {
              "content": "Get a termbase template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "0eeb9c32-dd19-44c5-88e1-3b8545827dd6",
          "name": "Delete Termbase Template",
          "request": {
            "name": "Delete Termbase Template",
            "description": {
              "content": "Deletes a termbase template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null
          },
          "event": []
        },
        {
          "id": "da1737d7-95d1-4342-9bf0-855c0693b997",
          "name": "Update Termbase Template",
          "request": {
            "name": "Update Termbase Template",
            "description": {
              "content": "Updates the termbase template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "description": "(Required) The termbase template identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"languages\": [\n    {\n      \"languageCode\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\"\n    }\n  ],\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"level\": \"<string>\",\n      \"dataType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b244cd78-eb6b-42c9-8be8-151f627d6165",
          "name": "Convert XDT to Termbase Structure",
          "request": {
            "name": "Convert XDT to Termbase Structure",
            "description": {
              "content": "Converts a termbase definition (XDT file) to a termbase structure that will be returned in the response.<br>\nThe structure will not be stored in Language Cloud.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                "convert-xdt"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The <b>.xdt</b> file used for conversion."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "357a7e9f-df23-405f-92d1-c996a6202db1",
      "name": "Termbase Import",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "da60fe39-b3bd-41d3-9a01-ac7157d3f9fc",
          "name": "Get Termbase Import History",
          "request": {
            "name": "Get Termbase Import History",
            "description": {
              "content": "Gets the import history for a termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "38f74e1b-3b99-4502-9999-adfe4da6e6c3",
          "name": "Import Termbase",
          "request": {
            "name": "Import Termbase",
            "description": {
              "content": "Generates an asynchronous import operation.<br>\nUse the Poll Import Termbase endpoint to poll until the import status is `done`.<br>",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "strictImport",
                  "value": "true",
                  "description": "Specifies if the entries are only imported into the exact language that matches your imported file.<br> `true` - The import will only occur if the language in your import file matches exactly with a language in your termbase.<br> `false` - The import will occur even there are non-matching languages, by trying to match them to a relevant main language or language variant, if available."
                },
                {
                  "disabled": true,
                  "key": "duplicateEntriesStrategy",
                  "value": "overwrite",
                  "description": "The strategy for duplicate entries. Determines how the duplicate entries will be handled.<br> `ignore` - The content of the current entry with the same identifier will be kept, and the new entry will be ignored<br> `merge` - The content of the current entry with the same identifier will be merged with the imported entry. If the identifier is not provided the content will be merged by text.<br> `overwrite` - The content of the current entry with the same identifier will be replaced by the imported entry."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "description": "(Required) The file to import into the termbase.<br>\nAccepted file types: <b>.xml</b>, <b>.tbx</b>\n<br>\nIt's recommended you do not exceed 10Mb file size for tembase imports."
                }
              ]
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "94c1319b-b5be-4989-a000-c448dd84ed1b",
          "name": "Poll Termbase Import",
          "request": {
            "name": "Poll Termbase Import",
            "description": {
              "content": "Polls a termbase import operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "a4ada277-8262-40c8-bac6-8f8e0ea8fbfe",
          "name": "Download Termbase Import Logs",
          "request": {
            "name": "Download Termbase Import Logs",
            "description": {
              "content": "Downloads the termbase import logs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports",
                ":importId",
                "logs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "description": "(Required) The import identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "28c8efc8-fc40-4320-bf50-43cc268dd45a",
      "name": "Termbase Export",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8bea2717-baed-4095-b3d1-a099da3f0969",
          "name": "Export Termbase",
          "request": {
            "name": "Export Termbase",
            "description": {
              "content": "Generates an asynchronous export operation.<br>\nUse the Poll Export Termbase endpoint to poll until the export status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"format\": \"tbx\",\n  \"properties\": {\n    \"downloadCompressed\": false\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a5dc5684-9882-4b15-8b05-df3ba3500cf4",
          "name": "Poll Termbase Export",
          "request": {
            "name": "Poll Termbase Export",
            "description": {
              "content": "Polls a termbase via an export operation. The exported termbase can be downloaded once the status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "5c3e0199-3d65-42f1-9885-f295160e27a4",
          "name": "Download Exported Termbase",
          "request": {
            "name": "Download Exported Termbase",
            "description": {
              "content": "Downloads the exported termbase when the poll operation status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                },
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "description": "(Required) The export identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "5ee63ef4-9839-4e8e-9109-7b8952f9273a",
          "name": "Export Termbase Template",
          "request": {
            "name": "Export Termbase Template",
            "description": {
              "content": "Downloads the termbase definition.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "export-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "description": "(Required) The termbase identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "40681d9d-16a7-4e50-a59f-7f9902710939",
      "name": "TQA Profile",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "91620ed8-9131-409f-9881-13ba11ef4e58",
          "name": "List TQA Profiles",
          "request": {
            "name": "List TQA Profiles",
            "description": {
              "content": "List TQA Profiles.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "4469e1d5-518b-4919-a96f-161eaffe4a02",
          "name": "Get TQA Profile",
          "request": {
            "name": "Get TQA Profile",
            "description": {
              "content": "Get a TQA Profile By identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles",
                ":profileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "profileId",
                  "description": "(Required) The profile identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "75779c92-9eab-4653-87e5-b66f397e69fb",
      "name": "Translation Engine",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "230bb86a-297b-4d78-9cfa-4f9b5b0dca8f",
          "name": "Get Translation Engine",
          "request": {
            "name": "Get Translation Engine",
            "description": {
              "content": "Retrieves a translation engine.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines",
                ":translationEngineId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "translationEngineId",
                  "description": "(Required) The translation engine identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "b26c38d7-d195-4add-83a4-deafebc41e1d",
          "name": "List Translation Engines",
          "request": {
            "name": "List Translation Engines",
            "description": {
              "content": "Retrieves all the translation engines in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "7c65d2a2-1ecd-47fb-8827-d09f314f5aaa",
      "name": "User",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4d7f6bc1-75f1-4ddc-9a76-6bd5de740d70",
          "name": "Get my User",
          "request": {
            "name": "Get my User",
            "description": {
              "content": "Retrieves the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "me"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "56b9154d-6c9d-483f-9c04-f20bbd35f9c8",
          "name": "List Users",
          "request": {
            "name": "List Users",
            "description": {
              "content": "Retrieves a list of all the users in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "fe0be9ee-db9c-4552-b501-add7d3e84539",
          "name": "Get User",
          "request": {
            "name": "Get User",
            "description": {
              "content": "Retrieves a user by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                ":userId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "userId",
                  "description": "(Required) The user identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "a91c6ae3-a6c2-45f2-a20f-da13d3aa7583",
      "name": "Workflow",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "59398beb-734c-448c-937c-0d6561e006c8",
          "name": "Get Workflow",
          "request": {
            "name": "Get Workflow",
            "description": {
              "content": "Retrieves a workflow by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "description": "(Required) The workflow identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        },
        {
          "id": "78d15d9f-8c41-4019-867b-fece41d5e08e",
          "name": "Update Workflow",
          "request": {
            "name": "Update Workflow",
            "description": {
              "content": "Updates the workflow in terms of: name, description, and task configuration (and its details). Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "description": "(Required) The workflow identifier."
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"taskConfigurations\": [\n    {\n      \"taskTemplate\": {\n        \"id\": \"<string>\"\n      },\n      \"isSkipped\": \"<boolean>\",\n      \"assignees\": [\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"scope\": {\n        \"type\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"taskTemplate\": {\n        \"id\": \"<string>\"\n      },\n      \"isSkipped\": \"<boolean>\",\n      \"assignees\": [\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"groups\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/group-request detected>\"\n                  }\n                ],\n                \"anonymized\": \"<boolean>\",\n                \"anonymizedUserName\": \"<string>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"scope\": {\n        \"type\": \"<string>\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        }\n      }\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3b4073b9-6804-4d2c-a164-b258b0cf7ccc",
          "name": "List Workflows",
          "request": {
            "name": "List Workflows",
            "description": {
              "content": "Retrieves all the workflows in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "top",
                  "value": "100",
                  "description": "The number of items to include inside the page."
                },
                {
                  "disabled": true,
                  "key": "skip",
                  "value": "0",
                  "description": "The number of items that are skipped to reach the desired page."
                },
                {
                  "disabled": true,
                  "key": "location",
                  "value": "<string>,<string>",
                  "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. "
                },
                {
                  "disabled": true,
                  "key": "locationStrategy",
                  "value": "<string>",
                  "description": "Options: location: all resources located strictly in the folders from 'location' param (default). lineage: all resources located in the folders specified in 'location' param, as well as the subfolders bloodline: all resources located in the folders specified in 'location' param, as well as the ancestor folders genealogy: resources located in the folders specified in the 'location' param together with subfolders and ancestors."
                },
                {
                  "disabled": true,
                  "key": "sort",
                  "value": "<string>",
                  "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order."
                },
                {
                  "disabled": true,
                  "key": "fields",
                  "value": "<string>",
                  "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": "(Required) The identifier of the account where the request is executed.",
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "event": []
        }
      ],
      "event": []
    },
    {
      "name": "Authentication (Start Here)",
      "item": [
        {
          "name": "Obtain a client credentials access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "pm.collectionVariables.set(\"lc_access_token\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                },
                {
                  "key": "audience",
                  "value": "https://api.sdl.com",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "https://sdl-prod.eu.auth0.com/oauth/token",
              "protocol": "https",
              "host": [
                "sdl-prod",
                "eu",
                "auth0",
                "com"
              ],
              "path": [
                "oauth",
                "token"
              ]
            }
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://lc-api.sdl.com/public-api/v1",
      "key": "baseUrl"
    },
    {
      "key": "lc_access_token",
      "value": ""
    },
    {
      "key": "lc_tenant",
      "value": ""
    }
  ],
  "info": {
    "_postman_id": "bc1bf4fa-bc85-4a8c-848b-388529f22c06",
    "name": "RWS Language Cloud API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The RWS Language Cloud public API.",
      "type": "text/plain"
    }
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{lc_access_token}}",
        "type": "string"
      }
    ]
  }
}
