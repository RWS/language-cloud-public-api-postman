{
  "item": [
    {
      "name": "Account",
      "description": "Account",
      "item": [
        {
          "id": "1cc210e9-f22b-45bd-91ca-ca8940d7293e",
          "name": "List my Accounts",
          "request": {
            "name": "List my Accounts",
            "description": {
              "content": "Retrieves the accounts the authenticated user is part of. \nNote: for service users only the account where the user is defined is returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "accounts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Custom Field",
      "description": "Custom Field",
      "item": [
        {
          "id": "8209897a-d283-412d-abc6-d5db0fc95cbf",
          "name": "List Custom Field Definitions",
          "request": {
            "name": "List Custom Field Definitions",
            "description": {
              "content": "Retrieves a list of all the custom field definitions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ad63884c-05df-470d-b36a-76f62dac7888",
          "name": "Get Custom Field Definition",
          "request": {
            "name": "Get Custom Field Definition",
            "description": {
              "content": "Retrieves a Custom Field by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "custom-field-definitions",
                ":customFieldDefinitionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "customFieldDefinitionId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The custom field definition identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Customer",
      "description": "Customer",
      "item": [
        {
          "id": "3d6c0f12-d17e-4c99-853f-ac72eb1f1ee6",
          "name": "Get Customer",
          "request": {
            "name": "Get Customer",
            "description": {
              "content": "Retrieves a customer by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "customerId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The customer identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1de4817b-8206-4413-8e1c-b61d947e7fdd",
          "name": "Update Customer",
          "request": {
            "name": "Update Customer",
            "description": {
              "content": "Updates a customer by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "customerId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The customer identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"keyContactId\": \"<string>\",\n  \"ragStatus\": \"amber\",\n  \"customFieldDefinitions\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": {}\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": {}\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a0c0de66-5517-4487-b1a9-2466ad9ba46d",
          "name": "Delete Customer",
          "request": {
            "name": "Delete Customer",
            "description": {
              "content": "Deletes a customer.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "customerId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The customer identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e3a0cd05-c56e-44e4-bfc4-d39ec52b55f7",
          "name": "List Customers",
          "request": {
            "name": "List Customers",
            "description": {
              "content": "Retrieves a list of all the customers in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fd6fa3fb-2195-44d4-be7e-b17dcb524154",
          "name": "Create Customer",
          "request": {
            "name": "Create Customer",
            "description": {
              "content": "Create customer in a tenant.\n\nFor adding a customer to a tenant the authenticated user must have 'Create Customer' permission.\n\nTo also create an account for the key contact, you need to have the specific entitlements.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"location\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "File Processing Configuration",
      "description": "File Processing Configuration",
      "item": [
        {
          "id": "015fa228-ab72-4bae-bafd-622dd4308483",
          "name": "Get File Processing Configuration",
          "request": {
            "name": "Get File Processing Configuration",
            "description": {
              "content": "Retrieves a file processing configuration by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file processing configuration identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "84dfa88e-26a2-46d6-88f6-621b5f841d36",
          "name": "List File Processing Configurations",
          "request": {
            "name": "List File Processing Configurations",
            "description": {
              "content": "Retrieves a list of all the file processing configurations in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "49c1b9fe-f9d9-4c33-a540-c5e3e5a35f7a",
          "name": "Get File Type Setting",
          "request": {
            "name": "Get File Type Setting",
            "description": {
              "content": "Retrieves a file type setting by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId",
                "file-type-settings",
                ":fileTypeSettingId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file processing configuration identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileTypeSettingId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file type setting identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3f0c3044-950e-462b-9021-39bd327b2ec9",
          "name": "List File Type Settings",
          "request": {
            "name": "List File Type Settings",
            "description": {
              "content": "Retrieves a list of all the file type settings in a file processing configuration.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "file-processing-configurations",
                ":fileProcessingConfigurationId",
                "file-type-settings"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileProcessingConfigurationId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file processing configuration identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "File",
      "description": "File",
      "item": [
        {
          "id": "42404d87-979a-4f9d-8edd-5bb96022302b",
          "name": "Upload Zip File",
          "request": {
            "name": "Upload Zip File",
            "description": {
              "content": "Uploads an archive with source files in a .zip format, to be extracted and used at project creation.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(Required) The .zip file to be uploaded.  ",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<string>",
                  "type": "text"
                }
              ]
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5f7fb6f1-1aff-448b-bf79-7000f923ebba",
          "name": "Poll Upload Zip File",
          "request": {
            "name": "Poll Upload Zip File",
            "description": {
              "content": "Monitors the unzipping operation for a previously uploaded archive and gets details on the extracted files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "files",
                ":fileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The uploaded file id",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Folder",
      "description": "Folder",
      "item": [
        {
          "id": "0837b644-8e38-45c2-a0f9-1919bc6237e0",
          "name": "Get Folder",
          "request": {
            "name": "Get Folder",
            "description": {
              "content": "Retrieves a folder by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                ":folderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "folderId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The folder identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e5defb71-d772-4db8-9ddc-83e4984d87fd",
          "name": "Get Root Folder",
          "request": {
            "name": "Get Root Folder",
            "description": {
              "content": "Retrieves the Root folder in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders",
                "root"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4904e576-be82-4f63-a3b4-1c06e404b7bf",
          "name": "List Folders",
          "request": {
            "name": "List Folders",
            "description": {
              "content": "Retrieves a list of all the folders in an account. Max 500.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "folders"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter folders by name.",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Group",
      "description": "Group",
      "item": [
        {
          "id": "021cfd6c-c6d1-44a7-a4d9-6209d3a6e381",
          "name": "Get Group",
          "request": {
            "name": "Get Group",
            "description": {
              "content": "Retrieves a group by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups",
                ":groupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "groupId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The group identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7e242e9a-36c5-402d-b903-d80c77353a05",
          "name": "List Groups",
          "request": {
            "name": "List Groups",
            "description": {
              "content": "Retrieves a list of all the groups in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "groups"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Language",
      "description": "Language",
      "item": [
        {
          "id": "6b845623-6218-4f60-b67c-160bebf3beb8",
          "name": "List Languages",
          "request": {
            "name": "List Languages",
            "description": {
              "content": "Retrieves a list of all the languages.\n\nThe supported values for language `type` filter are: \"all\", \"specific\" or \"neutral\".\\\nThe \"neutral\" languages are the generic languages, e.g.: en -> English.\\\nThe \"specific\" languages are the sub-languages, e.g.: en-150 -> English (Europe), en-us -> English (United States).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "languages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by language codes.",
                    "type": "text/plain"
                  },
                  "key": "languageCodes",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by type.",
                    "type": "text/plain"
                  },
                  "key": "type",
                  "value": "all"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Language Processing",
      "description": "Language Processing",
      "item": [
        {
          "id": "3a52a295-6f93-4b64-9271-a90a8c6d1c7d",
          "name": "List Language Processing Rules",
          "request": {
            "name": "List Language Processing Rules",
            "description": {
              "content": "Returns a list of Language Processing Rules.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "language-processing-rules"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "761d583f-9f24-4c16-8657-6546f699cb27",
          "name": "Get Language Processing Rule",
          "request": {
            "name": "Get Language Processing Rule",
            "description": {
              "content": "Returns a Language Processing Rule by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "language-processing-rules",
                ":languageProcessingRuleId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "languageProcessingRuleId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The language processing rule identifier",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Machine Translation",
      "description": "Machine Translation",
      "item": [
        {
          "id": "d2fcdd15-39df-460d-a134-2b80abdba2b7",
          "name": "List Machine Translations",
          "request": {
            "name": "List Machine Translations",
            "description": {
              "content": "Retrieves a list of machine translations that can be used in a translation engine.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "machine-translation"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Language code expressed as generic language (example: \"en\") or specific language (example: \"en-US\")",
                    "type": "text/plain"
                  },
                  "key": "sourceLanguage",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) List of language codes separated by comma, values can be generic language code or specific language code.",
                    "type": "text/plain"
                  },
                  "key": "targetLanguage",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) List of language codes separated by comma, values can be generic language code or specific language code.",
                    "type": "text/plain"
                  },
                  "key": "targetLanguage",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Pricing Model",
      "description": "Pricing Model",
      "item": [
        {
          "id": "0aeb09d6-380e-44c2-9867-7edfa6a54dd7",
          "name": "List Pricing Models",
          "request": {
            "name": "List Pricing Models",
            "description": {
              "content": "Retrieves a list of all the pricing models in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7ed4214e-008c-4190-b8be-4d3acb9aec6e",
          "name": "Get Pricing Model",
          "request": {
            "name": "Get Pricing Model",
            "description": {
              "content": "Retrieves a pricing model by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pricing-models",
                ":pricingModelId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "pricingModelId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The pricing model identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Project",
      "description": "Project",
      "item": [
        {
          "id": "bf0ea623-7442-47cd-a2a0-64de2fe39852",
          "name": "List Projects",
          "request": {
            "name": "List Projects",
            "description": {
              "content": "Retrieves a list of all the projects in the account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Excludes projects that are being worked on exclusively in the Online Editor",
                    "type": "text/plain"
                  },
                  "key": "excludeOnline",
                  "value": "<boolean>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter the list of projects to projects that have this status.",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "archived"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter the list of of projects to projects that were created after this date and time.  <br> Accepted format: ISO-8601 `YYYY-MM-DDThh:mm:ss.sssZ`",
                    "type": "text/plain"
                  },
                  "key": "createdFrom",
                  "value": "<dateTime>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter the list of of projects to projects that were created before this date and time.  <br> Accepted format: ISO-8601 `YYYY-MM-DDThh:mm:ss.sssZ`",
                    "type": "text/plain"
                  },
                  "key": "createdTo",
                  "value": "<dateTime>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter the list of of projects to projects that were created by this user.",
                    "type": "text/plain"
                  },
                  "key": "createdBy",
                  "value": "<uuid>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "60b58464-a355-4656-81ab-3d8bba900072",
          "name": "Create Project",
          "request": {
            "name": "Create Project",
            "description": {
              "content": "Creates a new project.\n\nWhen creating a project using a project template that supports multiple source languages, you must supply the `languageDirections`.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when creating projects.\n\nThe values from a selected project template will take precedence over the individual resources when creating a new project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"dueBy\": \"<dateTime>\",\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"location\": \"<string>\",\n  \"description\": \"<string>\",\n  \"projectTemplate\": {\n    \"id\": \"<string>\"\n  },\n  \"translationEngine\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"fileProcessingConfiguration\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"workflow\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"pricingModel\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"customFields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": {}\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": {}\n    }\n  ],\n  \"tqaProfile\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"forceOnline\": \"<boolean>\",\n  \"projectManagers\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"user\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"user\"\n    }\n  ],\n  \"scheduleTemplate\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  }\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ee2ca959-9fe7-4a37-8607-92004ce9147d",
          "name": "Get Project",
          "request": {
            "name": "Get Project",
            "description": {
              "content": "Retrieves a project by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2e439a5c-8105-4c2f-9122-8cbbcf000b9d",
          "name": "Update Project",
          "request": {
            "name": "Update Project",
            "description": {
              "content": "Updates the project in terms of: name, description, due date, quote, and project resources. Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386). \n\n Project rescheduling (updating dueBy) is permitted only if: \n* there is no Customer Quote Approval task in the associated flow \n* at least one Customer Quote Approval was closed(in case multiple project batches) ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"dueBy\": \"<dateTime>\",\n  \"deliveredBy\": \"<dateTime>\",\n  \"translationEngine\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"fileProcessingConfiguration\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"pricingModel\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"workflow\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"projectPlan\": {\n    \"taskConfigurations\": [\n      {\n        \"taskTemplate\": {\n          \"id\": \"<string>\"\n        },\n        \"isSkipped\": \"<boolean>\",\n        \"assignees\": [\n          {\n            \"type\": \"projectCreator\",\n            \"id\": \"<string>\"\n          },\n          {\n            \"type\": \"projectCreator\",\n            \"id\": \"<string>\"\n          }\n        ],\n        \"scope\": {\n          \"type\": \"targetLanguage\",\n          \"sourceLanguage\": {\n            \"languageCode\": \"<string>\"\n          },\n          \"targetLanguage\": {\n            \"languageCode\": \"<string>\"\n          },\n          \"languageDirection\": {\n            \"id\": \"<string>\"\n          }\n        },\n        \"dueBy\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"tqaProfile\": {\n    \"id\": \"<string>\",\n    \"strategy\": \"copy\"\n  },\n  \"quote\": {\n    \"languageCosts\": [\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"perPage\",\n        \"volumeUnitType\": \"characters\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"conditionalCostType\": \"percentage\",\n        \"conditionalCostOperator\": \"lessOrEqual\",\n        \"conditionalCostVariable\": \"wordCount\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"perFile\",\n        \"volumeUnitType\": \"words\",\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"conditionalCostType\": \"percentage\",\n        \"conditionalCostOperator\": \"less\",\n        \"conditionalCostVariable\": \"runningTotal\"\n      }\n    ],\n    \"additionalCosts\": [\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"volume\",\n        \"volumeUnitType\": \"characters\",\n        \"conditionalCostType\": \"relative\",\n        \"conditionalCostOperator\": \"less\",\n        \"conditionalCostVariable\": \"wordCount\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"count\": \"<number>\",\n        \"cost\": \"<number>\",\n        \"costOrder\": \"<integer>\",\n        \"conditionalCostThreshold\": \"<number>\",\n        \"costType\": \"perFile\",\n        \"volumeUnitType\": \"characters\",\n        \"conditionalCostType\": \"percentage\",\n        \"conditionalCostOperator\": \"greater\",\n        \"conditionalCostVariable\": \"runningTotal\"\n      }\n    ]\n  },\n  \"customFields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": {}\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": {}\n    }\n  ],\n  \"projectManagers\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"group\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"group\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ad814087-5830-4361-beff-68050f939bea",
          "name": "Delete Project",
          "request": {
            "name": "Delete Project",
            "description": {
              "content": "Deletes a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6a191959-428b-41b6-a856-bb1f2ca65885",
          "name": "Get Project Configuration",
          "request": {
            "name": "Get Project Configuration",
            "description": {
              "content": "Get the configuration settings of an existing project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "configuration"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c4971fe3-d1b5-4be7-a53c-399bc4421453",
          "name": "Update Project Configuration",
          "request": {
            "name": "Update Project Configuration",
            "description": {
              "content": "Updates the configuration settings for an existing project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "configuration"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"translationMemoryFieldsSettings\": {\n    \"settings\": [\n      {\n        \"name\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": \"dateTime\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": \"singleString\"\n      }\n    ]\n  },\n  \"updateTranslationMemory\": {\n    \"settings\": {\n      \"segmentsConfirmationLevels\": [\n        \"rejectedSignOff\",\n        \"approvedTranslation\"\n      ],\n      \"targetSegmentsDifferOption\": \"merge\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6589e520-9b3e-456d-8555-fd4539e85f36",
          "name": "Start Project",
          "request": {
            "name": "Start Project",
            "description": {
              "content": "Starts a project. Translatable files should be uploaded before starting the project. If the action is executed on an already started project, the new translatable files should be uploaded first.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "start"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "735e500c-1cff-4091-9c14-d5f0a701244b",
          "name": "Complete Project",
          "request": {
            "name": "Complete Project",
            "description": {
              "content": "Marks a project as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4894b323-8a07-43c0-8de6-a141bf3d5281",
          "name": "Cancel Project File",
          "request": {
            "name": "Cancel Project File",
            "description": {
              "content": "Cancels a project file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "files",
                ":fileId",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b0f0c7fa-4f6e-4934-9a2e-ebed9a6d1dab",
          "name": "List Project's Tasks",
          "request": {
            "name": "List Project's Tasks",
            "description": {
              "content": "Lists the tasks of a specific project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "761afd23-e3c4-40b2-bbcf-24ade3879409",
          "name": "Update Custom Field",
          "request": {
            "name": "Update Custom Field",
            "description": {
              "content": "Allows updating individual custom fields on a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "custom-fields",
                ":customFieldKey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "customFieldKey",
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"value\": {}\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Project Group",
      "description": "Project Group",
      "item": [
        {
          "id": "11593919-48e1-40e0-a7b5-d97cb6ead1eb",
          "name": "List Project Groups",
          "request": {
            "name": "List Project Groups",
            "description": {
              "content": "Retrieves a list of all the project groups in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ab67dc24-937d-498a-be46-1011993bf080",
          "name": "Create Project Group",
          "request": {
            "name": "Create Project Group",
            "description": {
              "content": "Creates a new project group.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"location\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4c196928-cec5-431c-80f6-915128fa827a",
          "name": "Get Project Group",
          "request": {
            "name": "Get Project Group",
            "description": {
              "content": "Retrieves a project group by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups",
                ":projectGroupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectGroupId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "311ffc98-0f59-4c72-a82e-b6cc99d87f54",
          "name": "Update Project Group",
          "request": {
            "name": "Update Project Group",
            "description": {
              "content": "Updates the project group.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups",
                ":projectGroupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectGroupId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1dda0a59-9c0d-48e5-b4bb-25a3efbbe584",
          "name": "Delete Project Group",
          "request": {
            "name": "Delete Project Group",
            "description": {
              "content": "Deletes a project group.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups",
                ":projectGroupId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectGroupId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5bfa5a79-7539-4900-a6e1-9f3eab7bef05",
          "name": "Add Projects To Group",
          "request": {
            "name": "Add Projects To Group",
            "description": {
              "content": "Adds projects to the project group.\n\nThe projects are not added instantly. To check the status use the [Get Project Group](../reference/Public-API.v1.json/paths/~1project-groups~1{projectGroupId}/get) endpoint.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups",
                ":projectGroupId",
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectGroupId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"projects\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a4ded1e6-ad5f-437a-a4d4-9e8d0090aa98",
          "name": "Remove Projects From Group",
          "request": {
            "name": "Remove Projects From Group",
            "description": {
              "content": "Removes projects from the project group.\n\nThe projects are not removed instantly. To check the status use the [Get Project Group](../reference/Public-API.v1.json/paths/~1project-groups~1{projectGroupId}/get) endpoint.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-groups",
                ":projectGroupId",
                "projects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectGroupId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"projects\": [\n    {\n      \"id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Project Template",
      "description": "Project Template",
      "item": [
        {
          "id": "f97318f6-82e6-4c17-a8ae-75031f422ed9",
          "name": "Get Project Template",
          "request": {
            "name": "Get Project Template",
            "description": {
              "content": "Retrieves a project template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates",
                ":projectTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectTemplateId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project template identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5ccf04b9-6e60-4bd4-be04-77cc658ae863",
          "name": "List Project Templates",
          "request": {
            "name": "List Project Templates",
            "description": {
              "content": "Retrieves a list of all the project templates in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "project-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by name.",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Public Keys",
      "description": "Public Keys",
      "item": [
        {
          "id": "7c24f5db-3295-46a0-91e7-78e13121b398",
          "name": "List Public Keys",
          "request": {
            "name": "List Public Keys",
            "description": {
              "content": "List all available Public Keys.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ".well-known",
                "jwks.json"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "51d917d9-edea-44ac-bd9a-07f54f84627e",
          "name": "Get Public Key",
          "request": {
            "name": "Get Public Key",
            "description": {
              "content": "Retrieves a public key by it's identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ".well-known",
                "jwks.json",
                ":kid"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "kid",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The key identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Quote",
      "description": "Quote",
      "item": [
        {
          "id": "fe6f4f0e-2c09-487b-8e80-8bab015ca62c",
          "name": "Export Quote",
          "request": {
            "name": "Export Quote",
            "description": {
              "content": "Exports the quote for a project in either PDF or Excel format.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The file format of the quote report.",
                    "type": "text/plain"
                  },
                  "key": "format",
                  "value": "pdf"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The language used for localization.",
                    "type": "text/plain"
                  },
                  "key": "languageId",
                  "value": "en"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The Time Zone Offset for date-time fields.",
                    "type": "text/plain"
                  },
                  "key": "timeZoneOffset",
                  "value": "<integer>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a2c82fdd-d59c-4075-b0ae-52b0416eaf66",
          "name": "Export Quote Report",
          "request": {
            "name": "Export Quote Report",
            "description": {
              "content": "Generates an asynchronous quote export operation for the project in either PDF or Excel format. Use the [polling endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1export/get) to check when the export is completed.  ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report",
                "export"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The file format of the quote report.",
                    "type": "text/plain"
                  },
                  "key": "format",
                  "value": "pdf"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The language used for localization.",
                    "type": "text/plain"
                  },
                  "key": "languageId",
                  "value": "en"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1b7b10fb-dd78-425f-981f-c4caadf087c7",
          "name": "Poll Quote Report Export",
          "request": {
            "name": "Poll Quote Report Export",
            "description": {
              "content": "Polls a quote report via an export operation. The quote report can be [downloaded](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1download/get) once the status is \"completed\". The recommended polling interval is 20 seconds. If polling does not return a success status in 20 minutes, it should be abandoned and a new export should be retried.\n\nIf the `exportId` query parameter is not provided, the polling action will return the status for the last generated export.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report",
                "export"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The file format of the quote report.",
                    "type": "text/plain"
                  },
                  "key": "format",
                  "value": "pdf"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The export identifier.",
                    "type": "text/plain"
                  },
                  "key": "exportId",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "115730b5-ccac-4bd6-9842-e9079e058ea9",
          "name": "Download Exported Quote Report",
          "request": {
            "name": "Download Exported Quote Report",
            "description": {
              "content": "Downloads a quote report generated by the [asynchronous export operation](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1export/post). \n\nIf the `exportId` query parameter is not provided, the last generated export quote will be downloaded.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "quote-report",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The file format of the quote report.",
                    "type": "text/plain"
                  },
                  "key": "format",
                  "value": "pdf"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The export identifier.",
                    "type": "text/plain"
                  },
                  "key": "exportId",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Rate Limits",
      "description": "Rate Limits",
      "item": [
        {
          "id": "f038268d-f6f9-4a81-9be0-dd120497ff74",
          "name": "List Rate Limits",
          "request": {
            "name": "List Rate Limits",
            "description": {
              "content": "Retrieves a list of all rate limits applicable for an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "rate-limits"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Schedule Template",
      "description": "Schedule Template",
      "item": [
        {
          "id": "a2ae852f-1a48-42e1-a101-244b3d9fc2fe",
          "name": "List Schedule Templates",
          "request": {
            "name": "List Schedule Templates",
            "description": {
              "content": "Retrieves a list of all the schedule templates in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "schedule-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by name.",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3a1f3751-4b99-4737-9f41-dfd1d806f6ea",
          "name": "Create Schedule Template",
          "request": {
            "name": "Create Schedule Template",
            "description": {
              "content": "Creates a new schedule template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "schedule-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"location\": \"<string>\",\n  \"configurations\": [\n    {\n      \"taskTypeId\": \"<string>\",\n      \"schedules\": [\n        {\n          \"scope\": \"global\",\n          \"duration\": \"<integer>\",\n          \"reminder\": 30,\n          \"sourceLanguage\": \"<string>\",\n          \"targetLanguage\": \"<string>\"\n        },\n        {\n          \"scope\": \"global\",\n          \"duration\": \"<integer>\",\n          \"reminder\": 30,\n          \"sourceLanguage\": \"<string>\",\n          \"targetLanguage\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"taskTypeId\": \"<string>\",\n      \"schedules\": [\n        {\n          \"scope\": \"languageDirection\",\n          \"duration\": \"<integer>\",\n          \"reminder\": 480,\n          \"sourceLanguage\": \"<string>\",\n          \"targetLanguage\": \"<string>\"\n        },\n        {\n          \"scope\": \"global\",\n          \"duration\": \"<integer>\",\n          \"reminder\": 2880,\n          \"sourceLanguage\": \"<string>\",\n          \"targetLanguage\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"projectScheduleConfiguration\": {\n    \"duration\": 0,\n    \"reminder\": 120\n  }\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "38c25250-228f-4a8c-b9bb-8ac7f97474c2",
          "name": "Get Schedule Template",
          "request": {
            "name": "Get Schedule Template",
            "description": {
              "content": "Retrieves a schedule template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "schedule-templates",
                ":scheduleTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "scheduleTemplateId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The id of the schedule template.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5ce21223-ecf2-4ef6-8c71-3e0e8d1d5aca",
          "name": "Delete Schedule Template",
          "request": {
            "name": "Delete Schedule Template",
            "description": {
              "content": "Deletes a schedule template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "schedule-templates",
                ":scheduleTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "scheduleTemplateId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The id of the schedule template.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7892775a-48ec-4edb-b346-07561ef4b1db",
          "name": "Update Schedule Template",
          "request": {
            "name": "Update Schedule Template",
            "description": {
              "content": "Updates the schedule template identified by `scheduleTemplateId`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "schedule-templates",
                ":scheduleTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "scheduleTemplateId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The id of the schedule template.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"configurations\": [\n    {\n      \"taskTypeId\": \"<string>\",\n      \"schedules\": [\n        {\n          \"scope\": \"languageDirection\",\n          \"duration\": \"<integer>\",\n          \"reminder\": 60,\n          \"sourceLanguage\": \"<string>\",\n          \"targetLanguage\": \"<string>\"\n        },\n        {\n          \"scope\": \"sourceLanguage\",\n          \"duration\": \"<integer>\",\n          \"reminder\": 480,\n          \"sourceLanguage\": \"<string>\",\n          \"targetLanguage\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"taskTypeId\": \"<string>\",\n      \"schedules\": [\n        {\n          \"scope\": \"global\",\n          \"duration\": \"<integer>\",\n          \"reminder\": 60,\n          \"sourceLanguage\": \"<string>\",\n          \"targetLanguage\": \"<string>\"\n        },\n        {\n          \"scope\": \"global\",\n          \"duration\": \"<integer>\",\n          \"reminder\": 15,\n          \"sourceLanguage\": \"<string>\",\n          \"targetLanguage\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"projectScheduleConfiguration\": {\n    \"duration\": 0,\n    \"reminder\": 480\n  }\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Source File",
      "description": "Source File",
      "item": [
        {
          "id": "09ea40d4-47ae-414b-8cca-75dc466e3404",
          "name": "List Source Files",
          "request": {
            "name": "List Source Files",
            "description": {
              "content": "Retrieves the source files in a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "00221a3f-43d1-4599-a1cb-5e6ca9f06047",
          "name": "Add Source File",
          "request": {
            "name": "Add Source File",
            "description": {
              "content": "Adds a source file to the project. Files can be uploaded before starting a project or after the project has started. When adding the file after the project started, a new start project request should be performed.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.\n\n> Note: The maximum character size of the sum between the `name` and the `path` fields must not exceed 200. Otherwise the request cannot be validated.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(Required) Source file properties sent as a JSON inside a text part.",
                    "type": "text/plain"
                  },
                  "key": "properties",
                  "value": "[object Object]",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<string>",
                  "type": "text"
                }
              ]
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e4d3e632-dc6c-4ba6-90f4-fc9f7802281e",
          "name": "Update Source Files",
          "request": {
            "name": "Update Source Files",
            "description": {
              "content": "Updates multiple source files. If any of the files fails to be updated, an error will be returned for each file. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"files\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateTargetFilesName\": false\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updateTargetFilesName\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9987ad23-4944-4f1a-8e56-e8d46d1f8948",
          "name": "Attach Source Files",
          "request": {
            "name": "Attach Source Files",
            "description": {
              "content": "Adds multiple source files to the project. Files must be uploaded before attaching them to a project. When a file is attached after the project was started, a new start project request should be performed.\n\n\n> Note: The maximum character size of the sum between the `name` and the `path` fields must not exceed 200. Otherwise the request cannot be validated.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                "attach-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourceFilesAttachment\": [\n    {\n      \"name\": \"<string>\",\n      \"role\": \"unknown\",\n      \"fileUrl\": \"<string>\",\n      \"type\": \"sdlxliff\",\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguages\": [\n        {\n          \"languageCode\": \"<string>\"\n        },\n        {\n          \"languageCode\": \"<string>\"\n        }\n      ],\n      \"path\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"role\": \"translatable\",\n      \"fileUrl\": \"<string>\",\n      \"type\": \"bcm\",\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguages\": [\n        {\n          \"languageCode\": \"<string>\"\n        },\n        {\n          \"languageCode\": \"<string>\"\n        }\n      ],\n      \"path\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c8b1521a-fdfc-448f-8273-816390d86719",
          "name": "Get Source File",
          "request": {
            "name": "Get Source File",
            "description": {
              "content": "Retrieves a source file from the project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The source file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "42af65d4-a9a6-43a1-a3f8-a475e3f97fbc",
          "name": "Update Source File",
          "request": {
            "name": "Update Source File",
            "description": {
              "content": "Updates a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The source file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"updateTargetFilesName\": false\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b9142d3b-9020-4d11-b2de-734deda1b8cf",
          "name": "List Source File Versions",
          "request": {
            "name": "List Source File Versions",
            "description": {
              "content": "Retrieves all the versions of a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The source file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ec3dcc8a-df6c-4d09-8f98-f482c204ef61",
          "name": "Add Source File Version",
          "request": {
            "name": "Add Source File Version",
            "description": {
              "content": "Adds a new version of the source file in [BCM](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html) or native format. More information about file formats can be found on the [File formats](../docs/File-formats.md) page.\n\nThe version is added on the task represented by `taskId`. To successfully  execute the add operation the task should already be assigned and accepted by a user. If the task is automatic, it's possible to add a source file version only when the status of task is `inProgress`.\n\nThe file versions added need to respect the output file type declared by the task type of the enclosing task. On the [Rules for sequencing tasks correctly](https://docs.rws.com/791595/885137/trados-enterprise/rules-for-sequencing-tasks-correctly) page from the official RWS Documentation Center, you can find out what output file type is supported by each task.\n\nFor adding a source file version using an extension task, the configuration of the task must declare the `scope`'s value as \"file\".\n\nIf the file type of the new added file is different than the supported source file type, the new `fileTypeSettingsId` must be specified in the body or an update of file type should be performed after the add operation, using the [Update Source File Properties](../reference/Public-API.v1.json/paths/~1tasks~1{taskId}~1source-files~1{sourceFileId}/put).\n\nThe value of `fileTypeSettingsId` is one of the identifiers listed by the [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get) endpoint.\n\nThe [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get) endpoint must be called with the File Processing Configuration identifier of your project.\n\nThe File Processing Configuration of your project can be retrieved from [Get Project](../reference/Public-API.v1.json/paths/~1projects~1{projectId}/get) endpoint.\n\nThe multipart parameters in the body should respect and strictly follow the order specified in our documentation. \n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when adding files.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "source-files",
                ":sourceFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The source file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "properties",
                  "value": "[object Object]",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "(Required) The source file.",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<string>",
                  "type": "text"
                }
              ]
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e8612af7-22f2-4a4a-bdc4-b315a28d96b8",
          "name": "Download Source File Version",
          "request": {
            "name": "Download Source File Version",
            "description": {
              "content": "Downloads a source file version.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "source-files",
                ":sourceFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The source file identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file version identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c0edcfae-0a53-42a6-9379-83de2c62961f",
          "name": "Get Source File Properties",
          "request": {
            "name": "Get Source File Properties",
            "description": {
              "content": "Retrieves the properties for a source file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The source file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "12c4cb1b-865b-4c7f-b4d9-bcca96d936fa",
          "name": "Update Source File Properties",
          "request": {
            "name": "Update Source File Properties",
            "description": {
              "content": "Updates the properties of the source file.\n\n\nThe value of `fileTypeSettingsId` should be one of the identifiers listed by the [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get)  endpoint called with an identifier of a File Processing Configuration that exists on the project. The list of File Processing Configurations from a project can be retrieved by using the [List File Processing Configurations](../reference/Public-API.v1.json/paths/~1file-processing-configurations/get) endpoint.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "source-files",
                ":sourceFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The source file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileRole\": \"translatable\",\n  \"fileTypeSettingsId\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Target File",
      "description": "Target File",
      "item": [
        {
          "id": "9cb843eb-9db5-48c1-b642-7bc9887322b3",
          "name": "Get Target File",
          "request": {
            "name": "Get Target File",
            "description": {
              "content": "Retrieves a target file from a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f06ec95f-da57-4647-8e34-105b70863876",
          "name": "Update Target File",
          "request": {
            "name": "Update Target File",
            "description": {
              "content": "Updates a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9d87f145-b7ce-401c-a16f-ef7939a332f1",
          "name": "List Target Files",
          "request": {
            "name": "List Target Files",
            "description": {
              "content": "Retrieves the target files for a project.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter target files by identifiers.",
                    "type": "text/plain"
                  },
                  "key": "targetFileIds",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter target files by the identifiers of the source file they were generated from.",
                    "type": "text/plain"
                  },
                  "key": "sourceFileIds",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6b74699d-7873-4551-af7b-8cac29a91760",
          "name": "Update Target Files",
          "request": {
            "name": "Update Target Files",
            "description": {
              "content": "Updates multiple target files. If any of the files fails to be updated, an error will be returned for each file. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"files\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9119f8f3-e2d0-44e2-873e-3b21b4aa1dce",
          "name": "Get Target File Version",
          "request": {
            "name": "Get Target File Version",
            "description": {
              "content": "Retrieves one version of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file version identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "388c717b-b6df-4bda-a288-4b850a73fb01",
          "name": "List Target File Versions",
          "request": {
            "name": "List Target File Versions",
            "description": {
              "content": "Retrieves the versions of a target file.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "723b04db-202e-4078-8437-75e65831224d",
          "name": "Export Target File Version",
          "request": {
            "name": "Export Target File Version",
            "description": {
              "content": "Generates an asynchronous export operation. Use the [Get Target File Version Export](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1{fileVersionId}~1exports~1{exportId}/get) endpoint to poll until the export is completed. Used only for [BCM](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html) file versions.\n\nThis operation triggers a conversion of the BCM target file version in a native or SDLXLIFF format, based on the value of the `format` query parameter used.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The file format.",
                    "type": "text/plain"
                  },
                  "key": "format",
                  "value": "native"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file version identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b0f4c7f4-4e9c-4ab6-8e13-5cfb699d3aed",
          "name": "Poll Target File Version Export",
          "request": {
            "name": "Poll Target File Version Export",
            "description": {
              "content": "Polls a target file version via an export operation. The new version can be downloaded once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file version identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The export identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "395d8664-ae5c-4df9-a8e9-e27ff3a4511a",
          "name": "Download Exported Target File Version",
          "request": {
            "name": "Download Exported Target File Version",
            "description": {
              "content": "Downloads a completed target file version via an export operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file version identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The export identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "98d2c507-9f64-4c4f-b987-7d7d4d32fdfd",
          "name": "Download Target File Version",
          "request": {
            "name": "Download Target File Version",
            "description": {
              "content": "Downloads the file version (native or BCM). \n\nIf the `fileVersionId` path parameter represents a native file version, the native file will be downloaded. If the `fileVersionId` is an identifier of a version in [BCM format](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html), the BCM file will be downloaded.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                ":fileVersionId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fileVersionId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The file version identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9624df9f-1289-401e-8f27-16f3daa23362",
          "name": "Import Target File Version",
          "request": {
            "name": "Import Target File Version",
            "description": {
              "content": "Generates an asynchronous import operation. Use [Poll Target File Version Import endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1imports~1{importId}/get) to poll until the import is completed. Only `sdlxliff` files can be imported.\n\nImport should be used when a file is downloaded as an `sdlxliff`, processed and then, replaced. \nThe import operation triggers internally the update of the [BCM](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html) file associated with the imported file. It should mostly be used for offline work.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<string>",
                  "type": "text"
                }
              ]
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5316e861-d1c0-4a57-94d3-b2f46a5b8080",
          "name": "Poll Target File Version Import",
          "request": {
            "name": "Poll Target File Version Import",
            "description": {
              "content": "Polls a target file version via an import operation. The new version can be seen on the file versions once the status is \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "projects",
                ":projectId",
                "target-files",
                ":targetFileId",
                "versions",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "projectId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The project identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The import identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ac7f7a60-131a-4f3c-941a-42d428e73579",
          "name": "Add Target File Version",
          "request": {
            "name": "Add Target File Version",
            "description": {
              "content": "Adds a new  version of the target file. Only the `native` and `bcm` file formats are accepted. For the `sdlxliff` files, you should use the [Import Target File endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1imports/post). More information about file formats can be found on the [File formats](../docs/File-formats.md) page. Additional details on BCM files can be found [here](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html).\n\nThe version is added on the task represented by `taskId`. To be able to execute the add operation the task should be assigned and accepted by user. If the task is automatic, it is possible to add a target file version only if the status is `inProgress`.\n\nThe added file versions need to respect the output file type declared by the task type of the enclosing task. On the [Rules for sequencing tasks correctly](https://docs.rws.com/791595/885137/trados-enterprise/rules-for-sequencing-tasks-correctly) page from the official RWS Documentation Center, you can find out what output file type is supported by each task.\n\nFor adding a target file version using an extension task, the configuration of the task type must declare the `scope`'s value as \"file\".\n\nThe multipart parameters in the body should respect and strictly follow the order specified in our documentation.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "target-files",
                ":targetFileId",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "targetFileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target file identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "properties",
                  "value": "[object Object]",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "(Required) The target file.",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<string>",
                  "type": "text"
                }
              ]
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Task",
      "description": "Task",
      "item": [
        {
          "id": "6f9ae3f4-95b6-4af4-a8a8-e65b8c1a4464",
          "name": "Get Task",
          "request": {
            "name": "Get Task",
            "description": {
              "content": "Retrieves a task.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f1365b1f-d118-4e8c-813d-c27396293159",
          "name": "List Tasks assigned to me",
          "request": {
            "name": "List Tasks assigned to me",
            "description": {
              "content": "Retrieves the tasks assigned to the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                "assigned"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "If specified, this filters tasks by status.",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "faede998-ce76-459e-bbbf-03da50612bc9",
          "name": "Accept Task",
          "request": {
            "name": "Accept Task",
            "description": {
              "content": "Accepts a task. The authenticated user becomes the owner of the accepted task and can start work on it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "accept"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c7a5eaac-a20d-4a81-acf9-1666958195d3",
          "name": "Reject Task",
          "request": {
            "name": "Reject Task",
            "description": {
              "content": "Rejects a task. The authenticated user will be removed from the task's list of available assignee users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reject"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1c3e1889-5b0e-4939-a2c5-4ab12776f820",
          "name": "Complete Task",
          "request": {
            "name": "Complete Task",
            "description": {
              "content": "Completes a task. The task is required to be in \"inProgress\" state and will be marked as \"completed\".",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "complete"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"outcome\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "967f90f8-e518-4db5-9530-95c66dd5bcc9",
          "name": "Release Task",
          "request": {
            "name": "Release Task",
            "description": {
              "content": "Releases the task from its owner so that other task assignees will be able to accept it.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "release"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2c631531-b130-49e3-8fb3-da8558df0f70",
          "name": "Reclaim Task",
          "request": {
            "name": "Reclaim Task",
            "description": {
              "content": "The current owner of task is removed so that other assignees can accept it. \nThe task is not reassigned automatically.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "reclaim"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ade9e484-2f32-452d-90c9-688c41b003c4",
          "name": "Assign Task",
          "request": {
            "name": "Assign Task",
            "description": {
              "content": "Assigns a task. The task assignees will be updated.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tasks",
                ":taskId",
                "assign"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignees\": [\n    {\n      \"type\": \"projectCreator\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"projectManager\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Task Type",
      "description": "Task Type",
      "item": [
        {
          "id": "0fb74286-b255-4256-9f8b-ea0da3817efe",
          "name": "Get Task Type",
          "request": {
            "name": "Get Task Type",
            "description": {
              "content": "Retrieves a task type by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types",
                ":taskTypeId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "taskTypeId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The task type identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "339cf912-f45b-4841-bc5e-9b57f0cfa6ac",
          "name": "List Task Types",
          "request": {
            "name": "List Task Types",
            "description": {
              "content": "Retrieves all the task types in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "task-types"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by keys.",
                    "type": "text/plain"
                  },
                  "key": "key",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by automatic or human tasks.",
                    "type": "text/plain"
                  },
                  "key": "automatic",
                  "value": "<boolean>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Termbase",
      "description": "Termbase",
      "item": [
        {
          "id": "7917d875-f9a4-42dc-809e-7bab17ea8297",
          "name": "List Termbases",
          "request": {
            "name": "List Termbases",
            "description": {
              "content": "List termbases.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "53087e01-10d3-4e83-b498-92054370ae58",
          "name": "Create Termbase",
          "request": {
            "name": "Create Termbase",
            "description": {
              "content": "Creates a new termbase.\nThe termbase can be created with a termbase template by providing the templateId or by providing a custom termbaseStructure. \nIf only a `termbaseTemplateId` was provided, the termbase will be created using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be created using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precedence.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\",\n  \"termbaseTemplateId\": \"<string>\",\n  \"termbaseStructure\": {\n    \"languages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"level\": \"entry\",\n        \"dataType\": \"text\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"level\": \"entry\",\n        \"dataType\": \"picklist\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f414163f-c403-4bd6-9516-2a6e5011e5ba",
          "name": "Get Termbase",
          "request": {
            "name": "Get Termbase",
            "description": {
              "content": "Retrieves a termbase by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "76f4b4b3-18ab-488c-a33e-21d7a6c76e86",
          "name": "Delete Termbase",
          "request": {
            "name": "Delete Termbase",
            "description": {
              "content": "Deletes a termbase by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4d9c5ba6-ad92-41a8-85de-73087290ecf0",
          "name": "Update Termbase",
          "request": {
            "name": "Update Termbase",
            "description": {
              "content": "Updates the termbase.\nThe termbase can be updated with a termbase template by providing the termbaseTemplateId or by providing a custom termbaseStructure. \n\nIf only a `termbaseTemplateId ` was provided, the termbase will be updated using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be updated using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precedence.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"termbaseTemplateId\": \"<string>\",\n  \"termbaseStructure\": {\n    \"languages\": [\n      {\n        \"languageCode\": \"<string>\"\n      },\n      {\n        \"languageCode\": \"<string>\"\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"level\": \"term\",\n        \"dataType\": \"boolean\",\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"level\": \"entry\",\n        \"dataType\": \"picklist\",\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"pickListValues\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allowCustomValues\": false,\n        \"allowMultiple\": true,\n        \"isMandatory\": false\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "982bd76f-5aab-485e-913e-0503c9b4626e",
          "name": "Create Termbase Entry",
          "request": {
            "name": "Create Termbase Entry",
            "description": {
              "content": "Creates a new termbase entry. For more information about how to use `fieldValueLinks` see [`Create termbase entry`](../docs/termbase/Termbase-entries.md#creating-a-termbase-entry).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languages\": [\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"entry\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"term\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"external\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"external\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"external\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"entry\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"entry\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"term\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"term\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"external\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"term\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"humanReadableId\": \"<string>\",\n  \"termbaseFieldValues\": [\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"entry\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"external\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"entry\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"entry\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8941b356-40a8-44e1-8d11-b8e3ffbb823a",
          "name": "List Termbase Entries",
          "request": {
            "name": "List Termbase Entries",
            "description": {
              "content": "Retrieves a list of all the entries in a termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Can provide a list of humanReadableId from entries to filter by.",
                    "type": "text/plain"
                  },
                  "key": "humanReadableIds",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Can provide a list of humanReadableId from entries to filter by.",
                    "type": "text/plain"
                  },
                  "key": "humanReadableIds",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8d6276cd-6d6b-4b1e-b6c5-7a5cc0115de9",
          "name": "Delete Termbase Entries",
          "request": {
            "name": "Delete Termbase Entries",
            "description": {
              "content": "Deletes all the entries in the termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bbd436d9-d26c-4332-acaa-434152f54945",
          "name": "Get Termbase Entry",
          "request": {
            "name": "Get Termbase Entry",
            "description": {
              "content": "Retrieves a termbase entry by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase entry identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2c9fbf28-875d-4c38-a467-db5ac46a9793",
          "name": "Update Termbase Entry",
          "request": {
            "name": "Update Termbase Entry",
            "description": {
              "content": "Updates a termbase entry by identifier.\nThe request body will overwrite the existing data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase entry identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languages\": [\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"entry\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"entry\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"id\": \"<string>\",\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"term\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"term\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"external\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"term\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"language\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"terms\": [\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"text\": \"<string>\",\n          \"id\": \"<string>\",\n          \"termbaseFieldValues\": [\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"external\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"termbaseFieldId\": \"<string>\",\n              \"value\": \"<string>\",\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"fieldValueLinks\": [\n                {\n                  \"type\": \"entry\",\n                  \"value\": \"<string>\"\n                },\n                {\n                  \"type\": \"term\",\n                  \"value\": \"<string>\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"id\": \"<string>\",\n      \"termbaseFieldValues\": [\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"term\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"term\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"termbaseFieldId\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"fieldValueLinks\": [\n            {\n              \"type\": \"term\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"type\": \"entry\",\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"humanReadableId\": \"<string>\",\n  \"termbaseFieldValues\": [\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"external\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"external\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"termbaseFieldId\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fieldValueLinks\": [\n        {\n          \"type\": \"entry\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"term\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f0c1ebf4-3ccc-4c6e-aee9-ab5f63763f3a",
          "name": "Delete Termbase Entry",
          "request": {
            "name": "Delete Termbase Entry",
            "description": {
              "content": "Deletes a termbase entry.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "entries",
                ":entryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "entryId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase entry identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1db8ffa3-4b17-41e9-ba6d-92a4de30a962",
          "name": "List Termbase Terms",
          "request": {
            "name": "List Termbase Terms",
            "description": {
              "content": "Retrieves a list of all the terms of the termbase.\nSearch types:\n- normal: Use normal search to look for terms that match the text exactly as entered.\n- linguistic: Use linguistic search to look for terms that are similar to the search term. Linguistic search is based on stemming and other language-dependent aspects.\n- fuzzy: Use fuzzy search to look for terms that are similar to the search term. Fuzzy search is more fault-tolerant than linguistic search.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "terms",
                ":sourceLanguageCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The text to search for.",
                    "type": "text/plain"
                  },
                  "key": "search",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The type of the search performed.",
                    "type": "text/plain"
                  },
                  "key": "searchType",
                  "value": "normal"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The target language code used to list the terms.",
                    "type": "text/plain"
                  },
                  "key": "targetLanguageCode",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "sourceLanguageCode",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The source language code used to list the terms.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Termbase Template",
      "description": "Termbase Template",
      "item": [
        {
          "id": "477d7136-04dd-4ff2-9aba-48f98c104023",
          "name": "List Termbase Templates",
          "request": {
            "name": "List Termbase Templates",
            "description": {
              "content": "List termbase templates.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The type of the termbase template to retrieve. If not specified, both types will be returned",
                    "type": "text/plain"
                  },
                  "key": "type",
                  "value": "userDefined"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7671b9b8-864b-4db5-8766-b3d683a6152d",
          "name": "Create Termbase Template",
          "request": {
            "name": "Create Termbase Template",
            "description": {
              "content": "Creates a new termbase template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\",\n  \"languages\": [\n    {\n      \"languageCode\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\"\n    }\n  ],\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"level\": \"entry\",\n      \"dataType\": \"date\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"level\": \"entry\",\n      \"dataType\": \"boolean\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "911cdbb1-6e6c-4f2a-a697-cfd6a14f4c87",
          "name": "Get Termbase Template",
          "request": {
            "name": "Get Termbase Template",
            "description": {
              "content": "Get a termbase template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase template identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cfabe174-f2e0-410a-b709-8cbe258a3f7c",
          "name": "Delete Termbase Template",
          "request": {
            "name": "Delete Termbase Template",
            "description": {
              "content": "Deletes a termbase template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase template identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f150969f-a7f2-4a52-b855-efb763038dcf",
          "name": "Update Termbase Template",
          "request": {
            "name": "Update Termbase Template",
            "description": {
              "content": "Updates the termbase template.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                ":termbaseTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseTemplateId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase template identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"languages\": [\n    {\n      \"languageCode\": \"<string>\"\n    },\n    {\n      \"languageCode\": \"<string>\"\n    }\n  ],\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"level\": \"entry\",\n      \"dataType\": \"picklist\",\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"level\": \"term\",\n      \"dataType\": \"date\",\n      \"id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"pickListValues\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"allowCustomValues\": false,\n      \"allowMultiple\": true,\n      \"isMandatory\": false\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b9f45fcc-4199-44b7-a3ab-83ec7307bfc4",
          "name": "Convert XDT to Termbase Structure",
          "request": {
            "name": "Convert XDT to Termbase Structure",
            "description": {
              "content": "Converts a termbase definition (XDT file) to a termbase structure that will be returned in the response.<br>\nThe structure will not be stored in Language Cloud.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbase-templates",
                "convert-xdt"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(Required) The <b>.xdt</b> file used for conversion.",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<string>",
                  "type": "text"
                }
              ]
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Termbase Import",
      "description": "Termbase Import",
      "item": [
        {
          "id": "65862c00-245a-41aa-af68-81656a9d5338",
          "name": "Get Termbase Import History",
          "request": {
            "name": "Get Termbase Import History",
            "description": {
              "content": "Gets the import history for a termbase.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1c2fc792-423e-4fda-8881-488a2fd80f5e",
          "name": "Import Termbase",
          "request": {
            "name": "Import Termbase",
            "description": {
              "content": "Generates an asynchronous import operation.<br>\nUse the Poll Import Termbase endpoint to poll until the import status is `done`.<br>",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Specifies if the entries are only imported into the exact language that matches your imported file.<br> `true` - The import will only occur if the language in your import file matches exactly with a language in your termbase.<br> `false` - The import will occur even there are non-matching languages, by trying to match them to a relevant main language or language variant, if available.",
                    "type": "text/plain"
                  },
                  "key": "strictImport",
                  "value": "true"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The strategy for duplicate entries. Determines how the duplicate entries will be handled.<br> `ignore` - The content of the current entry with the same identifier will be kept, and the new entry will be ignored<br> `merge` - The content of the current entry with the same identifier will be merged with the imported entry. If the identifier is not provided the content will be merged by text.<br> `overwrite` - The content of the current entry with the same identifier will be replaced by the imported entry.",
                    "type": "text/plain"
                  },
                  "key": "duplicateEntriesStrategy",
                  "value": "overwrite"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(Required) The file to import into the termbase.<br>\nAccepted file types: <b>.xml</b>, <b>.tbx</b>\n<br>",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<string>",
                  "type": "text"
                }
              ]
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "aecfa00d-143a-4063-8c6a-e647f9a4d585",
          "name": "Poll Termbase Import",
          "request": {
            "name": "Poll Termbase Import",
            "description": {
              "content": "Polls a termbase import operation.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The import identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2ebe168b-929c-4436-94fc-dd5bd9e578a0",
          "name": "Download Termbase Import Logs",
          "request": {
            "name": "Download Termbase Import Logs",
            "description": {
              "content": "Downloads the termbase import logs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "imports",
                ":importId",
                "logs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The import identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Termbase Export",
      "description": "Termbase Export",
      "item": [
        {
          "id": "9991e009-ec87-45fd-bb3c-2131ebac374a",
          "name": "Export Termbase",
          "request": {
            "name": "Export Termbase",
            "description": {
              "content": "Generates an asynchronous export operation.<br>\nUse the Poll Export Termbase endpoint to poll until the export status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"format\": \"tbx\",\n  \"properties\": {\n    \"downloadCompressed\": false\n  }\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7c3f61df-c25d-4ccd-907b-bfbfdd8ad4c8",
          "name": "Poll Termbase Export",
          "request": {
            "name": "Poll Termbase Export",
            "description": {
              "content": "Polls a termbase via an export operation. The exported termbase can be downloaded once the status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The export identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "77919627-6578-4696-93b4-8ec766d881eb",
          "name": "Download Exported Termbase",
          "request": {
            "name": "Download Exported Termbase",
            "description": {
              "content": "Downloads the exported termbase when the poll operation status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                },
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The export identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "86b57ca8-4895-41fc-b3a7-d07abb6833fb",
          "name": "Export Termbase Template",
          "request": {
            "name": "Export Termbase Template",
            "description": {
              "content": "Downloads the termbase definition.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "termbases",
                ":termbaseId",
                "export-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "termbaseId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The termbase identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "TQA Profile",
      "description": "TQA Profile",
      "item": [
        {
          "id": "e827c3ee-f470-40b7-8d65-98f122283305",
          "name": "List TQA Profiles",
          "request": {
            "name": "List TQA Profiles",
            "description": {
              "content": "List TQA Profiles.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3c77ced6-eb13-490e-8166-b7ef8e483345",
          "name": "Get TQA Profile",
          "request": {
            "name": "Get TQA Profile",
            "description": {
              "content": "Get a TQA Profile By identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "tqa-profiles",
                ":profileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "profileId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The profile identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Translation Engine",
      "description": "Translation Engine",
      "item": [
        {
          "id": "fec37d28-ae5e-4d5e-8fa5-6ad89396e8e7",
          "name": "Get Translation Engine",
          "request": {
            "name": "Get Translation Engine",
            "description": {
              "content": "Retrieves a translation engine.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines",
                ":translationEngineId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "translationEngineId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The translation engine identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "22232579-5151-4f31-9d14-b06bb384c187",
          "name": "Update Translation Engine",
          "request": {
            "name": "Update Translation Engine",
            "description": {
              "content": "Updates a translation engine. \n\nIt can be used to update a stand-alone translation engine or a project's translation engine. \nThe identifier of a project's translation engine can be retrieved only by calling [Get Project endpoint](https://sdl-language-tech.stoplight.io/docs/lcpublicapi/fd9ee0beb37ca-get-project).\n\nPay special attention that some properties can not be changed for a project's translation engine. These include: name, description, definition.languageProcessingId, and language pairs can not be added/removed from definition.languagePairDefinitions. \n\nPay special attention to how [updating works](https://languagecloud.sdl.com/lc/api-docs/updating-data-with-put).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines",
                ":translationEngineId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "translationEngineId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The translation engine identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"definition\": {\n    \"languageProcessingRuleId\": \"<string>\",\n    \"languagePairDefinitions\": [\n      {\n        \"languagePair\": {\n          \"source\": \"<string>\",\n          \"target\": \"<string>\"\n        },\n        \"resources\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"MT\",\n            \"penalty\": \"<integer>\",\n            \"lookup\": \"<boolean>\",\n            \"concordance\": \"<boolean>\",\n            \"update\": \"<boolean>\",\n            \"systemId\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"TM\",\n            \"penalty\": \"<integer>\",\n            \"lookup\": \"<boolean>\",\n            \"concordance\": \"<boolean>\",\n            \"update\": \"<boolean>\",\n            \"systemId\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"languagePair\": {\n          \"source\": \"<string>\",\n          \"target\": \"<string>\"\n        },\n        \"resources\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"TB\",\n            \"penalty\": \"<integer>\",\n            \"lookup\": \"<boolean>\",\n            \"concordance\": \"<boolean>\",\n            \"update\": \"<boolean>\",\n            \"systemId\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"MT\",\n            \"penalty\": \"<integer>\",\n            \"lookup\": \"<boolean>\",\n            \"concordance\": \"<boolean>\",\n            \"update\": \"<boolean>\",\n            \"systemId\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "690c77f0-8103-4f83-9a68-aa348136c28a",
          "name": "List Translation Engines",
          "request": {
            "name": "List Translation Engines",
            "description": {
              "content": "Retrieves all the translation engines in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-engines"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Translation Memory",
      "description": "Translation Memory",
      "item": [
        {
          "id": "141365b0-4ad7-43e5-b415-a5ff24b595ca",
          "name": "Get Translation Memory",
          "request": {
            "name": "Get Translation Memory",
            "description": {
              "content": "Get a single Translation Memory by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The identifier of the translation memory",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7f22be5e-f55e-4a14-8008-eacf57765318",
          "name": "Update Translation Memory",
          "request": {
            "name": "Update Translation Memory",
            "description": {
              "content": "Updates a Translation Memory. We recommend reading this page too [Updating data with PUT](../docs/Updating-data-with-PUT.md).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The identifier of the translation memory",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"languageProcessingRuleId\": \"<string>\",\n  \"fieldTemplateId\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "54c62b02-b615-4d57-bce2-fe95cdfee592",
          "name": "Delete Translation Memory",
          "request": {
            "name": "Delete Translation Memory",
            "description": {
              "content": "Deletes a Translation Memory.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The identifier of the translation memory",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6ab63c73-4e78-450d-99ce-6b939f1b84fb",
          "name": "Copy Translation Memory",
          "request": {
            "name": "Copy Translation Memory",
            "description": {
              "content": "Creates a copy of a Translation Memory. The name will be suffixed with ' (Copy) '",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId",
                "copy"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The identifier of the translation memory",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "622229a8-70f9-4145-9f60-7ff0c79170ea",
          "name": "List Translation Memories",
          "request": {
            "name": "List Translation Memories",
            "description": {
              "content": "Retrieves all the Translation Memories.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a30fbe77-64fc-49ce-87bf-1d3036647a58",
          "name": "Create Translation Memory",
          "request": {
            "name": "Create Translation Memory",
            "description": {
              "content": "Create a new Translation Memory.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"languageDirections\": [\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    },\n    {\n      \"sourceLanguage\": {\n        \"languageCode\": \"<string>\"\n      },\n      \"targetLanguage\": {\n        \"languageCode\": \"<string>\"\n      }\n    }\n  ],\n  \"languageProcessingRuleId\": \"<string>\",\n  \"fieldTemplateId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"copyright\": \"<string>\",\n  \"location\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c6f74d9c-d227-4c50-bec9-01a9eb99230d",
          "name": "List Field Templates",
          "request": {
            "name": "List Field Templates",
            "description": {
              "content": "Retrieves all the Field Templates.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "field-templates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0a81f476-2524-4448-ab8c-fd5d4f49810a",
          "name": "Get Field Template",
          "request": {
            "name": "Get Field Template",
            "description": {
              "content": "Get a single Field Template by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "field-templates",
                ":fieldTemplateId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "fieldTemplateId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The field template identifier",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Translation Memory Import",
      "description": "Translation Memory Import",
      "item": [
        {
          "id": "824bc152-54d6-4946-9236-4f657c3b1f64",
          "name": "Get Translation Memory Import History",
          "request": {
            "name": "Get Translation Memory Import History",
            "description": {
              "content": "Gets the import history for a translation memory.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The identifier of the Translation Memory.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bf018ccc-70ac-4ee2-bcab-1e462be4a399",
          "name": "Import Translation Memory",
          "request": {
            "name": "Import Translation Memory",
            "description": {
              "content": "Generates an asynchronous import operation. \n<br>\n<br> Read more about prerequisites and limitations on the [official documentation center](https://docs.rws.com/791595/741139/trados-enterprise/importing-tm-content).\n<br>\nNote: The order of the multipart form parameter must be implemented as such: properties first, file second.\n<br>\nUse the Poll Translation Memory Import endpoint to poll until the import status is `done`.<br>\nTo track the progress of the import please refer to [Poll Translation Memory Import](../reference/Public-API.v1.json/paths/~1translation-memory~1imports~1{importId}/get).\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId",
                "imports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The identifier of the Translation Memory.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(Required) Translation Memory Import properties sent as a JSON inside a text part.",
                    "type": "text/plain"
                  },
                  "key": "properties",
                  "value": "[object Object]",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "(Required) The file to import into the translation memory.<br>Accepted file types: <b>.tmx</b>, <b>.sdltm</b>, <b>.zip</b>, <b>.tmx.gz</b>, <b>.sdlxliff</b>",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<string>",
                  "type": "text"
                }
              ]
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "080ca74b-e8a1-4853-8e97-ef1162d1f259",
          "name": "Poll Translation Memory Import",
          "request": {
            "name": "Poll Translation Memory Import",
            "description": {
              "content": "Polls a Translation Memory import operation. The import is finished when the status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "imports",
                ":importId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "importId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The import identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Translation Memory Export",
      "description": "Translation Memory Export",
      "item": [
        {
          "id": "bf6f35d2-e9e0-4788-9fcf-ad4e5d0db7a7",
          "name": "Export Translation Memory",
          "request": {
            "name": "Export Translation Memory",
            "description": {
              "content": "Generates an asynchronous export operation.\nUse the [Poll Translation Memory Export](../reference/Public-API.v1.json/paths/~1translation-memory~1exports~1{exportId}/get) endpoint to poll until the export status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                ":translationMemoryId",
                "exports"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "translationMemoryId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The translation memory identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"languageDirection\": {\n    \"sourceLanguage\": {\n      \"languageCode\": \"<string>\"\n    },\n    \"targetLanguage\": {\n      \"languageCode\": \"<string>\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1e17a8f5-c7ea-4b13-9494-e9939a97bf2e",
          "name": "Poll Translation Memory Export",
          "request": {
            "name": "Poll Translation Memory Export",
            "description": {
              "content": "Polls a translation memory via an export operation. The exported translation memory can be downloaded once the status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "exports",
                ":exportId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The export identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ad7dc52a-87f8-49af-abe5-c0538442c531",
          "name": "Download Exported Translation Memory",
          "request": {
            "name": "Download Exported Translation Memory",
            "description": {
              "content": "Downloads the exported translation memory in the `tmx.gz` format when the poll operation status is `done`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "translation-memory",
                "exports",
                ":exportId",
                "download"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "exportId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The export identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "User",
      "description": "User",
      "item": [
        {
          "id": "88fb45b0-ecb4-4052-a141-6dfb425ceccd",
          "name": "Get my User",
          "request": {
            "name": "Get my User",
            "description": {
              "content": "Retrieves the authenticated user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "me"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "959c18e7-ddcd-4ad2-ac8d-2181246e9177",
          "name": "List Users",
          "request": {
            "name": "List Users",
            "description": {
              "content": "Retrieves a list of all the users in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d9941b05-bbe8-4773-a4ce-b33e7947108d",
          "name": "Get User",
          "request": {
            "name": "Get User",
            "description": {
              "content": "Retrieves a user by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                ":userId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "userId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The user identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Workflow",
      "description": "Workflow",
      "item": [
        {
          "id": "be815c78-48d3-4ca6-9941-e129c0369c51",
          "name": "Get Workflow",
          "request": {
            "name": "Get Workflow",
            "description": {
              "content": "Retrieves a workflow by identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The workflow identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "485e670f-0cfd-45ce-88d8-2abdd9d67015",
          "name": "Update Workflow",
          "request": {
            "name": "Update Workflow",
            "description": {
              "content": "Updates the workflow in terms of: name, description, and task configuration (and its details). Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows",
                ":workflowId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "<string>",
                  "key": "workflowId",
                  "disabled": false,
                  "description": {
                    "content": "(Required) The workflow identifier.",
                    "type": "text/plain"
                  }
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"taskConfigurations\": [\n    {\n      \"taskTemplate\": {\n        \"id\": \"<string>\"\n      },\n      \"isSkipped\": \"<boolean>\",\n      \"assignees\": [\n        {\n          \"type\": \"user\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"vendorOrderTemplate\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"scope\": {\n        \"type\": \"targetLanguage\",\n        \"sourceLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"languageDirection\": {\n          \"id\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"taskTemplate\": {\n        \"id\": \"<string>\"\n      },\n      \"isSkipped\": \"<boolean>\",\n      \"assignees\": [\n        {\n          \"type\": \"projectCreator\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"projectManager\",\n          \"user\": {\n            \"id\": \"<string>\",\n            \"email\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"groups\": [\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"<string>\",\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"location\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\"\n                },\n                \"users\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n                  }\n                ]\n              }\n            ],\n            \"anonymized\": \"<boolean>\",\n            \"anonymizedUserName\": \"<string>\"\n          },\n          \"group\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"location\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"users\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/user-request detected>\"\n              }\n            ]\n          },\n          \"vendorOrderTemplate\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"scope\": {\n        \"type\": \"languageDirection\",\n        \"sourceLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"targetLanguage\": {\n          \"languageCode\": \"<string>\"\n        },\n        \"languageDirection\": {\n          \"id\": \"<string>\"\n        }\n      }\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "41772414-4e15-4fcf-ae82-6e1ec11e6fac",
          "name": "List Workflows",
          "request": {
            "name": "List Workflows",
            "description": {
              "content": "Retrieves all the workflows in an account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "workflows"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items to include inside the page.",
                    "type": "text/plain"
                  },
                  "key": "top",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of items that are skipped to reach the desired page.",
                    "type": "text/plain"
                  },
                  "key": "skip",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
                    "type": "text/plain"
                  },
                  "key": "location",
                  "value": "<string>,<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Options: <br> - `location`: all the resources located strictly in the folders from the 'location' parameter (default); <br> - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; <br> - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; <br> - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
                    "type": "text/plain"
                  },
                  "key": "locationStrategy",
                  "value": "location"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
                    "type": "text/plain"
                  },
                  "key": "sort",
                  "value": "<string>"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The identifier of the account where the request is executed.",
                  "type": "text/plain"
                },
                "key": "X-LC-Tenant",
                "value": "{{lc_tenant}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": null
          },
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Authentication (Start Here)",
      "item": [
        {
          "name": "Obtain a client credentials access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);\r",
                  "pm.collectionVariables.set(\"lc_access_token\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                },
                {
                  "key": "audience",
                  "value": "https://api.sdl.com",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "https://sdl-prod.eu.auth0.com/oauth/token",
              "protocol": "https",
              "host": [
                "sdl-prod",
                "eu",
                "auth0",
                "com"
              ],
              "path": [
                "oauth",
                "token"
              ]
            }
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://lc-api.sdl.com/public-api/v1"
    },
    {
      "key": "lc_access_token",
      "value": ""
    },
    {
      "key": "lc_tenant",
      "value": ""
    }
  ],
  "info": {
    "_postman_id": "3b367b90-e31b-4bea-bf93-644ddd7743a8",
    "name": "RWS Language Cloud API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The RWS Language Cloud public API.",
      "type": "text/plain"
    }
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{lc_access_token}}",
        "type": "string"
      }
    ]
  }
}
